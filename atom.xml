<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Louie&#39;s Blog</title>
  <subtitle>黄刘胤的博客 Louie&#39;s blog</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hlyin.space/"/>
  <updated>2016-12-25T07:36:01.000Z</updated>
  <id>http://hlyin.space/</id>
  
  <author>
    <name>Louie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>Logistic回归与梯度下降算法</title>
    <link href="http://hlyin.space/Recommender-System/Logistic_GradientDescent/"/>
    <id>http://hlyin.space/Recommender-System/Logistic_GradientDescent/</id>
    <published>2016-12-10T08:00:00.000Z</published>
    <updated>2016-12-25T07:36:01.000Z</updated>
    
    <content type="html">&lt;p&gt;假设数据集有m行(1…m)，每个样本n个特征(1…n): &lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;x = (x_{1}, x_{2}, ..., x_{n})&lt;/script&gt;&lt;p&gt;1.定义估计函数:&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;h(x) = h_{\theta}(x) = g(\theta_{1} + \theta_{2}x_{2} + ... + \theta_{n}x_{n})&lt;/script&gt;&lt;p&gt;令$x_{1} = 1.0$，则有&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;h(x) = h_{\theta}(x) = g(\theta_{1}x_{1} + \theta_{2}x_{2} + ... + \theta_{n}x_{n}) = g(\theta^{T}x)&lt;/script&gt;&lt;p&gt;g函数使用Sigmoid函数 $\sigma(z) = \frac{1}{1+e^{-z}}$&lt;/p&gt;
&lt;p&gt;参数$θ$，表示各特征的权重&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2.定义&lt;strong&gt;损失函数&lt;/strong&gt;(loss function) / 错误函数(error function)，描述h函数不好的程度，用J函数表示&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;J(\theta) = \frac{1}{2} \sum_{i=1}^{m}(h_{\theta}(x^{(i)}) - y^{(i)})^2&lt;/script&gt;&lt;p&gt;其中y为分类类别，Logistic回归中一般为2类，用0和1表示，概率分别为&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\left\{
\begin{aligned}
P(y=1|x;\theta) &amp; =  h_{\theta}(x) \\
P(y=0|x;\theta) &amp; =  1 - h_{\theta}(x) 
\end{aligned}
\right.&lt;/script&gt;&lt;p&gt;分号用于区别参数，当$\theta = \theta$时，样本x分类为1的概率&lt;/p&gt;
&lt;p&gt;使用梯度下降法找到使$J(\theta)$最小的$θ$&lt;/p&gt;
&lt;p&gt;下面就是计算梯度下降的方法：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;随机初始化θ，可以让θ是一个全零的向量&lt;/li&gt;
&lt;li&gt;迭代，如果新的θ能够获得使得J(θ)更小&lt;/li&gt;
&lt;li&gt;如果J(θ)能够继续减小，那么回到2，继续执行&lt;/li&gt;
&lt;/ol&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;梯度是函数增长最快的方向（随机上升加上梯度，越接近局部最大值梯度越小，局部最大值点的梯度为0），梯度的负方向是函数下降最快的方向（随机下降减去梯度，越接近局部最小值梯度越小，局部极小值点的梯度为0），对于线性函数，梯度是其斜率。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;对$J(\theta)$求偏导，以对第j个分量求偏导为例：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;J(\theta) = \frac{1}{2} \sum_{i=1}^{m}(h_{\theta}(x^{(i)}) - y^{(i)})^2&lt;/script&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/blog_image/logistic/p1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;其中 i=1…m，表示样本，j=1…n，表示特征，$x_{j}^{(i)}$表示第i个样本的第j个特征&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;所以&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\theta_{j} := \theta_{j} - \alpha \frac{\partial}{\partial\theta_{j}}J(\theta) = \theta_{j} - \alpha\sum_{i=1}^{m}(h_{\theta}(x^{(i)}) - y^{(i)})x_{j}^{(i)} = \theta_{j} - \alpha \left ( h_{\theta}(x) - y \right ) x_{j}&lt;/script&gt;&lt;p&gt;若用梯度上升（梯度下降最小化损失函数，而梯度上升最大化似然函数），则&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\theta_{j} := \theta_{j} + \alpha \frac{\partial}{\partial\theta_{j}}J(\theta) = \theta_{j} + \alpha\sum_{i=1}^{m}(y^{(i)} - h_{\theta}(x^{(i)}))x_{j}^{(i)} = \theta_{j} + \alpha \left (y - h_{\theta}(x)\right ) x_{j}&lt;/script&gt;&lt;p&gt;对于输入的训练集x，m个样本，每个样本n个特征值&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;x 
= \begin{bmatrix} x^{(1)} \\ x^{(2)} \\ ... \\ x^{(m)} \end{bmatrix} 
= \begin{bmatrix} x_{1}^{(1)} &amp; x_{2}^{(1)} &amp; ... &amp; x_{n}^{(1)} \\ x_{1}^{(2)} &amp; x_{2}^{(2)} &amp; ... &amp; x_{n}^{(2)} \\ ... \\ x_{1}^{(m)} &amp; x_{2}^{(m)} &amp; ... &amp; x_{n}^{(m)} \end{bmatrix}&lt;/script&gt;&lt;p&gt;y为实际值&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;y = \begin{bmatrix} y^{(1)} \\ y^{(2)} \\ ... \\ y^{(m)} \end{bmatrix}&lt;/script&gt;&lt;p&gt;带求参数$\theta$为&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\theta = \begin{bmatrix} \theta_{1} \\ \theta_{2} \\ ... \\ \theta_{n} \end{bmatrix}&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;h_{\theta}(x) 
= \begin{bmatrix} h_{\theta}(x^{(1)}) \\ h_{\theta}(x^{(2)}) \\ ... \\ h_{\theta}(x^{(m)}) \end{bmatrix}
= \begin{bmatrix} g(\theta_{1}x_{1}^{(1)} + \theta_{2}x_{2}^{(1)} + ... + \theta_{n}x_{n}^{(1)}) \\  g(\theta_{1}x_{1}^{(2)} + \theta_{2}x_{2}^{(2)} + ... + \theta_{n}x_{n}^{(2)}) \\ ... \\ g(\theta_{1}x_{1}^{(m)} + \theta_{2}x_{2}^{(m)} + ... + \theta_{n}x_{n}^{(m)})\end{bmatrix}
= g(x\cdot\theta)&lt;/script&gt;&lt;p&gt;记$E = h_{\theta}(x) - y$&lt;/p&gt;
&lt;p&gt;则&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;E = h_{\theta}(x) - y = g(x\cdot\theta) - y&lt;/script&gt;&lt;p&gt;所以&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/blog_image/logistic/p2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;可得&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\begin{bmatrix} \theta_{1} \\ \theta_{2} \\ ... \\ \theta_{n} \end{bmatrix}
:= \begin{bmatrix} \theta_{1} \\ \theta_{2} \\ ... \\ \theta_{n} \end{bmatrix} - \alpha \cdot \begin{bmatrix} x_{1}^{(1)} + x_{1}^{(2)} + ... + x_{1}^{(m)} \\  x_{2}^{(1)} + x_{2}^{(2)} + ... + x_{2}^{(m)} \\ ... \\ x_{n}^{(1)} + x_{n}^{(2)} + ... + x_{n}^{(m)} \end{bmatrix} \cdot E&lt;/script&gt;&lt;p&gt;也即&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\theta := \theta - \alpha \cdot x^{T} \cdot E = \theta - \alpha \cdot x^{T} \cdot (g(x\cdot\theta) - y)&lt;/script&gt;&lt;p&gt;若用梯度上升算法（Machine Learning in Action中所使用的），则为:&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\theta := \theta + \alpha \cdot x^{T} \cdot (y - g(x\cdot\theta))&lt;/script&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;参考资料：&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blog.chinaunix.net/uid-25267728-id-4678802.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习算法之梯度下降法 &lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blog.csdn.net/woxincd/article/details/7040944&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;梯度下降法&lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;&lt;a href=&quot;http://blog.chinaunix.net/xmlrpc.php?r=blog/article&amp;amp;uid=9162199&amp;amp;id=4223505&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;【机器学习笔记1】Logistic回归总结 &lt;/a&gt;&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;假设数据集有m行(1…m)，每个样本n个特征(1…n): &lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;x = (x_{1}, x_{2}, ..., x_{n})&lt;/script&gt;&lt;p&gt;1.定义估计函数:&lt;/p&gt;
&lt;script t
    
    </summary>
    
      <category term="Recommender System" scheme="http://hlyin.space/categories/Recommender-System/"/>
    
    
  </entry>
  
  <entry>
    <title>修正余弦和Pearson相关系数在CF中的应用</title>
    <link href="http://hlyin.space/Recommender-System/AdjustedCosineSimandPearsoninCF/"/>
    <id>http://hlyin.space/Recommender-System/AdjustedCosineSimandPearsoninCF/</id>
    <published>2016-11-25T08:00:00.000Z</published>
    <updated>2016-12-25T07:18:37.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;1-Item-based&quot;&gt;&lt;a href=&quot;#1-Item-based&quot; class=&quot;headerlink&quot; title=&quot;1. Item-based&quot;&gt;&lt;/a&gt;1. Item-based&lt;/h2&gt;&lt;h3 id=&quot;1-1-余弦相似度-cosine-similarity&quot;&gt;&lt;a href=&quot;#1-1-余弦相似度-cosine-similarity&quot; class=&quot;headerlink&quot; title=&quot;1.1 余弦相似度(cosine similarity)&quot;&gt;&lt;/a&gt;1.1 余弦相似度(cosine similarity)&lt;/h3&gt;&lt;p&gt;对于item-based，计算物品相似度，参与计算的是两个物品评分向量（即用户-评分矩阵的列），假设用户-评分矩阵是m*n规模。&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\vec{item_i} = \begin{bmatrix} r_{1i} \\ r_{2i} \\ ... \\ r_{mi} \end{bmatrix}, \quad\quad \vec{item_j} = \begin{bmatrix} r_{1j} \\ r_{2j} \\ ... \\ r_{mj} \end{bmatrix}&lt;/script&gt;&lt;p&gt;rui表示用户u对物品i的评分&lt;/p&gt;
&lt;p&gt;余弦定理计算这两个向量的相似度（$cos\theta$），有：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;w_{ij} = \frac{\sum_{u \in U}r_{ui} \cdot r_{uj}}{\sqrt{\sum_{u \in U}r_{ui}^2 \sum_{u \in U}r_{uj}^2}}&lt;/script&gt;&lt;p&gt;U是同时评价过物品i和物品j的用户的交集（用户交集）&lt;/p&gt;
&lt;h3 id=&quot;1-2-修正的余弦相似度-adjusted-cosine-similarity&quot;&gt;&lt;a href=&quot;#1-2-修正的余弦相似度-adjusted-cosine-similarity&quot; class=&quot;headerlink&quot; title=&quot;1.2 修正的余弦相似度(adjusted cosine similarity)&quot;&gt;&lt;/a&gt;1.2 修正的余弦相似度(adjusted cosine similarity)&lt;/h3&gt;&lt;p&gt;物品评分向量的各个分量由不同的用户给出的评分构成，而不同用户的评分尺度可能不同，比如用户u倾向于给高分，用户v倾向于给低分，所以去中心化后可以得到更好的效果，不直接比较$r&lt;em&gt;{ui}$和$r&lt;/em&gt;{vj}$，而是比较$r&lt;em&gt;{ui} - \bar{r_u}$和$r&lt;/em&gt;{vj} - \bar{r_v}$。&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\vec i = \begin{bmatrix} r_{1i} - \bar{r_1} \\ r_{2i} - \bar{r_2} \\ ... \\ r_{mi} - \bar{r_m} \end{bmatrix}, \quad\quad \vec j = \begin{bmatrix} r_{1j} - \bar{r_1} \\ r_{2j} - \bar{r_2} \\ ... \\ r_{mj} - \bar{r_m} \end{bmatrix}&lt;/script&gt;&lt;p&gt;修正的余弦相似度：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;w_{ij} = \frac{\sum_{u \in U}(r_{ui} - \bar{r_u}) \cdot ( r_{uj} - \bar{r_u})}{\sqrt{\sum_{u \in U}(r_{ui} - \bar {r_{u}})^2 \sum_{u \in U}(r_{uj} - \bar {r_{u}})^2}}&lt;/script&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;去中心化考虑的是&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;用户u&lt;/strong&gt;&lt;/font&gt;打分的平均值，减去的是$\bar {r_u}$&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;1-3-Pearson相关系数-Pearson-correlation-coefficient&quot;&gt;&lt;a href=&quot;#1-3-Pearson相关系数-Pearson-correlation-coefficient&quot; class=&quot;headerlink&quot; title=&quot;1.3 Pearson相关系数(Pearson correlation coefficient)&quot;&gt;&lt;/a&gt;1.3 Pearson相关系数(Pearson correlation coefficient)&lt;/h3&gt;&lt;p&gt;两向量的协方差除以它们标准差的积：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\rho_{XY} = \frac{cov(X, Y)}{\sqrt{D(X)}\sqrt{D(Y)}} = \frac{\frac{1}{N - 1}\sum_{i=1}^{N}(X_i - \bar X)(Y_i - \bar Y)}{\sqrt{\frac{1}{N-1}\sum_{i=1}^{n}(x_i - \bar x)^2}\sqrt{\frac{1}{N-1}\sum_{i=1}^{n}(y_i - \bar y)^2}} = \frac{\sum_{i=1}^{N}(X_i - \bar X)(Y_i - \bar Y)}{\sqrt{\sum_{i=1}^{n}(x_i - \bar x)^2}\sqrt{\sum_{i=1}^{n}(y_i - \bar y)^2}}&lt;/script&gt;&lt;p&gt;在item-based里，公式为：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;w_{ij} = \frac{\sum_{u \in U}(r_{ui} - \bar{r_i}) \cdot ( r_{uj} - \bar{r_j})}{\sqrt{\sum_{u \in U}(r_{ui} - \bar {r_{i}})^2 \sum_{u \in U}(r_{uj} - \bar {r_{j}})^2}}&lt;/script&gt;&lt;p&gt;&lt;br&gt;&lt;br&gt;去中心化考虑的是&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;物品i&lt;/strong&gt;&lt;/font&gt;被打分的平均值（参与计算的是两个物品向量），减去的是$\bar {r_i}$ &lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;2-User-based&quot;&gt;&lt;a href=&quot;#2-User-based&quot; class=&quot;headerlink&quot; title=&quot;2. User-based&quot;&gt;&lt;/a&gt;2. User-based&lt;/h2&gt;&lt;h3 id=&quot;2-1-修正的余弦相似度&quot;&gt;&lt;a href=&quot;#2-1-修正的余弦相似度&quot; class=&quot;headerlink&quot; title=&quot;2.1 修正的余弦相似度&quot;&gt;&lt;/a&gt;2.1 修正的余弦相似度&lt;/h3&gt;&lt;p&gt;对于user-based，计算用户相似度，参与计算的是两个用户评分向量（即用户-评分矩阵的行），&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\vec{user_u} = \begin{bmatrix} r_{u1}, r_{u2}, ... , r_{un} \end{bmatrix}&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;\vec{user_v} = \begin{bmatrix} r_{v1}, r_{v2}, ... , r_{vn} \end{bmatrix}&lt;/script&gt;&lt;p&gt;因为比较的两个用户u、v可能存在评分尺度不同（这里是参与计算相似度的两个用户，item-based里是共同评价过某一对物品的多个用户），需要去中心化。&lt;/p&gt;
&lt;p&gt;修正的余弦相似度：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;w_{uv} = \frac{\sum_{p \in P}(r_{up} - \bar{r_u}) \cdot ( r_{vp} - \bar{r_v})}{\sqrt{\sum_{p \in P}(r_{up} - \bar {r_{u}})^2 \sum_{p \in P}(r_{vp} - \bar {r_{v}})^2}}&lt;/script&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;去中心化考虑的是仍然是&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;用户u&lt;/strong&gt;&lt;/font&gt;打分的平均值，减去的是$\bar {r_u}$ &lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-2-Pearson相关系数&quot;&gt;&lt;a href=&quot;#2-2-Pearson相关系数&quot; class=&quot;headerlink&quot; title=&quot;2.2 Pearson相关系数&quot;&gt;&lt;/a&gt;2.2 Pearson相关系数&lt;/h3&gt;&lt;p&gt;P是用户u和用户v都评价过的物品的交集（物品交集）&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;w_{uv} = \frac{\sum_{p \in P}(r_{up} - \bar{r_u}) \cdot ( r_{vp} - \bar{r_v})}{\sqrt{\sum_{p \in P}(r_{up} - \bar {r_{u}})^2 \sum_{p \in P}(r_{vp} - \bar {r_{v}})^2}}&lt;/script&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;去中心化考虑的是&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;用户u&lt;/strong&gt;&lt;/font&gt;打分的平均值（参与计算的是两个用户向量），减去的是$\bar {r_u}$ &lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;1-Item-based&quot;&gt;&lt;a href=&quot;#1-Item-based&quot; class=&quot;headerlink&quot; title=&quot;1. Item-based&quot;&gt;&lt;/a&gt;1. Item-based&lt;/h2&gt;&lt;h3 id=&quot;1-1-余弦相似度-cosine-simila
    
    </summary>
    
      <category term="Recommender System" scheme="http://hlyin.space/categories/Recommender-System/"/>
    
    
  </entry>
  
  <entry>
    <title>CF代码实现</title>
    <link href="http://hlyin.space/Recommender-System/CFcode/"/>
    <id>http://hlyin.space/Recommender-System/CFcode/</id>
    <published>2016-11-22T08:00:00.000Z</published>
    <updated>2016-12-25T07:24:57.000Z</updated>
    
    <content type="html">&lt;p&gt;基于物品的协同过滤&lt;/p&gt;
&lt;h3 id=&quot;1-推荐系统实战-项亮-：&quot;&gt;&lt;a href=&quot;#1-推荐系统实战-项亮-：&quot; class=&quot;headerlink&quot; title=&quot;1. 推荐系统实战(项亮)：&quot;&gt;&lt;/a&gt;1. 推荐系统实战(项亮)：&lt;/h3&gt;&lt;h4 id=&quot;1-1-加载数据集&quot;&gt;&lt;a href=&quot;#1-1-加载数据集&quot; class=&quot;headerlink&quot; title=&quot;1.1 加载数据集&quot;&gt;&lt;/a&gt;1.1 加载数据集&lt;/h4&gt;&lt;p&gt;构造训练集train，加载u3.base，是一个嵌套字典&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;userId1 ： &amp;#123;itemId1 : rating11, itemId2: rating12, ...&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;userId2 ： &amp;#123;itemId1 : rating21, itemId2: rating22, ...&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;... &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;构造测试集test，加载u3.test，同样，是一个嵌套字典&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;userId1 ： &amp;#123;itemId1 : rating11, itemId2: rating12, ...&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;userId2 ： &amp;#123;itemId1 : rating21, itemId2: rating22, ...&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4 id=&quot;1-2-计算物品相似度矩阵&quot;&gt;&lt;a href=&quot;#1-2-计算物品相似度矩阵&quot; class=&quot;headerlink&quot; title=&quot;1.2 计算物品相似度矩阵&quot;&gt;&lt;/a&gt;1.2 计算物品相似度矩阵&lt;/h4&gt;&lt;h5 id=&quot;1-2-1-计算共现矩阵C&quot;&gt;&lt;a href=&quot;#1-2-1-计算共现矩阵C&quot; class=&quot;headerlink&quot; title=&quot;1.2.1 计算共现矩阵C&quot;&gt;&lt;/a&gt;1.2.1 计算共现矩阵C&lt;/h5&gt;&lt;p&gt;即找出被2个或多个用户同时有过行为(此处为评过分)的物品，计算出共现矩阵可以避免后面在计算相似度的时候求两个物品的交集（很多物品可能没有交集，因而会浪费时间）&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#共现矩阵&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;C = dict()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;N = dict()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; user, items &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; train.items():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; items.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        C.setdefault(i,&amp;#123;&amp;#125;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        N[i] = N.get(i, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; items.keys():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; i == j:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            C[i][j] = C.get(i, &amp;#123;&amp;#125;).get(j, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;) + &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#不存在时默认值为0(不存在i时默认C[i]=&amp;#123;&amp;#125;, 不存在j时默认C[i][j]=0)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h5 id=&quot;1-2-2-计算相似度矩阵&quot;&gt;&lt;a href=&quot;#1-2-2-计算相似度矩阵&quot; class=&quot;headerlink&quot; title=&quot;1.2.2 计算相似度矩阵&quot;&gt;&lt;/a&gt;1.2.2 计算相似度矩阵&lt;/h5&gt;&lt;p&gt;没有使用评分数据，相似度的计算按照 $W_{ij} = \frac{|N(i)\bigcap N(j)|}{\sqrt(|N(i)||N(j)|}$，|N(i)|是喜欢物品i的用户数，公式代表：喜欢物品i的用户中有多少比例的用户也喜欢物品j&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#计算相似度矩阵&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;W = dict()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i, related_items &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; C.items():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j, cij &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; related_items.items():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        W.setdefault(i,&amp;#123;&amp;#125;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        W[i].setdefault(j,&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)  &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        W[i][j] = cij / sqrt(N[i] * N[j])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;comment&quot;&gt;#W相似度矩阵中，每个物品保留最相似的50个&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i, related_items &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; W.items():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    tmp = sorted(W[i].items(), key = operator.itemgetter(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), reverse = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; : &lt;span class=&quot;number&quot;&gt;50&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    W[i] = dict(tmp) &lt;span class=&quot;comment&quot;&gt;#dict排序后的tmp为list，需要重新转成dict&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h5 id=&quot;1-2-3-获取推荐&quot;&gt;&lt;a href=&quot;#1-2-3-获取推荐&quot; class=&quot;headerlink&quot; title=&quot;1.2.3 获取推荐&quot;&gt;&lt;/a&gt;1.2.3 获取推荐&lt;/h5&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getRecommendation&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(train, user_id, W, K, N)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    计算和物品j最相似的K个&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rank = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    userRated = train[user_id]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#对user_id有过行为的物品i，找出与i相似度最高的K个物品&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; i, rui &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; userRated.items(): &lt;span class=&quot;comment&quot;&gt;#物品id和用户u对i的兴趣程度rui，隐返回数据集单一行为，可置1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sortedWi = sorted(W[i].items(), key = operator.itemgetter(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), reverse = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; : K]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; j, wj &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; sortedWi:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; j &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; userRated: &lt;span class=&quot;comment&quot;&gt;#已经评价过&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rank.setdefault(j, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rank[j] += &lt;span class=&quot;number&quot;&gt;1.0&lt;/span&gt; * wj &lt;span class=&quot;comment&quot;&gt;#rui * wj，隐反馈数据集，如果用户u对i有过行为(假定只有单一行为)，则用户u对i的兴趣度定为1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#排序后返回&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sorted(rank.items(), key = operator.itemgetter(&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;), reverse = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)[: N]&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;2-集体智慧编程-Toby-Segaran&quot;&gt;&lt;a href=&quot;#2-集体智慧编程-Toby-Segaran&quot; class=&quot;headerlink&quot; title=&quot;2. 集体智慧编程(Toby Segaran)&quot;&gt;&lt;/a&gt;2. 集体智慧编程(Toby Segaran)&lt;/h3&gt;&lt;h4 id=&quot;2-1-加载数据集&quot;&gt;&lt;a href=&quot;#2-1-加载数据集&quot; class=&quot;headerlink&quot; title=&quot;2.1 加载数据集&quot;&gt;&lt;/a&gt;2.1 加载数据集&lt;/h4&gt;&lt;p&gt;构造用户-物品数据集user_items，加载u.data，是一个嵌套字典&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;userId1 ： &amp;#123;itemId1 : rating11, itemId2: rating12, ...&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;userId2 ： &amp;#123;itemId1 : rating21, itemId2: rating22, ...&amp;#125;,&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;构造物品表items，是一个字典&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;itemId1 : title1, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;itemId2 : title2, &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;...&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4 id=&quot;2-2-计算物品相似度矩阵&quot;&gt;&lt;a href=&quot;#2-2-计算物品相似度矩阵&quot; class=&quot;headerlink&quot; title=&quot;2.2 计算物品相似度矩阵&quot;&gt;&lt;/a&gt;2.2 计算物品相似度矩阵&lt;/h4&gt;&lt;h5 id=&quot;2-2-1-构建物品-用户倒排表&quot;&gt;&lt;a href=&quot;#2-2-1-构建物品-用户倒排表&quot; class=&quot;headerlink&quot; title=&quot;2.2.1 构建物品-用户倒排表&quot;&gt;&lt;/a&gt;2.2.1 构建物品-用户倒排表&lt;/h5&gt;&lt;p&gt;&lt;code&gt;item_users = buildReverseTable(user_items)&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h5 id=&quot;2-2-2-计算相似度&quot;&gt;&lt;a href=&quot;#2-2-2-计算相似度&quot; class=&quot;headerlink&quot; title=&quot;2.2.2 计算相似度&quot;&gt;&lt;/a&gt;2.2.2 计算相似度&lt;/h5&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;calcItemSimlarity&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(user_items, n = &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;string&quot;&gt;&quot;&quot;&quot;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    计算物品相似度矩阵, 保存每个物品最相似的n个物品&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    实现中，两物品的评分交集在topNmatches-sim_pearson中计算&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    而实际上很多物品可能没有交集，因而浪费时间&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    可以在这里先计算物品的共现矩阵C，再遍历C计算相似度，此时sim_pearson中不再求评分交集&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &quot;&quot;&quot;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    itemSim = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;#构建物品-用户倒排表&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    item_users = buildReverseTable(user_items)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    count = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt; &lt;span class=&quot;comment&quot;&gt;#计数变量&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; item &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; item_users:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        count += &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; count % &lt;span class=&quot;number&quot;&gt;100&lt;/span&gt; == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;print&lt;/span&gt; &lt;span class=&quot;string&quot;&gt;&quot;%d / %d&quot;&lt;/span&gt; % (count, len(item_users))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        sim = topNMatches(item_users, item, n = n) &lt;span class=&quot;comment&quot;&gt;#默认pearson相关系数&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        itemSim[item] = sim&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    storeItemSimlarity(itemSim, &lt;span class=&quot;string&quot;&gt;&#39;itemSimilarity.txt&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; itemSim&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;topNMatches遍历物品-用户倒排表，返回与物品item最相似的n个物品，相似度使用pearson相关系数计算（def sim_pearson(dataSet, v1, v2)，在此函数中需要先求v1、v2的交集）&lt;/p&gt;
&lt;p&gt;最后pickle存储计算的结果&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;storeItemSimlarity&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(itemSim, filename)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; pickle&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fw = open(filename, &lt;span class=&quot;string&quot;&gt;&#39;w&#39;&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    pickle.dump(itemSim, fw)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    fw.close&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4 id=&quot;2-3-获取推荐&quot;&gt;&lt;a href=&quot;#2-3-获取推荐&quot; class=&quot;headerlink&quot; title=&quot;2.3 获取推荐&quot;&gt;&lt;/a&gt;2.3 获取推荐&lt;/h4&gt;&lt;p&gt;&lt;code&gt;def getRecommendedItems(user_items, itemSim, user):&lt;/code&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;&lt;p&gt;为user（id）获取推荐物品&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;先从user_items中获取user用户评价过的物品&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;遍历这些物品：&lt;br&gt; &amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp;对每个物品，从相似度矩阵itemSim中找到与其相似的物品，对用户没有评价过的那些物品，计算其评分与相似度乘积之和score以及相似度之和totalSim&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;相除得到预测评分&lt;/p&gt;
&lt;/li&gt;
&lt;li&gt;&lt;p&gt;降序排序后返回&lt;/p&gt;
&lt;/li&gt;
&lt;/ol&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;getRecommendedItems&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(user_items, itemSim, user)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    userRatings = user_items[user]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    scores = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    totalSim = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; (item, rating) &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; userRatings.items():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(other, similarity) &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; itemSim[item]:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; other &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; userRatings:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;                &lt;span class=&quot;keyword&quot;&gt;continue&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            scores.setdefault(other, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            scores[other] += similarity * rating&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            totalSim.setdefault(other, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            totalSim[other] += similarity&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    rank = []&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt; item, score &lt;span class=&quot;keyword&quot;&gt;in&lt;/span&gt; scores.items():&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; totalSim[item] == &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;: &lt;span class=&quot;comment&quot;&gt;#可能有除0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            &lt;span class=&quot;keyword&quot;&gt;pass&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            rank.append((score / totalSim[item], item)) &lt;span class=&quot;comment&quot;&gt;#返回的是(预测评分, 物品id)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;# rank = [(score / totalSim[item], items[item]) for item, score in scores.items()]&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; sorted(rank, reverse = &lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;基于物品的协同过滤&lt;/p&gt;
&lt;h3 id=&quot;1-推荐系统实战-项亮-：&quot;&gt;&lt;a href=&quot;#1-推荐系统实战-项亮-：&quot; class=&quot;headerlink&quot; title=&quot;1. 推荐系统实战(项亮)：&quot;&gt;&lt;/a&gt;1. 推荐系统实战(项亮)：&lt;/h3&gt;&lt;h4 id=&quot;1-
    
    </summary>
    
      <category term="Recommender System" scheme="http://hlyin.space/categories/Recommender-System/"/>
    
    
  </entry>
  
  <entry>
    <title>Pearson相关系数</title>
    <link href="http://hlyin.space/Recommender-System/PearsonCorrCoef/"/>
    <id>http://hlyin.space/Recommender-System/PearsonCorrCoef/</id>
    <published>2016-11-20T08:00:00.000Z</published>
    <updated>2016-12-21T07:38:29.000Z</updated>
    
    <content type="html">&lt;p&gt;协方差&lt;br&gt;numpy.cov&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;cov(X, Y) = E\left ( (X - E(X))(Y - E(Y)) \right) = E(XY) - E(X)E(Y)&lt;/script&gt;&lt;p&gt;样本协方差&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;cov(X, Y) = \frac{1}{N - 1}\sum_{i=1}^{N}(X_i - \bar X)(Y_i - \bar Y)&lt;/script&gt;&lt;p&gt;除以N-1是为了保证无偏性&lt;/p&gt;
&lt;p&gt;pearson相关系数&lt;br&gt;numpy.corrcoef&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\rho_{XY} = \frac{cov(X, Y)}{\sqrt{D(X)}\sqrt{D(Y)}}&lt;/script&gt;&lt;p&gt;即&lt;br&gt;np.corrcoef(x, y) = np.cov(x, y, &lt;font color=&quot;red&quot;&gt;bias = True&lt;/font&gt;) / (std(x) * std(y))&lt;/p&gt;
&lt;p&gt;std(x)求标准差, var(x)求方差&lt;/p&gt;
&lt;p&gt;np.cov中不指定bias时(bias = False, 无偏)是除以N-1，指定bias为True或1时是除以N&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;&lt;span class=&quot;keyword&quot;&gt;import&lt;/span&gt; numpy &lt;span class=&quot;keyword&quot;&gt;as&lt;/span&gt; np&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;x = [&lt;span class=&quot;number&quot;&gt;-2.1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;4.3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;y = [&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;1.1&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;0.12&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;np.cov(x,y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ &lt;span class=&quot;number&quot;&gt;11.71&lt;/span&gt;      ,  &lt;span class=&quot;number&quot;&gt;-4.286&lt;/span&gt;     ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [ &lt;span class=&quot;number&quot;&gt;-4.286&lt;/span&gt;     ,   &lt;span class=&quot;number&quot;&gt;2.14413333&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;np.cov(x,y,bias=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ &lt;span class=&quot;number&quot;&gt;7.80666667&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;-2.85733333&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;number&quot;&gt;-2.85733333&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;1.42942222&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;np.cov(x,y,bias=&lt;span class=&quot;keyword&quot;&gt;True&lt;/span&gt;) / (std(x) * std(y))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ &lt;span class=&quot;number&quot;&gt;2.33696686&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;-0.85535781&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;number&quot;&gt;-0.85535781&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;0.42790508&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;np.corrcoef(x,y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;        , &lt;span class=&quot;number&quot;&gt;-0.85535781&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;number&quot;&gt;-0.85535781&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;        ]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;矩阵的第i行j列数据表示第i组数与第j组数的相关系数，对角线为1(自己和自己的相关为1，第0行0列除以 (std(x) * std(x))，第1行1列除以 (std(y) * std(y)) )&lt;/p&gt;
&lt;p&gt;pearson相关系数也可以以下列公式计算&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;\rho_{XY} = \frac{cov(X, Y)}{\sqrt{D(X)}\sqrt{D(Y)}} = \frac{\frac{1}{N - 1}\sum_{i=1}^{N}(X_i - \bar X)(Y_i - \bar Y)}{\sqrt{\frac{1}{N-1}\sum_{i=1}^{n}(x_i - \bar x)^2}\sqrt{\frac{1}{N-1}\sum_{i=1}^{n}(y_i - \bar y)^2}} = \frac{\sum_{i=1}^{N}(X_i - \bar X)(Y_i - \bar Y)}{\sqrt{\sum_{i=1}^{n}(x_i - \bar x)^2}\sqrt{\sum_{i=1}^{n}(y_i - \bar y)^2}}&lt;/script&gt;&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;num = sum((x-mean(x))*(y-mean(y)))&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;dex = sum((x - mean(x))**&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)**&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;dey = sum((y - mean(y))**&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;)**&lt;span class=&quot;number&quot;&gt;0.5&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;denom = dex * dey&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;num / denom &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;number&quot;&gt;-0.85535780952279472&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;np.corrcoef有一个参数rowvar，帮助文档对其的解释为:&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;rowvar&lt;/strong&gt; : int, optional&lt;br&gt;If rowvar is non-zero (default), then each row represents a variable, with observations in the columns. Otherwise, the relationship is transposed: each column represents a variable, while the rows contain observations.&lt;/p&gt;
&lt;p&gt;也就是说，默认的np.corrcoef(x, y)是计算&lt;strong&gt;行向量&lt;/strong&gt;的相似度，x、y都是行向量，如x = [-2.1, -1,  4.3]&lt;br&gt;如果计算&lt;strong&gt;列向量&lt;/strong&gt;的相似度，可以将rowvar的值置为0&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;x = [&lt;span class=&quot;number&quot;&gt;-2.1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;-1&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;4.3&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;y = [&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;1.1&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;0.12&lt;/span&gt;]&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;Mx = mat(x)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;Mx&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[&lt;span class=&quot;number&quot;&gt;-2.1&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;-1.&lt;/span&gt; ,  &lt;span class=&quot;number&quot;&gt;4.3&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;MxT = Mx.T&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;MxT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[&lt;span class=&quot;number&quot;&gt;-2.1&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [&lt;span class=&quot;number&quot;&gt;-1.&lt;/span&gt; ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ &lt;span class=&quot;number&quot;&gt;4.3&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;My = mat(y)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;My&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[ &lt;span class=&quot;number&quot;&gt;3.&lt;/span&gt;  ,  &lt;span class=&quot;number&quot;&gt;1.1&lt;/span&gt; ,  &lt;span class=&quot;number&quot;&gt;0.12&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;MyT = My.T&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;MyT&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;matrix([[ &lt;span class=&quot;number&quot;&gt;3.&lt;/span&gt;  ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ &lt;span class=&quot;number&quot;&gt;1.1&lt;/span&gt; ],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        [ &lt;span class=&quot;number&quot;&gt;0.12&lt;/span&gt;]])&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;&amp;gt;&amp;gt;&amp;gt; &lt;/span&gt;np.corrcoef(MxT, MyT, rowvar=&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;array([[ &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;        , &lt;span class=&quot;number&quot;&gt;-0.85535781&lt;/span&gt;],&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;       [&lt;span class=&quot;number&quot;&gt;-0.85535781&lt;/span&gt;,  &lt;span class=&quot;number&quot;&gt;1.&lt;/span&gt;        ]])&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;协方差&lt;br&gt;numpy.cov&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;cov(X, Y) = E\left ( (X - E(X))(Y - E(Y)) \right) = E(XY) - E(X)E(Y)&lt;/script&gt;&lt;
    
    </summary>
    
      <category term="Recommender System" scheme="http://hlyin.space/categories/Recommender-System/"/>
    
    
  </entry>
  
  <entry>
    <title>信息熵与分类算法[转]</title>
    <link href="http://hlyin.space/Recommender-System/Information_entropy/"/>
    <id>http://hlyin.space/Recommender-System/Information_entropy/</id>
    <published>2016-09-20T07:00:00.000Z</published>
    <updated>2016-11-21T14:53:35.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;a href=&quot;http://gaofeihang.blog.163.com/blog/static/8450828520128139648199/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;转载链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在介绍熵之前，先从另一个概念说起：信息量&lt;/p&gt;
&lt;p&gt;世界杯决赛的两支球队中，哪支球队获得了冠军？在对球队实力没有任何了解的情况下，每支球队夺冠的概率都是1/2，&lt;br&gt;所以谁获得冠军这条信息的信息量是 $-log&lt;em&gt;{2}{\frac{1}{2}} = 1$ bit&lt;br&gt;如果信息是四强中的球队谁获得了冠军，它的信息量是 $-log&lt;/em&gt;{2}{\frac{1}{4}} = 2$ bit&lt;/p&gt;
&lt;p&gt;其实这正好对应了计算机对数字的表示，如果用二进制表示，每一位出现0和1的概率都是1/2，所以每一位的信息量是1bit。如果用十六进制表示，每一位出现任意一个符号的概率是1/16，所以每一位能表示 $-log&lt;em&gt;{2} {\frac{1}{16}} = 4$ bit。所以1位十六进制的信息量，和4位二进制信息量是相同的。&lt;br&gt;（求表示2种可能性最少需要几个数，$log&lt;/em&gt;{2}{2} = 1$，求表示4种可能性最少需要几个数，$log_{2}{4} = 2$ …）&lt;/p&gt;
&lt;p&gt;这样就比较好理解另一个经典的例子，英文有26个字母，假设每个字母出现的概率是一样的，每个字母的信息量就是 - log2 1/26 = 4.7；常用的汉字有2500个，每个汉字的信息量是 - log2 1/2500 = 11.3。所以在信息量相同的情况下，使用的汉字要比英文字母要少——这其实就是十六进制和二进制的区别，在这个例子中，apple成了5位26进制的数值，信息量4.7 &lt;em&gt; 5 = 23.5；而苹果成为2位2500进制的数值，信息量11.3 &lt;/em&gt; 2 = 22.6。虽然表示的方式不同，但信息量差不多（这是一个很巧合的例子，仅用于说明信息量的含义，大多数词语都不会这么接近）。&lt;/p&gt;
&lt;p&gt;在实际的情况中，每种可能情况出现的概率并不是相同的，所以熵（entropy）就用来衡量整个系统的平均信息量，其计算公式如下：&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;H_{s} = \sum_{i=1}^{n}{p_{i} \cdot I_{e}} = - \sum_{i=1}^{n}{}p_{i} \cdot log_{2}{p_{i}}&lt;/script&gt;&lt;p&gt;（推荐系统中，$p_i = \frac{物品i的流行度}{所有物品流行度之和}$）&lt;/p&gt;
&lt;p&gt;熵是平均信息量，也可以理解为不确定性。例如进行决赛的巴西和南非，假设根据经验判断，巴西夺冠的几率是80%，南非夺冠的几率是20%，则谁能获得冠军的信息量就变为 - 0.8 &lt;em&gt; log2 0.8 - 0.2 &lt;/em&gt; log2 0.2 = 0.257 + 0.464 = 0.721，小于1 bit了。经验减少了判断所需的信息量，消除了不确定性。&lt;/p&gt;
&lt;p&gt;而且通过计算可以发现，巴西夺冠的几率越高，计算出的熵就越小，即越是确定的情况，不确定性越小，信息量越少。如果巴西100%夺冠，那么熵是0，相当于没有任何信息。当两队几率都是50%最难判断，所熵达到最大值1。其实之前的 - log2 1/2 = 1 bit 是简化了的计算过程，其结果也是通过熵的公式来计算的 - 0.5 &lt;em&gt; log2 0.5 - 0.5 &lt;/em&gt; log2 0.5 = 1 bit，计算信息量要综合考虑每种结果的可能性。&lt;/p&gt;
&lt;p&gt;另一个会迷惑的问题是熵会大于1吗？答案当然是肯定的，刚刚计算的最大值为1bit，是因为最终的结果只有两种情况。在有四支球队的时候，其最大值就是 - 0.25 &lt;em&gt; log2 0.25 - 0.25 &lt;/em&gt; log2 0.25 - 0.25 &lt;em&gt; log2 0.25 - 0.25 &lt;/em&gt; log2 0.25 = 2 bit，当四支球队夺冠概率不等的时候，熵会小于2 bit。&lt;/p&gt;
&lt;p&gt;数据挖掘分类问题中构建决策树的算法ID3和C4.5，就是对熵的一个典型的应用。&lt;br&gt;以经典的根据天气判断是否打高尔夫球的例子来说明&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;@relation weather.symbolic&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@attribute outlook &amp;#123;sunny, overcast, rainy&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@attribute temperature &amp;#123;hot, mild, cool&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@attribute humidity &amp;#123;high, normal&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@attribute windy &amp;#123;TRUE, FALSE&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@attribute play &amp;#123;yes, no&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;@data&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sunny,hot,high,FALSE,no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sunny,hot,high,TRUE,no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;overcast,hot,high,FALSE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rainy,mild,high,FALSE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rainy,cool,normal,FALSE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rainy,cool,normal,TRUE,no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;overcast,cool,normal,TRUE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sunny,mild,high,FALSE,no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sunny,cool,normal,FALSE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rainy,mild,normal,FALSE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sunny,mild,normal,TRUE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;overcast,mild,high,TRUE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;overcast,hot,normal,FALSE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rainy,mild,high,TRUE,no&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为最终的结果只有yes和no两种，判断是否打高尔夫球所需的信息量（熵、不确定性）是1 bit。构建决策树的过程就是通过各种天气特征，来消除不确定性（使熵减少）。&lt;/p&gt;
&lt;p&gt;在选择分裂属性之前会计算一个初始的熵，但这个值却不是刚才提到的1。因为在只知道Class Label的情况下，是有一些经验上的信息的。如训练集中，有9个yes和5个no，这就好比我们知道在两队的交手记录中巴西获胜过几次，所以由此可以推算出现yes的概率是9/14，出现no的概率是5/14。所以初始的熵为 H-init =  - 9/14 &lt;em&gt; log2 9/14 - 5/14 &lt;/em&gt; log2 5/14 = 0.94。&lt;/p&gt;
&lt;p&gt;属性是如何使熵减少的呢？假设我们选取的是outlook，则通过这个属性可以将训练集划分成3个集合&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;sunny,hot,high,FALSE,no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sunny,hot,high,TRUE,no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sunny,mild,high,FALSE,no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sunny,cool,normal,FALSE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;sunny,mild,normal,TRUE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;overcast,hot,high,FALSE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;overcast,cool,normal,TRUE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;overcast,mild,high,TRUE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;overcast,hot,normal,FALSE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rainy,mild,high,FALSE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rainy,cool,normal,FALSE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rainy,cool,normal,TRUE,no&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rainy,mild,normal,FALSE,yes&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;rainy,mild,high,TRUE,no&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;某些子集在分割后变得更加纯净了，如当 outlook = overcast 的时候，全部为yes，该子集的熵为0，使得总体的熵（各个子集熵的平均值）减少。&lt;br&gt;H-sunny = - 0.4 &lt;em&gt; log2 0.4 - 0.6 &lt;/em&gt; log2 0.6 = 0.971&lt;br&gt;H-overcast = - 1 &lt;em&gt; log2 1 - 0 = 0&lt;br&gt;H-rainy = - 0.6 &lt;/em&gt; log2 0.6 - 0.4 &lt;em&gt; log2 0.4 = 0.971&lt;br&gt;H-average = 0.971 &lt;/em&gt; 5 / 14 + 0 &lt;em&gt; 4 / 14 + 0.971 &lt;/em&gt; 5 / 14 = 0.694&lt;/p&gt;
&lt;p&gt;初始熵与分割后的总体熵的差值，就是信息增益 InfoGain = H-init - H-average = 0.94 - 0.694 = 0.246&lt;br&gt;相当于获得了有用的信息，使判断出结果所需的信息量减少了。所以ID3算法在每次分割时，都选取信息增益最大的属性，这样使用最少的分支判断就可以得到最终的结果。&lt;/p&gt;
&lt;p&gt;熵表示不确定性，可以衡量混乱程度或纯净度，因此也用作分类或聚类结果的评价标准。类似地，在得到了所划分的n个集合后，分别计算每个集合的熵，公式中的n为集合中类别的个数，pi为第i个类别在该集合中出现的概率。如集合中有4个元素，分别属于4个类别，那么这个集合的熵就是2。之后计算各个集合熵的加权平均值，即是整个划分结果的熵。同理，熵越低表示划分得越准确。&lt;/p&gt;
&lt;p&gt;&lt;a href=&quot;http://www.cnblogs.com/leoo2sk/archive/2010/09/19/1831151.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;关于决策树算法的详细介绍&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;a href=&quot;http://gaofeihang.blog.163.com/blog/static/8450828520128139648199/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;转载链接&lt;/a&gt;&lt;/p&gt;
&lt;p&gt;在介绍熵之前，先从另一个概
    
    </summary>
    
      <category term="Recommender System" scheme="http://hlyin.space/categories/Recommender-System/"/>
    
    
  </entry>
  
  <entry>
    <title>基尼系数</title>
    <link href="http://hlyin.space/Recommender-System/Gini_Index/"/>
    <id>http://hlyin.space/Recommender-System/Gini_Index/</id>
    <published>2016-09-19T07:00:00.000Z</published>
    <updated>2016-11-21T14:47:54.000Z</updated>
    
    <content type="html">&lt;p&gt;基尼系数(Gini Index)是一个经济学概念，是20世纪初意大利经济学家基尼（实际应为赫希曼提出）根据洛伦茨曲线提出的判断分配平等程度的指标，用来描述收入整体差距程度。&lt;/p&gt;
&lt;p&gt;基尼系数和信息熵这两个指标可以用来定义推荐系统的覆盖率（描述一个推荐系统对物品长尾的发掘能力，覆盖率最简单的一个定义为推荐系统能够推荐出来的物品占总物品集合的比例）&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;经济学中基尼系数的意义&quot;&gt;&lt;a href=&quot;#经济学中基尼系数的意义&quot; class=&quot;headerlink&quot; title=&quot;经济学中基尼系数的意义&quot;&gt;&lt;/a&gt;经济学中基尼系数的意义&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/blog_image/recommeder_system/Gini_Index_1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;X轴为人口百分比，Y轴为收入百分比，其中人口按照收入从低到高排序过，即越接近原点的人口收入越低&lt;br&gt;如果各层次人民收入完全均等，那么对应一条 y=x 的线段，即最贫穷的人和最富的人收入相等&lt;br&gt;而实际的情况由洛伦兹曲线表示，贫富差距越大，最接近原点的人口(X)对应的收入(Y)增长最小，最远离原点的人口(X)对应的收入(Y)增长最小，即弯曲程度越大，收入分配越不平等。&lt;/p&gt;
&lt;p&gt;基尼系数定义为 $G = \frac{A}{A + B}$&lt;/p&gt;
&lt;p&gt;山西农业大学张建华先生提出了一个简便易用的公式：假定一定数量的人口按收入由低到高顺序排队，分为人数相等的n组，从第1组到第i组人口累计收入占全部人口总收入的比重为$W_{i}$，则说明：该公式是利用定积分的定义将对洛伦茨曲线的积分(面积B)分成n个等高梯形的面积之和得到的。&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;G = 1 - \frac{1}{n}(2\sum_{i=1}^{n-1}{W_{i}+1})&lt;/script&gt;&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;应用到推荐系统中&quot;&gt;&lt;a href=&quot;#应用到推荐系统中&quot; class=&quot;headerlink&quot; title=&quot;应用到推荐系统中&quot;&gt;&lt;/a&gt;应用到推荐系统中&lt;/h3&gt;&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/blog_image/recommeder_system/Gini_Index_2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;X轴人口换成物品（按照流行度从低到高排列），Y轴收入换成流行度，那么洛伦兹曲线即表示最不流行的x%物品的总流行度占推荐系统的比例y%&lt;/p&gt;
&lt;p&gt;同样，基尼系数定义为 $G = \frac{A}{A + B}$&lt;/p&gt;
&lt;p&gt;若系统中物品的流行度很平均，那么A就很小，从而基尼系数很小，若系统物品流行度分配很不平均，那么A很大，从而基尼系数很大，即可以从基尼系数判断系统物品流行度的分配，从而定义覆盖率。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;基尼系数(Gini Index)是一个经济学概念，是20世纪初意大利经济学家基尼（实际应为赫希曼提出）根据洛伦茨曲线提出的判断分配平等程度的指标，用来描述收入整体差距程度。&lt;/p&gt;
&lt;p&gt;基尼系数和信息熵这两个指标可以用来定义推荐系统的覆盖率（描述一个推荐系统对物品长尾的发
    
    </summary>
    
      <category term="Recommender System" scheme="http://hlyin.space/categories/Recommender-System/"/>
    
    
  </entry>
  
  <entry>
    <title>Python的类实例属性访问规则探讨[转]</title>
    <link href="http://hlyin.space/Recommender-System/python_instance_access_rule/"/>
    <id>http://hlyin.space/Recommender-System/python_instance_access_rule/</id>
    <published>2016-09-15T07:00:00.000Z</published>
    <updated>2016-12-21T07:43:31.000Z</updated>
    
    <content type="html">&lt;p&gt;一般来说，在Python中，类实例属性的访问规则算是比较直观的。&lt;br&gt;但是，仍然存在一些不是很直观的地方，特别是对C++和Java程序员来说，更是如此。&lt;/p&gt;
&lt;p&gt;在这里，我们需要明白以下几个地方：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Python是一门动态语言，任何实体都可以动态地添加或删除属性。&lt;/li&gt;
&lt;li&gt;一个类定义了一个作用域。&lt;/li&gt;
&lt;li&gt;类实例也引入了一个作用域，这与相应类定义的作用域不同。&lt;/li&gt;
&lt;li&gt;在类实例中查找属性的时候，首先在实例自己的作用域中查找，如果没有找到，则再在类定义的作用域中查找。&lt;/li&gt;
&lt;li&gt;在对类实例属性进行赋值的时候，实际上会在类实例定义的作用域中添加一个属性（如果还不存在的话），并不会影响到相应类中定义的同名属性。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;下面看一个例子，加深对上述几点的理解：&lt;/p&gt;
&lt;figure class=&quot;highlight python&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;A&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      cls_i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      cls_j = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      &lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;def&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;__init__&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(self)&lt;/span&gt;:&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.instance_i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;            self.instance_j = &amp;#123;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在这里，我们先定义类A的一个实例a，然后再看看类A的作用域和实例a的作用域中分别有什么：&lt;/p&gt;
&lt;p&gt;代码如下:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a = A()&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.__dict__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;apos;instance_j&amp;apos;: &amp;#123;&amp;#125;, &amp;apos;instance_i&amp;apos;: 0&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A.__dict__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;apos;__init__&amp;apos;: , &amp;apos;__module__&amp;apos;: &amp;apos;__main__&amp;apos;, &amp;apos;cls_i&amp;apos;: 0, &amp;apos;cls_j&amp;apos;: &amp;#123;&amp;#125;, &amp;apos;__doc__&amp;apos;: None&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们看到，a的作用域中有instance_i和instance_j，A的作用域中有cls_i和cls_j。&lt;br&gt;我们再来看看名字查找是如何发生的：&lt;/p&gt;
&lt;p&gt;代码如下:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.cls_i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.instance_i&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在查找cls_i的时候，实例a的作用域中是没有它的，却在A的作用域中找到了它；在查找instance_i的时候，直接可在a的作用域中找到它。&lt;br&gt;如果我们企图通过实例a来修改cls_i的值，那会怎样呢：&lt;/p&gt;
&lt;p&gt;代码如下:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.cls_i = 1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.__dict__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;apos;instance_j&amp;apos;: &amp;#123;&amp;#125;, &amp;apos;cls_i&amp;apos;: 1, &amp;apos;instance_i&amp;apos;: 0&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A.__dict__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;apos;__init__&amp;apos;: , &amp;apos;__module__&amp;apos;: &amp;apos;__main__&amp;apos;, &amp;apos;cls_i&amp;apos;: 0, &amp;apos;cls_j&amp;apos;: &amp;#123;&amp;#125;, &amp;apos;__doc__&amp;apos;: None&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以看到，a的作用域中多了一个cls_i属性，其值为1；同时，我们也注意到A作用域中的cls_i属性的值仍然为0；在这里，我们其实是增加了一个实例属性，并没有修改到类属性。&lt;br&gt;如果我们通过实例a操纵cls_j中的数据（注意不是cls_j本身），又会怎么样呢：&lt;/p&gt;
&lt;p&gt;代码如下:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.cls_j[&amp;apos;a&amp;apos;] = &amp;apos;a&amp;apos;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; a.__dict__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;apos;instance_j&amp;apos;: &amp;#123;&amp;#125;, &amp;apos;cls_i&amp;apos;: 1, &amp;apos;instance_i&amp;apos;: 0&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A.__dict__&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&amp;apos;__init__&amp;apos;: , &amp;apos;__module__&amp;apos;: &amp;apos;__main__&amp;apos;, &amp;apos;cls_i&amp;apos;: 0, &amp;apos;cls_j&amp;apos;: &amp;#123;&amp;apos;a&amp;apos;: &amp;apos;a&amp;apos;&amp;#125;, &amp;apos;__doc__&amp;apos;: None&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;我们可以看到a的作用域没有发生什么变化，但是A的作用域发生了一些变化，cls_j中的数据发生了变化。&lt;br&gt;实例的作用域发生变化，并不会影响到该类的其它实例，但是类的作用域发生变化，则会影响到该类的所有实例，包括在这之前创建的实例：&lt;/p&gt;
&lt;p&gt;代码如下:&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; A.cls_k = 0&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;gt;&amp;gt;&amp;gt; i.cls_k&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;0&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;一般来说，在Python中，类实例属性的访问规则算是比较直观的。&lt;br&gt;但是，仍然存在一些不是很直观的地方，特别是对C++和Java程序员来说，更是如此。&lt;/p&gt;
&lt;p&gt;在这里，我们需要明白以下几个地方：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Python是一
    
    </summary>
    
      <category term="Recommender System" scheme="http://hlyin.space/categories/Recommender-System/"/>
    
    
  </entry>
  
  <entry>
    <title>召回率准确率</title>
    <link href="http://hlyin.space/Recommender-System/Precision_Recall/"/>
    <id>http://hlyin.space/Recommender-System/Precision_Recall/</id>
    <published>2016-09-12T07:00:00.000Z</published>
    <updated>2016-11-21T14:42:43.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;一、信息检索中：&quot;&gt;&lt;a href=&quot;#一、信息检索中：&quot; class=&quot;headerlink&quot; title=&quot;一、信息检索中：&quot;&gt;&lt;/a&gt;一、信息检索中：&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;召回率又叫查全率，是针对原来的&lt;strong&gt;样本&lt;/strong&gt;而言的，表示相关的文档中有多少被检索了出来；&lt;/li&gt;
&lt;li&gt;准确率又叫查准率，是针对&lt;strong&gt;预测结果&lt;/strong&gt;而言，表示检索出的文档中有多少是相关(准确)的；&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/blog_image/recommeder_system/precision%26recall_1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;A = 检索到且相关文件； &lt;/li&gt;
&lt;li&gt;B = 检索到且不相关文件； &lt;/li&gt;
&lt;li&gt;C = 未检索到且相关文件； &lt;/li&gt;
&lt;li&gt;D = 未检索到且不相关文件&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;召回率(Recall) = \frac{系统检索到的\textbf{相关文件}}{系统\textbf{所有相关的}文件总数} = \frac{A}{A + C}&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;准确率(Precision) =  \frac{系统检索到的\textbf{相关文件}A}{系统\textbf{所有检索到的}文件总数B} = \frac{A}{A + B}&lt;/script&gt;&lt;p&gt;&lt;strong&gt;举例：&lt;/strong&gt;&lt;br&gt;假设一共有10篇文章，其中4篇是我需要的。&lt;br&gt;某个算法计算认为10篇文章中有5篇是我需要的，但是实际上，在这5篇里面，只有3篇才是我真正需要的。&lt;/p&gt;
&lt;p&gt;那么，这个算法&lt;br&gt;Recall=3/4=75%，也就是说，一共有用的这4篇里面，到了其中3篇。&lt;br&gt;Precision=3/5=60%，也就是说，算法找的这5篇，有3篇是准确的。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;准确率和召回率是互相影响的，理想情况下期望两者都高，但是一般准确率高时召回率低，召回率低时准确率高&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;阈值不同时，可以得到不同的准确率与召回率&lt;/p&gt;
&lt;p&gt;如果在以召回率为X轴，准确率为Y轴，画出不同阈值下的准确率与召回率，一般它会程下图形状：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/blog_image/recommeder_system/precision%26recall_2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;表示意义：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;左上方，召回率低准确率高：返回最相关的文本但漏掉了很多其他相关文本&lt;/li&gt;
&lt;li&gt;右下方，召回率高准确率低：返回了大量相关文本但包含了很多垃圾（相关但无用）&lt;/li&gt;
&lt;li&gt;理想情况是能够到达右上方&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;二、推荐系统中：&quot;&gt;&lt;a href=&quot;#二、推荐系统中：&quot; class=&quot;headerlink&quot; title=&quot;二、推荐系统中：&quot;&gt;&lt;/a&gt;二、推荐系统中：&lt;/h3&gt;&lt;p&gt;TopN推荐的预测准确率一般通过准确率(precision) / 召回率(recall)度量。&lt;/p&gt;
&lt;p&gt;令R(u)是根据用户在&lt;strong&gt;训练集&lt;/strong&gt;上的行为给用户做出的推荐列表，&lt;br&gt;令T(u)是用户在&lt;strong&gt;测试集&lt;/strong&gt;上的行为列表，那么&lt;/p&gt;
&lt;script type=&quot;math/tex; mode=display&quot;&gt;Recall = \frac{\sum_{u∈U}^{}|R(u)\bigcap{T(u)}|}{\sum_{u∈U}^{}|T(u)|}&lt;/script&gt;&lt;script type=&quot;math/tex; mode=display&quot;&gt;Precision = \frac{\sum_{u∈U}^{}|R(u)\bigcap{T(u)}|}{\sum_{u∈U}^{}|R(u)|}&lt;/script&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;召回率表示的是用户感兴趣的有多少被正确预测出来&lt;/li&gt;
&lt;li&gt;准确率表示的是推荐的结果中有多少是用户感兴趣的&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;参考链接:&lt;br&gt;[1] &lt;a href=&quot;http://charleshm.github.io/2016/03/Model-Performance/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;机器学习性能评估指标&lt;/a&gt;&lt;br&gt;[2] &lt;a href=&quot;http://blog.csdn.net/wangzhiqing3/article/details/9058523&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;准确率与召回率&lt;/a&gt;&lt;br&gt;[3] 项亮，推荐系统实践&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;一、信息检索中：&quot;&gt;&lt;a href=&quot;#一、信息检索中：&quot; class=&quot;headerlink&quot; title=&quot;一、信息检索中：&quot;&gt;&lt;/a&gt;一、信息检索中：&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;召回率又叫查全率，是针对原来的&lt;strong&gt;样本&lt;/
    
    </summary>
    
      <category term="Recommender System" scheme="http://hlyin.space/categories/Recommender-System/"/>
    
    
  </entry>
  
  <entry>
    <title>Markdown中的基本LaTeX数学公式</title>
    <link href="http://hlyin.space/Recommender-System/Latex_in_Markdown/"/>
    <id>http://hlyin.space/Recommender-System/Latex_in_Markdown/</id>
    <published>2016-08-10T07:00:00.000Z</published>
    <updated>2016-11-21T14:45:06.000Z</updated>
    
    <content type="html">&lt;p&gt;&lt;strong&gt;1. 和号和积分号&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\sum_{i=1}^{N}&lt;/td&gt;
&lt;td&gt;$\sum_{i=1}^{N}$&lt;/td&gt;
&lt;td&gt;\int_{a}^{b}&lt;/td&gt;
&lt;td&gt;$\int_{a}^{b}$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\prod&lt;/td&gt;
&lt;td&gt;$\prod$&lt;/td&gt;
&lt;td&gt;\iint&lt;/td&gt;
&lt;td&gt;$\iint$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\prod_{i=1}^{N}&lt;/td&gt;
&lt;td&gt;$\prod_{i=1}^{N}$&lt;/td&gt;
&lt;td&gt;\iint_{a}^{b}&lt;/td&gt;
&lt;td&gt;$\iint_{a}^{b}$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\bigcup&lt;/td&gt;
&lt;td&gt;$\bigcup$&lt;/td&gt;
&lt;td&gt;\bigcap&lt;/td&gt;
&lt;td&gt;$\bigcap$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\bigcup_{i=1}^{N}&lt;/td&gt;
&lt;td&gt;$\bigcup_{i=1}^{N}$&lt;/td&gt;
&lt;td&gt;\bigcap_{i=1}^{N}&lt;/td&gt;
&lt;td&gt;$\bigcap_{i=1}^{N}$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2. 其它常用命令&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\sqrt[3]{2}&lt;/td&gt;
&lt;td&gt;$\sqrt[3]{2}$&lt;/td&gt;
&lt;td&gt;\sqrt{2}&lt;/td&gt;
&lt;td&gt;$\sqrt{2}$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;x^{3}&lt;/td&gt;
&lt;td&gt;$x^{3}$&lt;/td&gt;
&lt;td&gt;x_{3}&lt;/td&gt;
&lt;td&gt;$x_{3}$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\lim_{x \to 0}&lt;/td&gt;
&lt;td&gt;$\lim_{x \to 0}$&lt;/td&gt;
&lt;td&gt;\frac{x}{y}&lt;/td&gt;
&lt;td&gt;$\frac{x}{y}$&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3. 希腊字母&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;\alpha&lt;/td&gt;
&lt;td&gt;$\alpha$&lt;/td&gt;
&lt;td&gt;\xi&lt;/td&gt;
&lt;td&gt;$\xi$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\beta&lt;/td&gt;
&lt;td&gt;$\beta$&lt;/td&gt;
&lt;td&gt;\nu&lt;/td&gt;
&lt;td&gt;$\nu$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\gamma&lt;/td&gt;
&lt;td&gt;$\gamma$&lt;/td&gt;
&lt;td&gt;\pi&lt;/td&gt;
&lt;td&gt;$\pi$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\delta&lt;/td&gt;
&lt;td&gt;$\delta$&lt;/td&gt;
&lt;td&gt;\rho&lt;/td&gt;
&lt;td&gt;$\rho$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\epsilon&lt;/td&gt;
&lt;td&gt;$\epsilon$&lt;/td&gt;
&lt;td&gt;\sigma&lt;/td&gt;
&lt;td&gt;$\sigma$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\zeta&lt;/td&gt;
&lt;td&gt;$\zeta$&lt;/td&gt;
&lt;td&gt;\tau&lt;/td&gt;
&lt;td&gt;$\tau$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\eta&lt;/td&gt;
&lt;td&gt;$\eta$&lt;/td&gt;
&lt;td&gt;\upsilon&lt;/td&gt;
&lt;td&gt;$\upsilon$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\theta&lt;/td&gt;
&lt;td&gt;$\theta$&lt;/td&gt;
&lt;td&gt;\phi&lt;/td&gt;
&lt;td&gt;$\phi$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\iota&lt;/td&gt;
&lt;td&gt;$\iota$&lt;/td&gt;
&lt;td&gt;\chi&lt;/td&gt;
&lt;td&gt;$\chi$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\kappa&lt;/td&gt;
&lt;td&gt;$\kappa$&lt;/td&gt;
&lt;td&gt;\psi&lt;/td&gt;
&lt;td&gt;$\psi$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\lambda&lt;/td&gt;
&lt;td&gt;$\lambda$&lt;/td&gt;
&lt;td&gt;\omega&lt;/td&gt;
&lt;td&gt;$\omega$&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;\mu&lt;/td&gt;
&lt;td&gt;$\mu$&lt;/td&gt;
&lt;td&gt;&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&lt;strong&gt;1. 和号和积分号&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;th&gt;命令&lt;/th&gt;
&lt;th&gt;显示&lt;/th&gt;
&lt;/tr&gt;
&lt;
    
    </summary>
    
      <category term="Recommender System" scheme="http://hlyin.space/categories/Recommender-System/"/>
    
    
  </entry>
  
  <entry>
    <title>WP字帖[效果图]</title>
    <link href="http://hlyin.space/ProjectImages/WPCopybook/"/>
    <id>http://hlyin.space/ProjectImages/WPCopybook/</id>
    <published>2016-07-27T07:00:00.000Z</published>
    <updated>2016-07-28T17:03:06.000Z</updated>
    
    <content type="html">&lt;p&gt;1、首页：&lt;/p&gt;
&lt;p&gt;显示6本字帖，滑动选择&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/git_handwriting_Home_Page.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2、练字及评分界面&lt;br&gt;支持两种模式：临摹字帖、自由创作；支持撤销之前所写笔数，评分基于网格特征和外围特征（Lehuixiao）；记录当前字的历史最高分；设置中可更改画笔颜色&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/git_handwriting_Score_Page.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;3、字帖选择界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/git_handwriting_BookChoose_Page.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;4、字选择界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/git_handwriting_BookContent_Page.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;5、个人信息：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/git_handwriting_Personal_Page.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;6、个人设置：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/git_handwriting_Personal_Setting.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;1、首页：&lt;/p&gt;
&lt;p&gt;显示6本字帖，滑动选择&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/git_handwriting_Home_Page.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2、练
    
    </summary>
    
      <category term="ProjectImages" scheme="http://hlyin.space/categories/ProjectImages/"/>
    
    
  </entry>
  
  <entry>
    <title>仿QQ聊天工具[效果图]</title>
    <link href="http://hlyin.space/ProjectImages/CommnicationTool/"/>
    <id>http://hlyin.space/ProjectImages/CommnicationTool/</id>
    <published>2016-07-26T07:00:00.000Z</published>
    <updated>2016-07-28T17:03:29.000Z</updated>
    
    <content type="html">&lt;p&gt;C#编写的winform程序，分服务端和客户端两个程序，采用TCP通信，以xml形式传递数据&lt;/p&gt;
&lt;p&gt;1、登陆界面&lt;/p&gt;
&lt;p&gt;输入6位数字账号和密码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/communication_tool/qq_login.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2、注册界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/communication_tool/qq_reg.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;3、主界面&lt;/p&gt;
&lt;p&gt;选项卡选择好友或群组&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/communication_tool/qq_main.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;4、私聊消息&lt;br&gt;对方用户不在线时存入数据库中对方的离线消息字段，定义分隔符&lt;code&gt;&amp;lt;e&amp;gt;&lt;/code&gt;区分多条消息，上线后读取此字段的值&lt;/p&gt;
&lt;p&gt;双开测试&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/communication_tool/qq_pchat2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/communication_tool/qq_pchat.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;5、群组消息&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/communication_tool/qq_gchat.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;C#编写的winform程序，分服务端和客户端两个程序，采用TCP通信，以xml形式传递数据&lt;/p&gt;
&lt;p&gt;1、登陆界面&lt;/p&gt;
&lt;p&gt;输入6位数字账号和密码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.co
    
    </summary>
    
      <category term="ProjectImages" scheme="http://hlyin.space/categories/ProjectImages/"/>
    
    
  </entry>
  
  <entry>
    <title>咖啡网站[效果图]</title>
    <link href="http://hlyin.space/ProjectImages/Coffee/"/>
    <id>http://hlyin.space/ProjectImages/Coffee/</id>
    <published>2016-07-25T07:00:00.000Z</published>
    <updated>2016-07-28T17:03:34.000Z</updated>
    
    <content type="html">&lt;p&gt;asp.net&lt;/p&gt;
&lt;p&gt;1、首页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_index.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2、商品页&lt;/p&gt;
&lt;p&gt;给出六种类别筛选：Expressos、Lattes、Tea Lattes、Hot Chocolates、Blended； 可依据给定属性（卡路里、脂肪等）进行排序&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_shop.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;选择Tea Lattes类商品&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_shop2.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;选择Blended类商品&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_shop3.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;选择排序依据（7种属性）&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_shop4.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;3、商品详情&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_detail.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;加入购物车&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_detail2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;4、注册&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_reg.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;5、管理员界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_admin.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;asp.net&lt;/p&gt;
&lt;p&gt;1、首页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_index.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
    
    </summary>
    
      <category term="ProjectImages" scheme="http://hlyin.space/categories/ProjectImages/"/>
    
    
  </entry>
  
  <entry>
    <title>房地产网站[效果图]</title>
    <link href="http://hlyin.space/ProjectImages/RealEstate/"/>
    <id>http://hlyin.space/ProjectImages/RealEstate/</id>
    <published>2016-07-24T07:00:00.000Z</published>
    <updated>2016-07-28T17:03:38.000Z</updated>
    
    <content type="html">&lt;p&gt;1、首页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_index.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_index2.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_index3.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2、管理员&lt;/p&gt;
&lt;p&gt;管理员可以&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;管理房屋验证&lt;/li&gt;
&lt;li&gt;处理用户投诉&lt;/li&gt;
&lt;li&gt;管理用户信息&lt;/li&gt;
&lt;li&gt;管理房屋信息&lt;/li&gt;
&lt;li&gt;管理广告信息&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;房屋验证&lt;br&gt;可按已处理验证和未处理验证进行查询，可设置分页大小，默认为10，对查询出的结果，&lt;code&gt;处理结果&lt;/code&gt;栏可选择&lt;code&gt;未处理&lt;/code&gt;、&lt;code&gt;已通过&lt;/code&gt;、&lt;code&gt;不通过&lt;/code&gt;三种结果，如查询&lt;code&gt;未处理验证&lt;/code&gt;，将某一条记录的结果改为&lt;code&gt;已通过&lt;/code&gt;后，页面异步刷新，此记录不显示，并可在&lt;code&gt;已处理验证&lt;/code&gt;中查询到&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_admin.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_admin2.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_admin3.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;用户信息管理&lt;/p&gt;
&lt;p&gt;增删查改用户&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_admin4.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_admin5.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;房屋信息管理&lt;br&gt;三种查询类别&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_admin6.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;3、个人中心&lt;br&gt;分为普通用户的个人中西和企业用户的企业中心&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_mine.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;用户设置&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_mine2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;1、首页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_index.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;im
    
    </summary>
    
      <category term="ProjectImages" scheme="http://hlyin.space/categories/ProjectImages/"/>
    
    
  </entry>
  
  <entry>
    <title>搜索引擎[效果图]</title>
    <link href="http://hlyin.space/ProjectImages/SearchEngine/"/>
    <id>http://hlyin.space/ProjectImages/SearchEngine/</id>
    <published>2016-07-23T07:00:00.000Z</published>
    <updated>2016-07-28T17:03:41.000Z</updated>
    
    <content type="html">&lt;p&gt;使用：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;语言：Java&lt;/li&gt;
&lt;li&gt;爬虫：Heritrix&lt;/li&gt;
&lt;li&gt;分词：je-analysis&lt;/li&gt;
&lt;li&gt;索引：Lucene&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;1、首页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/searchengine/searchengine_3.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2、搜索结果页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/searchengine/searchengine_4.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;使用：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;语言：Java&lt;/li&gt;
&lt;li&gt;爬虫：Heritrix&lt;/li&gt;
&lt;li&gt;分词：je-analysis&lt;/li&gt;
&lt;li&gt;索引：Lucene&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;1、首页&lt;/p
    
    </summary>
    
      <category term="ProjectImages" scheme="http://hlyin.space/categories/ProjectImages/"/>
    
    
  </entry>
  
  <entry>
    <title>诗词学习网站[效果图]</title>
    <link href="http://hlyin.space/ProjectImages/Poetry/"/>
    <id>http://hlyin.space/ProjectImages/Poetry/</id>
    <published>2016-07-22T07:00:00.000Z</published>
    <updated>2016-07-28T17:03:44.000Z</updated>
    
    <content type="html">&lt;p&gt;1、首页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_index.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2、诗词浏览，由左边选择诗人后显示对应的作品&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_browse.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;分诗、词、曲三类进行筛选，并可在此三类中选择朝代，选择后左方的代表诗人候选进行更新&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_browse2.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;诗-唐代&lt;/code&gt;后，左边的代表诗人更新&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_browse3.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;词-清-纳兰性德&lt;/code&gt;后显示作品&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_browse4.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;3、诗词详情&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_browse5.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;诗词详情中可进行自测，随机生成填空题形式&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_browse6.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;4、登陆界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_login.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;5、注册界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_reg.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;6、晋级&lt;br&gt;用户完成一阶段学习后可参与晋级测验提升等级，提升后提供新一级难度的诗词&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_exam.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;1、首页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_index.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2、诗词浏览，
    
    </summary>
    
      <category term="ProjectImages" scheme="http://hlyin.space/categories/ProjectImages/"/>
    
    
  </entry>
  
  <entry>
    <title>DES算法</title>
    <link href="http://hlyin.space/Information-Security/des/"/>
    <id>http://hlyin.space/Information-Security/des/</id>
    <published>2016-05-02T07:00:00.000Z</published>
    <updated>2016-05-08T12:48:52.000Z</updated>
    
    <content type="html">&lt;p&gt;算法实现按照《信息安全原理与技术》(郭亚军、宋建华、李莉、董慧慧编著)给出的过程，输入输出格式按照本书56页例3.8指定，即输入16个字符的16进制明文和密钥 (输入16个16进制char后自动处理成64位的2进制进行计算，也即DES分组大小和DES的密钥大小)，输出64位2进制密文（解密时输出64位2进制明文）和对应的16位16进制密文/明文，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/InformationSecurity/des/des1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;源码丢在github上，有需要的可以下载查看，地址：&lt;a href=&quot;https://github.com/louiehuang/DES&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/louiehuang/DES&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;一、算法过程&quot;&gt;&lt;a href=&quot;#一、算法过程&quot; class=&quot;headerlink&quot; title=&quot;一、算法过程&quot;&gt;&lt;/a&gt;一、算法过程&lt;/h3&gt;&lt;p&gt;DES原理本身不难理解，只是实现起来比较麻烦，所以这里只是大概提一下算法过程，详细过程可以参考《信息安全原理与技术》或 &lt;a href=&quot;http://www.hankcs.com/security/des-algorithm-illustrated.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DES算法实例详解&lt;/a&gt;，讲得都比较清楚。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（1）处理密钥&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;输入64位密钥，经过置换选择1（56位）得到56位的实际密钥&lt;/li&gt;
&lt;li&gt;按28位1组分成前后C和D两个部分&lt;/li&gt;
&lt;li&gt;进行16轮循环，每轮循环中先对C和D循环左移，再将结果合并&lt;/li&gt;
&lt;li&gt;通过置换选择2（48位）选出当前轮的48位子密钥。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;（2）处理明文&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;输入64位明文，初始置换&lt;/li&gt;
&lt;li&gt;按32位1组分成前后L和R两个部分&lt;/li&gt;
&lt;li&gt;进行16轮迭代，每轮迭代中，下一轮使用的L为本轮的R，下一轮使用的R需经过如下计算得到：&lt;br&gt; 先将32位的R经过扩展置换E扩展成48位，与当前轮使用的子密钥（加密时为顺序使用子密钥，解密时为逆序使用子密钥）进行异或，将得到的48位结果按6位1组分成8组，每组使用1个S盒进行置换，每组得到4位输出，即最后得到32位的输出，将此输出结果经置换P后得到的结果与本轮的L相异或，即为下一轮的R&lt;/li&gt;
&lt;li&gt;16轮迭代结束后，将最后得到的L和R交换，即（R，L）&lt;/li&gt;
&lt;li&gt;逆初始置换后得到64位密文&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;二、算法实现&quot;&gt;&lt;a href=&quot;#二、算法实现&quot; class=&quot;headerlink&quot; title=&quot;二、算法实现&quot;&gt;&lt;/a&gt;二、算法实现&lt;/h3&gt;&lt;p&gt;为了清晰理解DES算法的原理，希望将算法中所有的中间结果均能输出出来查看，基于这个目的，我选取的主要数据结构为char数组，不需要输出中间结果则可以使用bool类型，运算效率比char高… 嗯没管效率只是为了理解DES而已…&lt;/p&gt;
&lt;p&gt;我按课本56页例3.8制定输入格式，即输入的明文和密钥均为16位的16进制字符串，因此为了输出中间过程，需要将输入转换成64位的2进制字符数组，char类型数组最后一位需要放’\0’，因此所有的char数组的实际大小均为算法所需大小加1，主要的数据结构如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;char HexMsg[17], char HexKey[17] //明文和密钥输入为16位的16进制字符串&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;预处理：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;char HexMsg[17] → char BiMsg[65] //64位的2进制明文&lt;/li&gt;
&lt;li&gt;char HexKey[17] → char BiKey[65] //64位的2进制密钥&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;DES：&lt;br&gt;产生子密钥：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;char realKey[57] //经置换选择1选出56位&lt;/li&gt;
&lt;li&gt;char C[29], D[29] //前后2部分，各28位&lt;/li&gt;
&lt;li&gt;char CDCombine[57] //循环左移后将C、D数组结合&lt;/li&gt;
&lt;li&gt;char subKey[16][49] //置换选择2后产生的子密钥&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;初始置换：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;char BiMsgCopy[57] //复制一份原数组，否则在期间的改变会使得替换的元素发生改变&lt;/li&gt;
&lt;li&gt;char L[33], R[33] //前后2部分，各32位&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;16轮迭代：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;char RCopy[29] //复制R，运算期间会改变R，而最后需要将本轮开始的R赋给下一轮的L&lt;/li&gt;
&lt;li&gt;char ExtendedR[49] //扩展48位，与子密钥的异或直接修改ExtendedR&lt;/li&gt;
&lt;li&gt;char group[7] //将48位的ExtendedR分层6位1组的group，对每组group按S盒查找替换，替换结果直接修改R&lt;/li&gt;
&lt;li&gt;char SR[33] //置换P时复制经S盒变化后的R&lt;/li&gt;
&lt;li&gt;L与R异或直接修改R，此时得到本轮的最终R，即下一轮输入的R&lt;/li&gt;
&lt;li&gt;将本轮开始时的R复制给L，即RCopy赋给L，此时得到本轮的最终L，即下一轮输入的L&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;32位互换：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;char RLChange[65] //互换L16和R16位置，即（R16，L16）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;逆初始置换：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;char Cipher[65] //逆初始置换后的密文（解密时为明文）结果&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;三、部分代码解释&quot;&gt;&lt;a href=&quot;#三、部分代码解释&quot; class=&quot;headerlink&quot; title=&quot;三、部分代码解释&quot;&gt;&lt;/a&gt;三、部分代码解释&lt;/h3&gt;&lt;p&gt;预处理时将16位16进制char数组转成64位2进制数组，在S盒变换时，需要将S盒中行列对应的16进制元素（1位）转换成2进制（4位），在这两个地方使用16进制转2进制，代码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-java&quot;&gt;/***16进制数组转2进制数组(16元素)，输入M和K时使用(64位)以及S盒变换时使用(4位)***/
char * HexToBi(char *hexArray)
{
    toUpper(hexArray); //小写转大写
    char * biArray = new char[65];
    int index = 0;
    char *p = hexArray;
        while(*p)//字符串不结束就循环
        {
        string temp;
        if(*p&amp;gt;=&amp;#39;0&amp;#39; &amp;amp;&amp;amp; *p &amp;lt;=&amp;#39;9&amp;#39;) //数字
            {
            temp = HexBiTable[*p - 48];
        }
        else if(*p&amp;gt;=&amp;#39;A&amp;#39; &amp;amp;&amp;amp; *p &amp;lt;=&amp;#39;F&amp;#39;) //A~F字符
        {
            temp = HexBiTable[*p - 65 + 10];
        }
        for(int i = 0; i &amp;lt; 4; i++, index++)
        {
            biArray[index] = temp[i];
        }
        p++; //指针后指，准备处理下一个字母
        }

    biArray[index] = &amp;#39;\0&amp;#39;;
    return biArray;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;考虑到这里的需求是16进制char数组转2进制char数组，而不是16进制整型转2进制，因此相比于类型转换后辗转相除，采用的是查表HexBiTable替换更为有效。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;产生子密钥：&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;置换选择1：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-c++&quot;&gt;    char * realKey = new char[57]; realKey[56] = &amp;#39;\0&amp;#39;; //56位有效密钥    
    /**置换选择1，64位中选择56位得到实际使用的56位密钥**/
    for(int i = 0; i &amp;lt; 56; i++)
    {
        int index = PC1Table[i] - 1; //-1后才是在数组中的实际下标 
        realKey[i] = BiKey[index];
    }
    //cout&amp;lt;&amp;lt;realKey&amp;lt;&amp;lt;endl;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;通过查表PC1Table，即置换选择1，得到应替换元素的位置，需要减1得到在数组中的下标，for循环56次，得到56位的置换选择后的56位密钥，每次置换选择在原64位密钥BiKey中查找。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;循环左移：&lt;/strong&gt;&lt;br&gt;循环左移n位，通过3次逆序使时间复杂度降为O(n)，如循环左移2位10010011，则先逆序前2位得到01，再逆序后所有位得到110010，此时即为01110010，最后逆序所有位，得到01001110，即为最终结果。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-c++&quot;&gt;/***循环左移n位，复杂度0(n)，通过三次逆序实现***/
void LeftShift(char * arr, int n)
{
    Reverse(arr, 0, n - 1); //逆序前n位
    Reverse(arr, n, 28 - 1); //逆序后所有位
    Reverse(arr, 0, 28 - 1); //逆序所有位
}

/***逆序排列***/
void Reverse(char *arr, int begin, int end)
{
    char temp;
    for( ; begin &amp;lt; end; begin++, end--)
    {
        temp = arr[end];
        arr[end] = arr[begin];
        arr[begin] = temp;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在对明文的处理中的置换基本类同与置换选择1的实现，得到48位的扩展R后进行S盒变换，实现为将扩展R分成8组，每组6位，进行8轮的循环，每个循环中对1个组使用S盒变换，循环中先获取当前轮进行变换的6位输入group，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; group[&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;]; group[&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//1组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	group[i] = ExtendedR[s * &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; + i]; &lt;span class=&quot;comment&quot;&gt;//6位1组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;得到group后需据此获取在S盒中的行和列下标用来获取S盒对应的元素值，这里以group=”010001”为例，行即为01，列为1000，需要将2进制转成10进制以得到下标，为方便计算，将行表示为0001，这样仍通过查表HexBiTable来获取，这里仅仅就只是为了方便，其实并不好… 此时line=”0001”，column=”1000”，查表值0001对应的下标为1，1000对应的下标为8，所以在S盒中行下标x=1，列下标y=8，查S[i][x][y]得到对应的元素，以S1为例，即i=0，此时元素值为10，最后需要将整型的10转成4位的2进制数组，得到1010，代码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;lang-c++&quot;&gt;//16进制字符串转10进制整型
//如一组为010001，则line=&amp;quot;0001&amp;quot;, colum=&amp;quot;1000&amp;quot;，则x=1, y=8
int x, y; //x为在S盒中的行下标，y为列下标
char *line = new char[5]; line[4] = &amp;#39;\0&amp;#39;;
char *column = new char[5]; column[4] = &amp;#39;\0&amp;#39;;
line[0] = &amp;#39;0&amp;#39;; line[1] = &amp;#39;0&amp;#39;; line[2] = group[0]; line[3] = group[5]; //01即为00 01
column[0] = group[1]; column[1] = group[2]; column[2] = group[3]; column[3] = group[4];

//通过HexBiTable找到2进制对应的10进制（数组下标）
bool xflag = true, yflag = true; 
for(int i = 0; i &amp;lt; 16; i++)
{
    xflag = true; yflag = true; 
    //找行和列，比对HexBiTable[i]和column，若相等，则column所对应的列下标即为i（间接的2进制转10进制）
    for(int j = 0; j &amp;lt; 4; j++)
    {
        if(line[j] != HexBiTable[i][j]) //不相等
            xflag = false; 
        if(column[j] != HexBiTable[i][j]) //不相等
            yflag = false; 
    }
    if(xflag == true)
    {
        x = i;
    }
    if(yflag == true)
    {
        y = i;
    }
}
//cout&amp;lt;&amp;lt;x&amp;lt;&amp;lt;&amp;quot;, &amp;quot;&amp;lt;&amp;lt;y&amp;lt;&amp;lt;endl;

int target = SBox[s][x][y]; //获取S盒对应行列的元素

//target换成2进制char数组
char *biTarget = new char[5];
for(int i = 3, index = 0; i &amp;gt;= 0; i--, index++)
{  
    if(target &amp;amp; (1 &amp;lt;&amp;lt; i))  
        biTarget[index] =  &amp;#39;1&amp;#39;;  
    else  
        biTarget[index] =  &amp;#39;0&amp;#39;;  
}
biTarget[4] = &amp;#39;\0&amp;#39;;
//cout&amp;lt;&amp;lt;biTarget&amp;lt;&amp;lt;endl;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;至此得到此轮的4位输出，按其修改R对应位置，8轮S盒变化后即得到32位的输出结果。&lt;/p&gt;
&lt;h3 id=&quot;四、运行结果：&quot;&gt;&lt;a href=&quot;#四、运行结果：&quot; class=&quot;headerlink&quot; title=&quot;四、运行结果：&quot;&gt;&lt;/a&gt;四、运行结果：&lt;/h3&gt;&lt;p&gt;（1）不输出中间结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/InformationSecurity/des/des1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;中间结果：&lt;br&gt;（2）16个子密钥：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/InformationSecurity/des/des2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;（3）16轮L和R&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/InformationSecurity/des/des3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;（4）其他&lt;br&gt;其他各个步骤的结果输出语句均在代码中，去掉注释即可输出查看。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;算法实现按照《信息安全原理与技术》(郭亚军、宋建华、李莉、董慧慧编著)给出的过程，输入输出格式按照本书56页例3.8指定，即输入16个字符的16进制明文和密钥 (输入16个16进制char后自动处理成64位的2进制进行计算，也即DES分组大小和DES的密钥大小)，输出64位
    
    </summary>
    
      <category term="Information Security" scheme="http://hlyin.space/categories/Information-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>子网掩码与子网号</title>
    <link href="http://hlyin.space/Computer-Networks/subnetmask/"/>
    <id>http://hlyin.space/Computer-Networks/subnetmask/</id>
    <published>2016-04-11T07:00:00.000Z</published>
    <updated>2016-04-22T13:26:57.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 先回顾IP地址，IP地址是分层的，包括&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;网络&lt;/strong&gt;&lt;/font&gt;和&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;主机&lt;/strong&gt;&lt;/font&gt;两个部分，按网络部分和主机部分的不同长度主要分为A、B、C三类(还有多播组的D类和不再使用的E类)，但每一类的网络部分和主机部分的总长度相等，均为32位，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/subnet_mask/ip_type.png&quot; alt=&quot;Drawing&quot; width=&quot;400px&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A类：&lt;/strong&gt;最前面1位为0，7位标识网络号，24位标识主机号，则第一段取值为1~126，对于A类IP，最多有2^7 - 2 = 126个(可用)A类网络 (减2是因为要去掉全0的主机地址和全1的广播地址)，每个A类网路中，最多可有2^24 - 2 = 16777214 台(可用)主机&lt;br&gt;&lt;del&gt;地址：1.0.0.0 ~ 126.0.0.0&lt;/del&gt;&lt;br&gt;&lt;del&gt;0.0.0.0 和 127.0.0.0保留&lt;/del&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B类：&lt;/strong&gt;最前面2位为10，14位标识网络号，16位标识主机号，则第一段取值为128~191，对于B类IP，有2^14 - 1 = 16383个B类网络 (B类网络不会有全0全1，减1减的是128.0.0.0这个不指派地址)，每个B类网路中，最多可有2^16 - 2 =65534 台主机&lt;br&gt;地址：128.0.0.1 ~ 191.254.255.254&lt;br&gt;128.0.0.0 不指派&lt;br&gt;&lt;del&gt;地址：128.1.0.0 ~ 191.254.0.0&lt;/del&gt;&lt;br&gt;&lt;del&gt;128.0.0.0 和 191.255.0.0保留&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C类：&lt;/strong&gt;最前面3位为110，21位标识网络号，8位标识主机号，则第一段取值为192~223，对于C类IP，有2^21 - 1 = 2097151个C类网络，每个C类网路中，最多可有2^8 - 2 =254 台主机&lt;/p&gt;
&lt;p&gt;&lt;del&gt;地址：192.0.1.0 ~ 223.255.254.0&lt;/del&gt;&lt;br&gt;&lt;del&gt;192.0.0.0 和 223.255.255.0保留&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 为了提高地址分配的效率和减少分配网络号总数，采取&lt;strong&gt;划分子网&lt;/strong&gt;的策略，在多个网络中共享一个网络号的机制涉及使用子网掩码，子网掩码的作用就是用来判断任意两个或多个IP地址是否属于同一个子网。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 子网划分的实现是基于&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;网络位占用主机位&lt;/strong&gt;&lt;/font&gt;的，以21位网络位和8位主机位的C类地址为例，若将一个C类网络划分成2个子网，则网络位需要占用1位主机位，即现在是22位网络位和7位主机位，通过占用的这1位的值来区分划分成的2个子网，同理，若划分成3个或4个子网则占用2个主机位…&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 但是现在，一个外部的网络，并不知道连接的这个C类网络是否划分了子网，所以需要子网掩码，当未划分时，A类地址的缺省子网掩码为255.0.0.0，B类为255.255.0.0，C类为255.255.255.0，仍以C类网络为例，划分成2个子网(占1位主机位)后子网掩码为255.255.255.128(128个主机，126个可用主机)，划分成4个子网(占位主机位)后子网掩码为255.255.255.192，如下表：&lt;/p&gt;
&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;占用主机位位数&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;划分子网数&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;子网掩码&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;主机数&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;可用主机数&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;不划分&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;255.255.255.0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;256&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;254&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;255.255.255.128&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;128&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;126&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;255.255.255.192&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;64&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;62&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;8&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;255.255.255.224&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;32&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;16&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;255.255.255.240&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;16&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;5&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;32&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;255.255.255.248&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;8&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;6&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;64&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;255.255.255.252&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ifconfig(win为ipconfig) 查看当前计算机的ip地址及子网掩码，当前ip为192.168.1.105，即C类网络，子网掩码0xffffff00，即255.255.255.0，未划分。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/subnet_mask/ifconfig.png&quot; alt=&quot;Drawing&quot; width=&quot;400px&quot;&gt;&lt;/p&gt;
&lt;!-- ![](http://gitimage-10031767.file.myqcloud.com/blog_image/subnet_mask/ifconfig.png) --&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 子网掩码是一个IPv4地址，在一个给定的子网中，所有主机都配置相同的掩码，即&lt;font color=&quot;red&quot;&gt;每个子网只有一个掩码，但需要注意，并不是子网掩码相同就是同一子网&lt;/font&gt;，看一个《计算机网络系统方法》中的例子，如下图：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/subnet_mask/book_subnet.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 假设H1向H2发数据，首先H1需要判断H2是不是和自己在同一子网中，这一过程为：将&lt;font color=&quot;red&quot;&gt;H2的IP地址&lt;/font&gt;与&lt;font color=&quot;red&quot;&gt;H1的子网掩码&lt;/font&gt;进行&lt;font color=&quot;red&quot;&gt;按位与&lt;/font&gt;运算，将结果与H1的子网号相比，若相同，则属于同一子网，否则不是。那么将H2的IP地址128.96.34.139与上H1的子网掩码255.255.255.128后，结果为128.96.34.128，不等于H1的子网号128.96.34.0，因而H1与H2并不在同一子网中，即使这两个子网的子网掩码相同，都为255.255.255.128。而之所以相同的子网掩码却可以有不同的子网号，从计算上看是由于与之相&amp;amp;的IP地址不同，但实质原因是被占用的主机位可以有不同的取值而决定的，比如一个C类IP，划分成2个子网，则主机位被占用1位，而这被占用的1位取0或取1，便形成了2个不同的子网号。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 通过前面的计算，H1可以知道H2与其不在同一子网，因此将分组给它的默认路由器R1由R1负责转发，根据转发表确定转发路径，发送到子网号为128.96.34.128的网络中，这之后需要确定在此网络中的接收主机，因为此网络中可能不止有一台主机H2，比如还有IP地址为128.96.34.140的H4，这时将子网掩码取反后再与H2的IP地址，即用0.0.0.127 &amp;amp; 128.96.34.139，结果0.0.0.11即为主机号，根据主机号在网络中确定具体的接收主机。&lt;/p&gt;
&lt;h3 id=&quot;结论和归纳：&quot;&gt;&lt;a href=&quot;#结论和归纳：&quot; class=&quot;headerlink&quot; title=&quot;结论和归纳：&quot;&gt;&lt;/a&gt;结论和归纳：&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font color=&quot;red&quot;&gt;每个子网只有一个掩码，但需要注意，并不是子网掩码相同就是同一子网&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;子网号 = IP &amp;amp; 子网掩码&lt;/li&gt;
&lt;li&gt;主机号 = IP &amp;amp; 掩码取反&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4 id=&quot;补充-来自知乎-：&quot;&gt;&lt;a href=&quot;#补充-来自知乎-：&quot; class=&quot;headerlink&quot; title=&quot;补充(来自知乎)：&quot;&gt;&lt;/a&gt;补充(来自知乎)：&lt;/h4&gt;&lt;p&gt;比较下面的两个IP地址，&lt;br&gt;A：219.218.44.123&lt;br&gt;B：219.218.45.34&lt;br&gt;在子网掩码M1：255.255.254.0下为同一子网，而在M2：255.255.255.0下为不同子网。&lt;/p&gt;
&lt;p&gt;分析：&lt;/p&gt;
&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;主机&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;地址&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A:&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11011011-11011010-00101100-01111011&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;B:&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11011011-11011010-00101101-00100010&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;div class=&quot;table-container&quot;&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;子网掩码&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;地址&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;M1:&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11111111-11111111-11111110-00000000（254）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;M2:&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11111111-11111111-11111111-00000000（255）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;/div&gt;
&lt;p&gt;通过做and运算，可以看出来&lt;br&gt;A&amp;amp;M1:11011011-11011010-00101100-00000000&lt;br&gt;B&amp;amp;M1:11011011-11011010-00101100-00000000&lt;/p&gt;
&lt;p&gt;A&amp;amp;M2:11011011-11011010-001011&lt;font color=&quot;red&quot;&gt;00&lt;/font&gt;-00000000&lt;br&gt;B&amp;amp;M2:11011011-11011010-001011&lt;font color=&quot;red&quot;&gt;01&lt;/font&gt;-00000000&lt;/p&gt;
&lt;p&gt;假设还有如下IP&lt;br&gt;C：219.218.45.200&lt;br&gt;可以得出在子网M2：255.255.255.0下跟B同子网，而在子网M3：255.255.255.128下为不同子网。&lt;/p&gt;
&lt;h4 id=&quot;参考：&quot;&gt;&lt;a href=&quot;#参考：&quot; class=&quot;headerlink&quot; title=&quot;参考：&quot;&gt;&lt;/a&gt;参考：&lt;/h4&gt;&lt;p&gt;[1] Larry L.peterson, Bruce S.Davie. 计算机网络系统方法[M].四川: 机械工业出版社, 2015: 113-119&lt;br&gt;[1] 恒思凝. 子网掩码判断两个ip是否在同一子网如何保证准确. &lt;a href=&quot;http://www.zhihu.com/question/36296884/answer/68366061&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.zhihu.com/question/36296884/answer/68366061&lt;/a&gt;&lt;br&gt;[2] 计算机网络地址，主机地址，子网掩码，网段，子网划分的理解. &lt;a href=&quot;http://blog.csdn.net/hzhsan/article/details/12783193&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/hzhsan/article/details/12783193&lt;/a&gt;&lt;br&gt;[3] 计算机网络子网掩码. &lt;a href=&quot;http://blog.csdn.net/oklizy/article/details/6805836&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/oklizy/article/details/6805836&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 先回顾IP地址，IP地址是分层的，包括&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;网络&lt;/strong&gt;&lt;/font&gt;和&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;主机&lt;/strong&gt;&lt;/font&gt;两个部分
    
    </summary>
    
      <category term="Computer Networks" scheme="http://hlyin.space/categories/Computer-Networks/"/>
    
    
  </entry>
  
  <entry>
    <title>访问速度优化(二)---国内解析到coding，国外解析到github</title>
    <link href="http://hlyin.space/Blog/visiting_speed_opt2/"/>
    <id>http://hlyin.space/Blog/visiting_speed_opt2/</id>
    <published>2016-04-10T07:00:00.000Z</published>
    <updated>2016-11-22T14:46:41.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 之前通过将google字体和加载耗时较长的图片存到云对象存储(COS)大幅提升了这个网站的访问速度，其中google字体因为google的原因而耗时很长，而图片则是因为这个网站代码托管在github，需要从github那边加载，而github，国外的，访问速度相比对国内主机慢不少。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 因此将网站同时部署到github和coding，比较一下两个地方的ping值：&lt;/p&gt;
&lt;p&gt;(1) ping github， 平均366.384ms&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt_2/ping_github.png&quot; alt=&quot;Drawing&quot; width=&quot;400px&quot;&gt;&lt;/p&gt;
&lt;p&gt;(2)ping coding， 平均34.388ms，ping值低10倍&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt_2/ping_coding.png&quot; alt=&quot;Drawing&quot; width=&quot;400px&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 代码托管到coding和托管到github一样的流程，在coding注册账号后新建项目，不同于github pages的项目名必须和github用户名相同，在coding的项目名可以任意起，域名结构为：&lt;code&gt;username.coding.io/projectname&lt;/code&gt;， 但若想通过&lt;code&gt;username.coding.io&lt;/code&gt;访问，即不带项目名访问，则需要将项目名命名为用户名，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt_2/codingproject.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 然后部署，可以同时部署到coding和github，配置中添加一条部署仓库即可，以SSH连接为例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repo:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      github: git@github.com:louiehuang/louiehuang.github.io.git,master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      coding: git@git.coding.net:louiehuang/louiehuang.git,master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 然而我在mac下deploy的速度很慢，不知原因，所以手动push，先在coding的账户-&amp;gt;SSH公钥里添加公钥，直接添加github的公钥即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;在本地cd到放仓库的地方，然后clone下来，我的项目是&lt;code&gt;git clone git@git.coding.net:louiehuang/louiehuang.git&lt;/code&gt;，clone下来的仓库就是louiehuang.git&lt;/li&gt;
&lt;li&gt;将generate生成的public文件夹下所有文件复制到仓库louiehuang.git&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add *&lt;/code&gt;，添加所有新加项，因为.gitignore的设置不用&lt;code&gt;git add .&lt;/code&gt;，把这个ignore文件删掉后也可以用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &amp;quot;comment&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin master&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 然后在coding中的项目中将Pages服务打开，将自己的域名添加进来，之后设置域名解析，将国内访问解析到coding，国外解析到github，在自己的云解析平台设置，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt_2/domain.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 至此完成了在coding的托管。因为每次更新都需要同时更新coding和github两个地方，所以写了段命令来bash，每次同时push到coding和github的仓库。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 之前通过将google字体和加载耗时较长的图片存到云对象存储(COS)大幅提升了这个网站的访问速度，其中google字体因为google的原因而耗时很长，而图片则是因为这个网站代码托管在github，需要从github那边加
    
    </summary>
    
      <category term="Blog" scheme="http://hlyin.space/categories/Blog/"/>
    
    
  </entry>
  
  <entry>
    <title>访问速度优化(一)---图片及谷歌字体转存COS</title>
    <link href="http://hlyin.space/Blog/visiting_speed_opt1/"/>
    <id>http://hlyin.space/Blog/visiting_speed_opt1/</id>
    <published>2016-04-09T07:00:00.000Z</published>
    <updated>2016-11-22T14:46:47.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这个blog (&lt;a href=&quot;http://hlyin.space&quot;&gt;http://hlyin.space&lt;/a&gt;) 一直是用chrome做测试和访问，刚搭建起来的时候打开速度比较正常，大概在2、3秒的样子，但这几天突然变得非常慢，需要等1、2分钟才能加载出来，想起来之前都是挂着ss，而现在没有开ss，觉得可能问题出在访问了被墙的资源，因而做些测试来查找并解决访问速度问题。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 比较奇怪的是，用firefox和safari访问速度都比较快，只有chrome打开极慢，打开chrome的开发者工具（快捷键F12），选择network项，然后在历史记录中清除缓存以避免影响测试结果，然后访问网站 (&lt;a href=&quot;http://hlyin.space&quot;&gt;http://hlyin.space&lt;/a&gt;) ，如下图，加载时间为1.5分钟，在Time项中可以观察各项请求的耗时，找到了最耗时的项目，502网关错误，即红色项:&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blogspeed_chrometest1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;放大一点：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blogspeed_chrometest_detail.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;错误提示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Font from origin ‘&lt;a href=&quot;http://fontstatic.useso.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://fontstatic.useso.com&lt;/a&gt;‘ has been blocked from loading by Cross-Origin Resource Sharing policy: No ‘Access-Control-Allow-Origin’ header is present on the requested resource. Origin ‘&lt;a href=&quot;http://hlyin.space&quot;&gt;http://hlyin.space&lt;/a&gt;‘ is therefore not allowed access. The response had HTTP status code 502.&lt;/li&gt;
&lt;li&gt;Get &lt;a href=&quot;http://fontstatic.useso.com/s/montserrat/v6/zhcz-_WihjSQC0oHJ9TCYPk_vArhqVIZ0nv9q090hN8.woff2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://fontstatic.useso.com/s/montserrat/v6/zhcz-_WihjSQC0oHJ9TCYPk_vArhqVIZ0nv9q090hN8.woff2&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 可以看出，问题出在&lt;code&gt;zhcz-_WihjSQC0oHJ9TCYPk_vArhqVIZ0nv9q090hN8.woff2&lt;/code&gt;这个字体文件，502网关错误，这个字体的链接在&lt;code&gt;http://fontstatic.useso.com&lt;/code&gt;中，页面相关代码如下：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blogspeed_link.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这里需要解释一下，blog使用了包括Open Sans等字体在内的谷歌字库字体，而谷歌由于被禁，字体链接不能访问而换成了360的CND，&lt;code&gt;fonts.useso.com&lt;/code&gt;，像上面代码中&lt;code&gt;http://fonts.useso.com/css?family=Open+Sans:400,600&lt;/code&gt; (谷歌的为&lt;code&gt;http://fonts.googleapis.com/css?family=Open+Sans:400,600&lt;/code&gt;)，然而检测结果表明即使换成360CND，这种web font的加载仍十分耗时。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在这两个link里使用了访问受阻的字体，查看链接，&lt;code&gt;zhcz-_WihjSQC0oHJ9TCYPk_vArhqVIZ0nv9q090hN8.woff2&lt;/code&gt;(无法获取)在第一个链接中被访问，&lt;code&gt;cJZKeOuBrn4kERxqtaUH3aCWcynf_cDxXwCLxiixG1c.ttf&lt;/code&gt; (也无法获取)在第二个链接中被访问。&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blogspeed_linkcontent.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/p&gt;&lt;h3&gt;由此可以有两种解决方法：&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;del&gt;如果不需要这个字库，则可以&lt;strong&gt;直接去掉这两个字体链接&lt;/strong&gt;，即把这两条link语句去掉，&lt;/del&gt; 虽然是省事，但字体效果没有了的话还是不太可取；&lt;/li&gt;
&lt;li&gt;将字体&lt;strong&gt;添加到自己的云存储中&lt;/strong&gt;通过外链导入，或者&lt;strong&gt;镜像到本地&lt;/strong&gt;，正确的处理方法，之一，当然应该是这样&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 先直接删掉上面那两个link做一下测试，清除缓存后再用chrome测加载时间，结果如下图：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blogspeed_after_delete_font.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 加载时间为13.98秒，相比于1.5分钟有很大的改善，那么可以确定网页打开速度确实受选择的字体影响很大，&lt;strong&gt;为了继续使用选择的字体，将其下载并存放到云存储中。&lt;/strong&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 云对象存储之前用过七牛，但各个云存储供应商，如果不实名认证，能使用的资源非常有限，因为买服务器的时候在腾讯认证过，所以转用腾讯的云存储，使用比较方便，开通对象存储服务就可以，而且50G以内不收费，放图片、字体等资源的话足够了。&lt;br&gt;&lt;strong&gt;（1）&lt;/strong&gt; 先下载所用字体，以&lt;code&gt;http://fonts.useso.com/css?family=Open+Sans:400,600&lt;/code&gt;为例，打开后如下图，打开其中所有的url下载字体，&lt;code&gt;http://fontstatic.useso.com/s/opensans/v13/cJZKeOuBrn4kERxqtaUH3T8E0i7KZn-EPnyo3HZu7kw.woff&lt;/code&gt; 和 &lt;code&gt;http://fontstatic.useso.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSnhCUOGz7vYGh680lGh-uXM.woff&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blog_speed_linkdetail2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）&lt;/strong&gt; 在腾讯云对象存储的控制台新建一个bucket，我这里是gitimage，新建文件夹存放，上传刚刚下载的两个字体文件&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blog_speed_clodestorage1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（3）&lt;/strong&gt; 本地新建一个css文件，我直接取名叫&lt;code&gt;family=Open+Sans:400,600.css&lt;/code&gt;将&lt;code&gt;http://fonts.useso.com/css?family=Open+Sans:400,600&lt;/code&gt;的内容复制进来，将url改成云存储中字体的链接，将这个css也存到云存储中，这时就可以用它的地址也替换link中原来的地址： &lt;code&gt;&amp;lt;link href=&amp;#39;//gitimage-10031767.file.myqcloud.com/blog_image/Theme_Image/family%3DOpen%2BSans400%2C600.css&amp;#39; rel=&amp;#39;stylesheet&amp;#39; type=&amp;#39;text/css&amp;#39;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这样就可以使用谷歌字库的字体了，但13.98秒的打开速度对于一个blog来说打开时间仍很长，继续…&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 现在测试结果里最耗时的两项分别是我的图标和背景的加载，198KB的主页背景(bg.jpg)耗时10.13s，264KB的图标(firedoge.ico)耗时11.86s，讲道理的话这种大小是不会用这么多时间的，然而这两个图都是挂在github，国内访问确实会慢不少，因而也将其转存到国内的云存储中，把图片存进去后如下图：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blog_speed_clodestorage2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 再次清除缓存后用chrome测试，结果如下，加载时间降至1.81s，虽然现实.ico图标耗时6s多，但整个blog加载出来不到2s，图标并不影响其他部分的显示。&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blog_speed_afterchangeroute.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在firefox的开发者工具中测试，加载时间为1.01秒，也有改善。&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blog_speed_final_firefox.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 至此完成对blog本身的访问速度提升，当然，这是针对国内访问的，国外访问的话实际上用时会增加一些。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这个blog (&lt;a href=&quot;http://hlyin.space&quot;&gt;http://hlyin.space&lt;/a&gt;) 一直是用chrome做测试和访问，刚搭建起来的时候打开速度比较正常，大概在2、3秒的样子，但这几天突然
    
    </summary>
    
      <category term="Blog" scheme="http://hlyin.space/categories/Blog/"/>
    
    
  </entry>
  
  <entry>
    <title>添加google统计或百度统计</title>
    <link href="http://hlyin.space/Blog/baidu_analytics/"/>
    <id>http://hlyin.space/Blog/baidu_analytics/</id>
    <published>2016-04-08T07:00:00.000Z</published>
    <updated>2016-11-22T14:46:24.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;一、google统计&quot;&gt;&lt;a href=&quot;#一、google统计&quot; class=&quot;headerlink&quot; title=&quot;一、google统计&quot;&gt;&lt;/a&gt;一、google统计&lt;/h2&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 先在 &lt;a href=&quot;https://www.google.com/analytics/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;google统计&lt;/a&gt; 注册账号，在管理-&amp;gt;跟踪信息-&amp;gt;跟踪代码中获取跟踪ID和跟踪代码，形式如下：&lt;br&gt;ID：&lt;code&gt;UA-76175499-1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;i,s,o,g,r,a,m&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	i[&lt;span class=&quot;string&quot;&gt;&#39;GoogleAnalyticsObject&#39;&lt;/span&gt;]=r;i[r]=i[r]||&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		 (i[r].q=i[r].q||[]).push(&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;)&amp;#125;,i[r].l=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;*&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();a=s.createElement(o),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		m=s.getElementsByTagName(o)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		a.async=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;a.src=g;m.parentNode.insertBefore(a,m)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&amp;#125;)(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;script&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;https://www.google-analytics.com/analytics.js&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;ga&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	ga(&lt;span class=&quot;string&quot;&gt;&#39;create&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;UA-76175499-1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;auto&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	ga(&lt;span class=&quot;string&quot;&gt;&#39;send&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pageview&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为网站中每个页面都需要加入上面的跟踪代码，所以添加在模板页中，这里是head.ejs。在配置文件config中设置：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#google统计&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;google_analytics:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  id: UA-76175499-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  site: hlyin.space&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在head.ejs中，&amp;lt;/head&amp;gt;之前添加：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- google统计 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% if (theme.google_analytics) &amp;#123; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	(function(i,s,o,g,r,a,m)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	i[&#39;GoogleAnalyticsObject&#39;]=r;i[r]=i[r]||function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 (i[r].q=i[r].q||[]).push(arguments)&amp;#125;,i[r].l=1*new Date();a=s.createElement(o),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		m=s.getElementsByTagName(o)[0];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		a.async=1;a.src=g;m.parentNode.insertBefore(a,m)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)(window,document,&#39;script&#39;,&#39;https://www.google-analytics.com/analytics.js&#39;,&#39;ga&#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ga(&#39;create&#39;, &#39;UA-76175499-1&#39;, &#39;auto&#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ga(&#39;send&#39;, &#39;pageview&#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% &amp;#125; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;若不设置config文件，则直接将跟踪代码加入模板也可以，即去掉&lt;code&gt;if (theme.google_analytics)&lt;/code&gt;的判断&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;一、百度统计&quot;&gt;&lt;a href=&quot;#一、百度统计&quot; class=&quot;headerlink&quot; title=&quot;一、百度统计&quot;&gt;&lt;/a&gt;一、百度统计&lt;/h2&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 一样的，先注册， &lt;a href=&quot;http://tongji.baidu.com/web/welcome/login&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;百度统计&lt;/a&gt; 注册账号，这里没有跟踪ID，只有跟踪代码，如下形式：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _hmt = _hmt || [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hm = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&quot;script&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  hm.src = &lt;span class=&quot;string&quot;&gt;&quot;//hm.baidu.com/hm.js?36f2872301a44655ccaff81408d46228&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&quot;script&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.parentNode.insertBefore(hm, s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同样添加的模板页即可，config中 &lt;code&gt;baidu_analytics: true&lt;/code&gt;， head.ejs中：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 百度统计 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% if (theme.baidu_analytics) &amp;#123; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var _hmt = _hmt || [];(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var hm = document.createElement(&quot;script&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		hm.src = &quot;//hm.baidu.com/hm.js?36f2872301a44655ccaff81408d46228&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var s = document.getElementsByTagName(&quot;script&quot;)[0];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		s.parentNode.insertBefore(hm, s);&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% &amp;#125; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、google统计&quot;&gt;&lt;a href=&quot;#一、google统计&quot; class=&quot;headerlink&quot; title=&quot;一、google统计&quot;&gt;&lt;/a&gt;一、google统计&lt;/h2&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 先在 &lt;a href=&quot;h
    
    </summary>
    
      <category term="Blog" scheme="http://hlyin.space/categories/Blog/"/>
    
    
  </entry>
  
</feed>
