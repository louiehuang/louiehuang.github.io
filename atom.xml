<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>Louie&#39;s Blog</title>
  <subtitle>黄刘胤的博客 Louie&#39;s blog 代码猴子</subtitle>
  <link href="/atom.xml" rel="self"/>
  
  <link href="http://hlyin.space/"/>
  <updated>2016-07-28T17:03:06.000Z</updated>
  <id>http://hlyin.space/</id>
  
  <author>
    <name>Louie</name>
    
  </author>
  
  <generator uri="http://hexo.io/">Hexo</generator>
  
  <entry>
    <title>WP字帖[效果图]</title>
    <link href="http://hlyin.space/ProjectImages/WPCopybook/"/>
    <id>http://hlyin.space/ProjectImages/WPCopybook/</id>
    <published>2016-07-26T16:00:00.000Z</published>
    <updated>2016-07-28T17:03:06.000Z</updated>
    
    <content type="html">&lt;p&gt;1、首页：&lt;/p&gt;
&lt;p&gt;显示6本字帖，滑动选择&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/git_handwriting_Home_Page.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2、练字及评分界面&lt;br&gt;支持两种模式：临摹字帖、自由创作；支持撤销之前所写笔数，评分基于网格特征和外围特征（Lehuixiao）；记录当前字的历史最高分；设置中可更改画笔颜色&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/git_handwriting_Score_Page.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;3、字帖选择界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/git_handwriting_BookChoose_Page.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;4、字选择界面：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/git_handwriting_BookContent_Page.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;5、个人信息：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/git_handwriting_Personal_Page.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;6、个人设置：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/git_handwriting_Personal_Setting.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;1、首页：&lt;/p&gt;
&lt;p&gt;显示6本字帖，滑动选择&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/git_handwriting_Home_Page.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2、练
    
    </summary>
    
      <category term="ProjectImages" scheme="http://hlyin.space/categories/ProjectImages/"/>
    
    
  </entry>
  
  <entry>
    <title>仿QQ聊天工具[效果图]</title>
    <link href="http://hlyin.space/ProjectImages/CommnicationTool/"/>
    <id>http://hlyin.space/ProjectImages/CommnicationTool/</id>
    <published>2016-07-25T16:00:00.000Z</published>
    <updated>2016-07-28T17:03:29.000Z</updated>
    
    <content type="html">&lt;p&gt;C#编写的winform程序，分服务端和客户端两个程序，采用TCP通信，以xml形式传递数据&lt;/p&gt;
&lt;p&gt;1、登陆界面&lt;/p&gt;
&lt;p&gt;输入6位数字账号和密码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/communication_tool/qq_login.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2、注册界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/communication_tool/qq_reg.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;3、主界面&lt;/p&gt;
&lt;p&gt;选项卡选择好友或群组&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/communication_tool/qq_main.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;4、私聊消息&lt;br&gt;对方用户不在线时存入数据库中对方的离线消息字段，定义分隔符&lt;code&gt;&amp;lt;e&amp;gt;&lt;/code&gt;区分多条消息，上线后读取此字段的值&lt;/p&gt;
&lt;p&gt;双开测试&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/communication_tool/qq_pchat2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/communication_tool/qq_pchat.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;5、群组消息&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/communication_tool/qq_gchat.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;C#编写的winform程序，分服务端和客户端两个程序，采用TCP通信，以xml形式传递数据&lt;/p&gt;
&lt;p&gt;1、登陆界面&lt;/p&gt;
&lt;p&gt;输入6位数字账号和密码&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.co
    
    </summary>
    
      <category term="ProjectImages" scheme="http://hlyin.space/categories/ProjectImages/"/>
    
    
  </entry>
  
  <entry>
    <title>咖啡网站[效果图]</title>
    <link href="http://hlyin.space/ProjectImages/Coffee/"/>
    <id>http://hlyin.space/ProjectImages/Coffee/</id>
    <published>2016-07-24T16:00:00.000Z</published>
    <updated>2016-07-28T17:03:34.000Z</updated>
    
    <content type="html">&lt;p&gt;asp.net&lt;/p&gt;
&lt;p&gt;1、首页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_index.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2、商品页&lt;/p&gt;
&lt;p&gt;给出六种类别筛选：Expressos、Lattes、Tea Lattes、Hot Chocolates、Blended； 可依据给定属性（卡路里、脂肪等）进行排序&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_shop.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;选择Tea Lattes类商品&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_shop2.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;选择Blended类商品&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_shop3.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;选择排序依据（7种属性）&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_shop4.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;3、商品详情&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_detail.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;加入购物车&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_detail2.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;4、注册&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_reg.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;5、管理员界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_admin.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;asp.net&lt;/p&gt;
&lt;p&gt;1、首页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/coffee/coffee_index.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;
    
    </summary>
    
      <category term="ProjectImages" scheme="http://hlyin.space/categories/ProjectImages/"/>
    
    
  </entry>
  
  <entry>
    <title>房地产网站[效果图]</title>
    <link href="http://hlyin.space/ProjectImages/RealEstate/"/>
    <id>http://hlyin.space/ProjectImages/RealEstate/</id>
    <published>2016-07-23T16:00:00.000Z</published>
    <updated>2016-07-28T17:03:38.000Z</updated>
    
    <content type="html">&lt;p&gt;1、首页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_index.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_index2.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_index3.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2、管理员&lt;/p&gt;
&lt;p&gt;管理员可以&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;管理房屋验证&lt;/li&gt;
&lt;li&gt;处理用户投诉&lt;/li&gt;
&lt;li&gt;管理用户信息&lt;/li&gt;
&lt;li&gt;管理房屋信息&lt;/li&gt;
&lt;li&gt;管理广告信息&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;房屋验证&lt;br&gt;可按已处理验证和未处理验证进行查询，可设置分页大小，默认为10，对查询出的结果，&lt;code&gt;处理结果&lt;/code&gt;栏可选择&lt;code&gt;未处理&lt;/code&gt;、&lt;code&gt;已通过&lt;/code&gt;、&lt;code&gt;不通过&lt;/code&gt;三种结果，如查询&lt;code&gt;未处理验证&lt;/code&gt;，将某一条记录的结果改为&lt;code&gt;已通过&lt;/code&gt;后，页面异步刷新，此记录不显示，并可在&lt;code&gt;已处理验证&lt;/code&gt;中查询到&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_admin.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_admin2.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_admin3.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;用户信息管理&lt;/p&gt;
&lt;p&gt;增删查改用户&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_admin4.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_admin5.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;房屋信息管理&lt;br&gt;三种查询类别&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_admin6.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;3、个人中心&lt;br&gt;分为普通用户的个人中西和企业用户的企业中心&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_mine.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;用户设置&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_mine2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;1、首页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/realestate/realestate_index.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;im
    
    </summary>
    
      <category term="ProjectImages" scheme="http://hlyin.space/categories/ProjectImages/"/>
    
    
  </entry>
  
  <entry>
    <title>搜索引擎[效果图]</title>
    <link href="http://hlyin.space/ProjectImages/SearchEngine/"/>
    <id>http://hlyin.space/ProjectImages/SearchEngine/</id>
    <published>2016-07-22T16:00:00.000Z</published>
    <updated>2016-07-28T17:03:41.000Z</updated>
    
    <content type="html">&lt;p&gt;使用：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;语言：Java&lt;/li&gt;
&lt;li&gt;爬虫：Heritrix&lt;/li&gt;
&lt;li&gt;分词：je-analysis&lt;/li&gt;
&lt;li&gt;索引：Lucene&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;1、首页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/searchengine/searchengine_3.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2、搜索结果页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/searchengine/searchengine_4.png&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;使用：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;语言：Java&lt;/li&gt;
&lt;li&gt;爬虫：Heritrix&lt;/li&gt;
&lt;li&gt;分词：je-analysis&lt;/li&gt;
&lt;li&gt;索引：Lucene&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;1、首页&lt;/p
    
    </summary>
    
      <category term="ProjectImages" scheme="http://hlyin.space/categories/ProjectImages/"/>
    
    
  </entry>
  
  <entry>
    <title>诗词学习网站[效果图]</title>
    <link href="http://hlyin.space/ProjectImages/Poetry/"/>
    <id>http://hlyin.space/ProjectImages/Poetry/</id>
    <published>2016-07-21T16:00:00.000Z</published>
    <updated>2016-07-28T17:03:44.000Z</updated>
    
    <content type="html">&lt;p&gt;1、首页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_index.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2、诗词浏览，由左边选择诗人后显示对应的作品&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_browse.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;分诗、词、曲三类进行筛选，并可在此三类中选择朝代，选择后左方的代表诗人候选进行更新&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_browse2.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;诗-唐代&lt;/code&gt;后，左边的代表诗人更新&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_browse3.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;选择&lt;code&gt;词-清-纳兰性德&lt;/code&gt;后显示作品&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_browse4.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;3、诗词详情&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_browse5.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;诗词详情中可进行自测，随机生成填空题形式&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_browse6.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;4、登陆界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_login.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;5、注册界面&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_reg.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;6、晋级&lt;br&gt;用户完成一阶段学习后可参与晋级测验提升等级，提升后提供新一级难度的诗词&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_exam.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;1、首页&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/poetry/poetry_index.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&lt;br&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;2、诗词浏览，
    
    </summary>
    
      <category term="ProjectImages" scheme="http://hlyin.space/categories/ProjectImages/"/>
    
    
  </entry>
  
  <entry>
    <title>DES算法</title>
    <link href="http://hlyin.space/Information-Security/des/"/>
    <id>http://hlyin.space/Information-Security/des/</id>
    <published>2016-05-01T16:00:00.000Z</published>
    <updated>2016-05-08T12:48:52.000Z</updated>
    
    <content type="html">&lt;p&gt;算法实现按照《信息安全原理与技术》(郭亚军、宋建华、李莉、董慧慧编著)给出的过程，输入输出格式按照本书56页例3.8指定，即输入16个字符的16进制明文和密钥 (输入16个16进制char后自动处理成64位的2进制进行计算，也即DES分组大小和DES的密钥大小)，输出64位2进制密文（解密时输出64位2进制明文）和对应的16位16进制密文/明文，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/InformationSecurity/des/des1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;源码丢在github上，有需要的可以下载查看，地址：&lt;a href=&quot;https://github.com/louiehuang/DES&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;https://github.com/louiehuang/DES&lt;/a&gt;&lt;/p&gt;
&lt;h3 id=&quot;一、算法过程&quot;&gt;&lt;a href=&quot;#一、算法过程&quot; class=&quot;headerlink&quot; title=&quot;一、算法过程&quot;&gt;&lt;/a&gt;一、算法过程&lt;/h3&gt;&lt;p&gt;DES原理本身不难理解，只是实现起来比较麻烦，所以这里只是大概提一下算法过程，详细过程可以参考《信息安全原理与技术》或 &lt;a href=&quot;http://www.hankcs.com/security/des-algorithm-illustrated.html&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;DES算法实例详解&lt;/a&gt;，讲得都比较清楚。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（1）处理密钥&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;输入64位密钥，经过置换选择1（56位）得到56位的实际密钥&lt;/li&gt;
&lt;li&gt;按28位1组分成前后C和D两个部分&lt;/li&gt;
&lt;li&gt;进行16轮循环，每轮循环中先对C和D循环左移，再将结果合并&lt;/li&gt;
&lt;li&gt;通过置换选择2（48位）选出当前轮的48位子密钥。&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;（2）处理明文&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;输入64位明文，初始置换&lt;/li&gt;
&lt;li&gt;按32位1组分成前后L和R两个部分&lt;/li&gt;
&lt;li&gt;进行16轮迭代，每轮迭代中，下一轮使用的L为本轮的R，下一轮使用的R需经过如下计算得到：&lt;br&gt; 先将32位的R经过扩展置换E扩展成48位，与当前轮使用的子密钥（加密时为顺序使用子密钥，解密时为逆序使用子密钥）进行异或，将得到的48位结果按6位1组分成8组，每组使用1个S盒进行置换，每组得到4位输出，即最后得到32位的输出，将此输出结果经置换P后得到的结果与本轮的L相异或，即为下一轮的R&lt;/li&gt;
&lt;li&gt;16轮迭代结束后，将最后得到的L和R交换，即（R，L）&lt;/li&gt;
&lt;li&gt;逆初始置换后得到64位密文&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;二、算法实现&quot;&gt;&lt;a href=&quot;#二、算法实现&quot; class=&quot;headerlink&quot; title=&quot;二、算法实现&quot;&gt;&lt;/a&gt;二、算法实现&lt;/h3&gt;&lt;p&gt;为了清晰理解DES算法的原理，希望将算法中所有的中间结果均能输出出来查看，基于这个目的，我选取的主要数据结构为char数组，不需要输出中间结果则可以使用bool类型，运算效率比char高… 嗯没管效率只是为了理解DES而已…&lt;/p&gt;
&lt;p&gt;我按课本56页例3.8制定输入格式，即输入的明文和密钥均为16位的16进制字符串，因此为了输出中间过程，需要将输入转换成64位的2进制字符数组，char类型数组最后一位需要放’\0’，因此所有的char数组的实际大小均为算法所需大小加1，主要的数据结构如下：&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;输入：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;char HexMsg[17], char HexKey[17] //明文和密钥输入为16位的16进制字符串&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;预处理：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;char HexMsg[17] → char BiMsg[65] //64位的2进制明文&lt;/li&gt;
&lt;li&gt;char HexKey[17] → char BiKey[65] //64位的2进制密钥&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;DES：&lt;br&gt;产生子密钥：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;char realKey[57] //经置换选择1选出56位&lt;/li&gt;
&lt;li&gt;char C[29], D[29] //前后2部分，各28位&lt;/li&gt;
&lt;li&gt;char CDCombine[57] //循环左移后将C、D数组结合&lt;/li&gt;
&lt;li&gt;char subKey[16][49] //置换选择2后产生的子密钥&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;初始置换：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;char BiMsgCopy[57] //复制一份原数组，否则在期间的改变会使得替换的元素发生改变&lt;/li&gt;
&lt;li&gt;char L[33], R[33] //前后2部分，各32位&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;16轮迭代：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;char RCopy[29] //复制R，运算期间会改变R，而最后需要将本轮开始的R赋给下一轮的L&lt;/li&gt;
&lt;li&gt;char ExtendedR[49] //扩展48位，与子密钥的异或直接修改ExtendedR&lt;/li&gt;
&lt;li&gt;char group[7] //将48位的ExtendedR分层6位1组的group，对每组group按S盒查找替换，替换结果直接修改R&lt;/li&gt;
&lt;li&gt;char SR[33] //置换P时复制经S盒变化后的R&lt;/li&gt;
&lt;li&gt;L与R异或直接修改R，此时得到本轮的最终R，即下一轮输入的R&lt;/li&gt;
&lt;li&gt;将本轮开始时的R复制给L，即RCopy赋给L，此时得到本轮的最终L，即下一轮输入的L&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;32位互换：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;char RLChange[65] //互换L16和R16位置，即（R16，L16）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;逆初始置换：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;char Cipher[65] //逆初始置换后的密文（解密时为明文）结果&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;h3 id=&quot;三、部分代码解释&quot;&gt;&lt;a href=&quot;#三、部分代码解释&quot; class=&quot;headerlink&quot; title=&quot;三、部分代码解释&quot;&gt;&lt;/a&gt;三、部分代码解释&lt;/h3&gt;&lt;p&gt;预处理时将16位16进制char数组转成64位2进制数组，在S盒变换时，需要将S盒中行列对应的16进制元素（1位）转换成2进制（4位），在这两个地方使用16进制转2进制，代码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;java&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/***16进制数组转2进制数组(16元素)，输入M和K时使用(64位)以及S盒变换时使用(4位)***/&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * HexToBi(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *hexArray)
{
    toUpper(hexArray); &lt;span class=&quot;comment&quot;&gt;//小写转大写&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * biArray = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;65&lt;/span&gt;];
    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;;
    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *p = hexArray;
        &lt;span class=&quot;keyword&quot;&gt;while&lt;/span&gt;(*p)&lt;span class=&quot;comment&quot;&gt;//字符串不结束就循环&lt;/span&gt;
        {
        string temp;
        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(*p&amp;gt;=&lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt; &amp;amp;&amp;amp; *p &amp;lt;=&lt;span class=&quot;string&quot;&gt;&#39;9&#39;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//数字&lt;/span&gt;
            {
            temp = HexBiTable[*p - &lt;span class=&quot;number&quot;&gt;48&lt;/span&gt;];
        }
        &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(*p&amp;gt;=&lt;span class=&quot;string&quot;&gt;&#39;A&#39;&lt;/span&gt; &amp;amp;&amp;amp; *p &amp;lt;=&lt;span class=&quot;string&quot;&gt;&#39;F&#39;&lt;/span&gt;) &lt;span class=&quot;comment&quot;&gt;//A~F字符&lt;/span&gt;
        {
            temp = HexBiTable[*p - &lt;span class=&quot;number&quot;&gt;65&lt;/span&gt; + &lt;span class=&quot;number&quot;&gt;10&lt;/span&gt;];
        }
        &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;; i++, index++)
        {
            biArray[index] = temp[i];
        }
        p++; &lt;span class=&quot;comment&quot;&gt;//指针后指，准备处理下一个字母&lt;/span&gt;
        }

    biArray[index] = &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;;
    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; biArray;
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;考虑到这里的需求是16进制char数组转2进制char数组，而不是16进制整型转2进制，因此相比于类型转换后辗转相除，采用的是查表HexBiTable替换更为有效。&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;产生子密钥：&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;置换选择1：&lt;/strong&gt;&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;c++&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * realKey = new &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;57&lt;/span&gt;]; realKey[&lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//56位有效密钥    &lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;/**置换选择1，64位中选择56位得到实际使用的56位密钥**/&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;56&lt;/span&gt;; i++)
{
    &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; index = PC1Table[i] - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//-1后才是在数组中的实际下标 &lt;/span&gt;
    realKey[i] = BiKey[index];
}
&lt;span class=&quot;comment&quot;&gt;//cout&amp;lt;&amp;lt;realKey&amp;lt;&amp;lt;endl;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;通过查表PC1Table，即置换选择1，得到应替换元素的位置，需要减1得到在数组中的下标，for循环56次，得到56位的置换选择后的56位密钥，每次置换选择在原64位密钥BiKey中查找。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;循环左移：&lt;/strong&gt;&lt;br&gt;循环左移n位，通过3次逆序使时间复杂度降为O(n)，如循环左移2位10010011，则先逆序前2位得到01，再逆序后所有位得到110010，此时即为01110010，最后逆序所有位，得到01001110，即为最终结果。&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;c++&quot;&gt;&lt;span class=&quot;comment&quot;&gt;/***循环左移n位，复杂度0(n)，通过三次逆序实现***/&lt;/span&gt;
&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;LeftShift&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; * arr, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; n)&lt;/span&gt;
&lt;/span&gt;{
    Reverse(arr, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, n - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//逆序前n位&lt;/span&gt;
    Reverse(arr, n, &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//逆序后所有位&lt;/span&gt;
    Reverse(arr, &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;, &lt;span class=&quot;number&quot;&gt;28&lt;/span&gt; - &lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;); &lt;span class=&quot;comment&quot;&gt;//逆序所有位&lt;/span&gt;
}

&lt;span class=&quot;comment&quot;&gt;/***逆序排列***/&lt;/span&gt;
&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;void&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;Reverse&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *arr, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; begin, &lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; end)&lt;/span&gt;
&lt;/span&gt;{
    &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; temp;
    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;( ; begin &amp;lt; end; begin++, end--)
    {
        temp = arr[end];
        arr[end] = arr[begin];
        arr[begin] = temp;
    }
}
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;在对明文的处理中的置换基本类同与置换选择1的实现，得到48位的扩展R后进行S盒变换，实现为将扩展R分成8组，每组6位，进行8轮的循环，每个循环中对1个组使用S盒变换，循环中先获取当前轮进行变换的6位输入group，如下：&lt;/p&gt;
&lt;figure class=&quot;highlight c++&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; group[&lt;span class=&quot;number&quot;&gt;7&lt;/span&gt;]; group[&lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;; &lt;span class=&quot;comment&quot;&gt;//1组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt;; i++)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	group[i] = ExtendedR[s * &lt;span class=&quot;number&quot;&gt;6&lt;/span&gt; + i]; &lt;span class=&quot;comment&quot;&gt;//6位1组&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;得到group后需据此获取在S盒中的行和列下标用来获取S盒对应的元素值，这里以group=”010001”为例，行即为01，列为1000，需要将2进制转成10进制以得到下标，为方便计算，将行表示为0001，这样仍通过查表HexBiTable来获取，这里仅仅就只是为了方便，其实并不好… 此时line=”0001”，column=”1000”，查表值0001对应的下标为1，1000对应的下标为8，所以在S盒中行下标x=1，列下标y=8，查S[i][x][y]得到对应的元素，以S1为例，即i=0，此时元素值为10，最后需要将整型的10转成4位的2进制数组，得到1010，代码如下：&lt;/p&gt;
&lt;pre&gt;&lt;code class=&quot;c++&quot;&gt;&lt;span class=&quot;comment&quot;&gt;//16进制字符串转10进制整型&lt;/span&gt;
&lt;span class=&quot;comment&quot;&gt;//如一组为010001，则line=&quot;0001&quot;, colum=&quot;1000&quot;，则x=1, y=8&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; x, y; &lt;span class=&quot;comment&quot;&gt;//x为在S盒中的行下标，y为列下标&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *line = new &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]; line[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;;
&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *column = new &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]; column[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;;
line[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;; line[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;; line[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] = group[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]; line[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = group[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;]; &lt;span class=&quot;comment&quot;&gt;//01即为00 01&lt;/span&gt;
column[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;] = group[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;]; column[&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;] = group[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;]; column[&lt;span class=&quot;number&quot;&gt;2&lt;/span&gt;] = group[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;]; column[&lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;] = group[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;];

&lt;span class=&quot;comment&quot;&gt;//通过HexBiTable找到2进制对应的10进制（数组下标）&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;bool&lt;/span&gt; xflag = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;, yflag = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;; 
&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;lt; &lt;span class=&quot;number&quot;&gt;16&lt;/span&gt;; i++)
{
    xflag = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;; yflag = &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;; 
    &lt;span class=&quot;comment&quot;&gt;//找行和列，比对HexBiTable[i]和column，若相等，则column所对应的列下标即为i（间接的2进制转10进制）&lt;/span&gt;
    &lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; j = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; j &amp;lt; &lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;; j++)
    {
        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(line[j] != HexBiTable[i][j]) &lt;span class=&quot;comment&quot;&gt;//不相等&lt;/span&gt;
            xflag = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;; 
        &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(column[j] != HexBiTable[i][j]) &lt;span class=&quot;comment&quot;&gt;//不相等&lt;/span&gt;
            yflag = &lt;span class=&quot;literal&quot;&gt;false&lt;/span&gt;; 
    }
    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(xflag == &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)
    {
        x = i;
    }
    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(yflag == &lt;span class=&quot;literal&quot;&gt;true&lt;/span&gt;)
    {
        y = i;
    }
}
&lt;span class=&quot;comment&quot;&gt;//cout&amp;lt;&amp;lt;x&amp;lt;&amp;lt;&quot;, &quot;&amp;lt;&amp;lt;y&amp;lt;&amp;lt;endl;&lt;/span&gt;

&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; target = SBox[s][x][y]; &lt;span class=&quot;comment&quot;&gt;//获取S盒对应行列的元素&lt;/span&gt;

&lt;span class=&quot;comment&quot;&gt;//target换成2进制char数组&lt;/span&gt;
&lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt; *biTarget = new &lt;span class=&quot;keyword&quot;&gt;char&lt;/span&gt;[&lt;span class=&quot;number&quot;&gt;5&lt;/span&gt;];
&lt;span class=&quot;keyword&quot;&gt;for&lt;/span&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; i = &lt;span class=&quot;number&quot;&gt;3&lt;/span&gt;, index = &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i &amp;gt;= &lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;; i--, index++)
{  
    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(target &amp;amp; (&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt; &amp;lt;&amp;lt; i))  
        biTarget[index] =  &lt;span class=&quot;string&quot;&gt;&#39;1&#39;&lt;/span&gt;;  
    &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt;  
        biTarget[index] =  &lt;span class=&quot;string&quot;&gt;&#39;0&#39;&lt;/span&gt;;  
}
biTarget[&lt;span class=&quot;number&quot;&gt;4&lt;/span&gt;] = &lt;span class=&quot;string&quot;&gt;&#39;\0&#39;&lt;/span&gt;;
&lt;span class=&quot;comment&quot;&gt;//cout&amp;lt;&amp;lt;biTarget&amp;lt;&amp;lt;endl;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;
&lt;p&gt;至此得到此轮的4位输出，按其修改R对应位置，8轮S盒变化后即得到32位的输出结果。&lt;/p&gt;
&lt;h3 id=&quot;四、运行结果：&quot;&gt;&lt;a href=&quot;#四、运行结果：&quot; class=&quot;headerlink&quot; title=&quot;四、运行结果：&quot;&gt;&lt;/a&gt;四、运行结果：&lt;/h3&gt;&lt;p&gt;（1）不输出中间结果：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/InformationSecurity/des/des1.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;中间结果：&lt;br&gt;（2）16个子密钥：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/InformationSecurity/des/des2.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;（3）16轮L和R&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/InformationSecurity/des/des3.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;（4）其他&lt;br&gt;其他各个步骤的结果输出语句均在代码中，去掉注释即可输出查看。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;算法实现按照《信息安全原理与技术》(郭亚军、宋建华、李莉、董慧慧编著)给出的过程，输入输出格式按照本书56页例3.8指定，即输入16个字符的16进制明文和密钥 (输入16个16进制char后自动处理成64位的2进制进行计算，也即DES分组大小和DES的密钥大小)，输出64位
    
    </summary>
    
      <category term="Information Security" scheme="http://hlyin.space/categories/Information-Security/"/>
    
    
  </entry>
  
  <entry>
    <title>子网掩码与子网号</title>
    <link href="http://hlyin.space/Computer-Networks/subnetmask/"/>
    <id>http://hlyin.space/Computer-Networks/subnetmask/</id>
    <published>2016-04-10T16:00:00.000Z</published>
    <updated>2016-04-22T13:26:57.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 先回顾IP地址，IP地址是分层的，包括&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;网络&lt;/strong&gt;&lt;/font&gt;和&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;主机&lt;/strong&gt;&lt;/font&gt;两个部分，按网络部分和主机部分的不同长度主要分为A、B、C三类(还有多播组的D类和不再使用的E类)，但每一类的网络部分和主机部分的总长度相等，均为32位，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/subnet_mask/ip_type.png&quot; alt=&quot;Drawing&quot; width=&quot;400px&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;A类：&lt;/strong&gt;最前面1位为0，7位标识网络号，24位标识主机号，则第一段取值为1~126，对于A类IP，最多有2^7 - 2 = 126个(可用)A类网络 (减2是因为要去掉全0的主机地址和全1的广播地址)，每个A类网路中，最多可有2^24 - 2 = 16777214 台(可用)主机&lt;br&gt;&lt;del&gt;地址：1.0.0.0 ~ 126.0.0.0&lt;/del&gt;&lt;br&gt;&lt;del&gt;0.0.0.0 和 127.0.0.0保留&lt;/del&gt; &lt;/p&gt;
&lt;p&gt;&lt;strong&gt;B类：&lt;/strong&gt;最前面2位为10，14位标识网络号，16位标识主机号，则第一段取值为128~191，对于B类IP，有2^14 - 1 = 16383个B类网络 (B类网络不会有全0全1，减1减的是128.0.0.0这个不指派地址)，每个B类网路中，最多可有2^16 - 2 =65534 台主机&lt;br&gt;地址：128.0.0.1 ~ 191.254.255.254&lt;br&gt;128.0.0.0 不指派&lt;br&gt;&lt;del&gt;地址：128.1.0.0 ~ 191.254.0.0&lt;/del&gt;&lt;br&gt;&lt;del&gt;128.0.0.0 和 191.255.0.0保留&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;C类：&lt;/strong&gt;最前面3位为110，21位标识网络号，8位标识主机号，则第一段取值为192~223，对于C类IP，有2^21 - 1 = 2097151个C类网络，每个C类网路中，最多可有2^8 - 2 =254 台主机&lt;/p&gt;
&lt;p&gt;&lt;del&gt;地址：192.0.1.0 ~ 223.255.254.0&lt;/del&gt;&lt;br&gt;&lt;del&gt;192.0.0.0 和 223.255.255.0保留&lt;/del&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 为了提高地址分配的效率和减少分配网络号总数，采取&lt;strong&gt;划分子网&lt;/strong&gt;的策略，在多个网络中共享一个网络号的机制涉及使用子网掩码，子网掩码的作用就是用来判断任意两个或多个IP地址是否属于同一个子网。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 子网划分的实现是基于&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;网络位占用主机位&lt;/strong&gt;&lt;/font&gt;的，以21位网络位和8位主机位的C类地址为例，若将一个C类网络划分成2个子网，则网络位需要占用1位主机位，即现在是22位网络位和7位主机位，通过占用的这1位的值来区分划分成的2个子网，同理，若划分成3个或4个子网则占用2个主机位…&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 但是现在，一个外部的网络，并不知道连接的这个C类网络是否划分了子网，所以需要子网掩码，当未划分时，A类地址的缺省子网掩码为255.0.0.0，B类为255.255.0.0，C类为255.255.255.0，仍以C类网络为例，划分成2个子网(占1位主机位)后子网掩码为255.255.255.128(128个主机，126个可用主机)，划分成4个子网(占位主机位)后子网掩码为255.255.255.192，如下表：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;占用主机位位数&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;划分子网数&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;子网掩码&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;主机数&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;可用主机数&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;不划分&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;255.255.255.0&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;256&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;254&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;255.255.255.128&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;128&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;126&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;255.255.255.192&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;64&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;62&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;3&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;8&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;255.255.255.224&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;32&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;30&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;16&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;255.255.255.240&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;16&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;14&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;5&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;32&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;255.255.255.248&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;8&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;6&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;6&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;64&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;255.255.255.252&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;2&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; ifconfig(win为ipconfig) 查看当前计算机的ip地址及子网掩码，当前ip为192.168.1.105，即C类网络，子网掩码0xffffff00，即255.255.255.0，未划分。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/subnet_mask/ifconfig.png&quot; alt=&quot;Drawing&quot; width=&quot;400px&quot;&gt;&lt;/p&gt;
&lt;!-- ![](http://gitimage-10031767.file.myqcloud.com/blog_image/subnet_mask/ifconfig.png) --&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 子网掩码是一个IPv4地址，在一个给定的子网中，所有主机都配置相同的掩码，即&lt;font color=&quot;red&quot;&gt;每个子网只有一个掩码，但需要注意，并不是子网掩码相同就是同一子网&lt;/font&gt;，看一个《计算机网络系统方法》中的例子，如下图：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/subnet_mask/book_subnet.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 假设H1向H2发数据，首先H1需要判断H2是不是和自己在同一子网中，这一过程为：将&lt;font color=&quot;red&quot;&gt;H2的IP地址&lt;/font&gt;与&lt;font color=&quot;red&quot;&gt;H1的子网掩码&lt;/font&gt;进行&lt;font color=&quot;red&quot;&gt;按位与&lt;/font&gt;运算，将结果与H1的子网号相比，若相同，则属于同一子网，否则不是。那么将H2的IP地址128.96.34.139与上H1的子网掩码255.255.255.128后，结果为128.96.34.128，不等于H1的子网号128.96.34.0，因而H1与H2并不在同一子网中，即使这两个子网的子网掩码相同，都为255.255.255.128。而之所以相同的子网掩码却可以有不同的子网号，从计算上看是由于与之相&amp;amp;的IP地址不同，但实质原因是被占用的主机位可以有不同的取值而决定的，比如一个C类IP，划分成2个子网，则主机位被占用1位，而这被占用的1位取0或取1，便形成了2个不同的子网号。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 通过前面的计算，H1可以知道H2与其不在同一子网，因此将分组给它的默认路由器R1由R1负责转发，根据转发表确定转发路径，发送到子网号为128.96.34.128的网络中，这之后需要确定在此网络中的接收主机，因为此网络中可能不止有一台主机H2，比如还有IP地址为128.96.34.140的H4，这时将子网掩码取反后再与H2的IP地址，即用0.0.0.127 &amp;amp; 128.96.34.139，结果0.0.0.11即为主机号，根据主机号在网络中确定具体的接收主机。&lt;/p&gt;
&lt;h3 id=&quot;结论和归纳：&quot;&gt;&lt;a href=&quot;#结论和归纳：&quot; class=&quot;headerlink&quot; title=&quot;结论和归纳：&quot;&gt;&lt;/a&gt;结论和归纳：&lt;/h3&gt;&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;font color=&quot;red&quot;&gt;每个子网只有一个掩码，但需要注意，并不是子网掩码相同就是同一子网&lt;/font&gt;&lt;/li&gt;
&lt;li&gt;子网号 = IP &amp;amp; 子网掩码&lt;/li&gt;
&lt;li&gt;主机号 = IP &amp;amp; 掩码取反&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h4 id=&quot;补充-来自知乎-：&quot;&gt;&lt;a href=&quot;#补充-来自知乎-：&quot; class=&quot;headerlink&quot; title=&quot;补充(来自知乎)：&quot;&gt;&lt;/a&gt;补充(来自知乎)：&lt;/h4&gt;&lt;p&gt;比较下面的两个IP地址，&lt;br&gt;A：219.218.44.123&lt;br&gt;B：219.218.45.34&lt;br&gt;在子网掩码M1：255.255.254.0下为同一子网，而在M2：255.255.255.0下为不同子网。&lt;/p&gt;
&lt;p&gt;分析：&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;主机&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;地址&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;A:&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11011011-11011010-00101100-01111011&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;B:&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11011011-11011010-00101101-00100010&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;子网掩码&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;地址&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;M1:&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11111111-11111111-11111110-00000000（254）&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;M2:&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11111111-11111111-11111111-00000000（255）&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;通过做and运算，可以看出来&lt;br&gt;A&amp;amp;M1:11011011-11011010-00101100-00000000&lt;br&gt;B&amp;amp;M1:11011011-11011010-00101100-00000000&lt;/p&gt;
&lt;p&gt;A&amp;amp;M2:11011011-11011010-001011&lt;font color=&quot;red&quot;&gt;00&lt;/font&gt;-00000000&lt;br&gt;B&amp;amp;M2:11011011-11011010-001011&lt;font color=&quot;red&quot;&gt;01&lt;/font&gt;-00000000&lt;/p&gt;
&lt;p&gt;假设还有如下IP&lt;br&gt;C：219.218.45.200&lt;br&gt;可以得出在子网M2：255.255.255.0下跟B同子网，而在子网M3：255.255.255.128下为不同子网。&lt;/p&gt;
&lt;h4 id=&quot;参考：&quot;&gt;&lt;a href=&quot;#参考：&quot; class=&quot;headerlink&quot; title=&quot;参考：&quot;&gt;&lt;/a&gt;参考：&lt;/h4&gt;&lt;p&gt;[1] Larry L.peterson, Bruce S.Davie. 计算机网络系统方法[M].四川: 机械工业出版社, 2015: 113-119&lt;br&gt;[1] 恒思凝. 子网掩码判断两个ip是否在同一子网如何保证准确. &lt;a href=&quot;http://www.zhihu.com/question/36296884/answer/68366061&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://www.zhihu.com/question/36296884/answer/68366061&lt;/a&gt;&lt;br&gt;[2] 计算机网络地址，主机地址，子网掩码，网段，子网划分的理解. &lt;a href=&quot;http://blog.csdn.net/hzhsan/article/details/12783193&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/hzhsan/article/details/12783193&lt;/a&gt;&lt;br&gt;[3] 计算机网络子网掩码. &lt;a href=&quot;http://blog.csdn.net/oklizy/article/details/6805836&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://blog.csdn.net/oklizy/article/details/6805836&lt;/a&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 先回顾IP地址，IP地址是分层的，包括&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;网络&lt;/strong&gt;&lt;/font&gt;和&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;主机&lt;/strong&gt;&lt;/font&gt;两个部分
    
    </summary>
    
      <category term="Computer Networks" scheme="http://hlyin.space/categories/Computer-Networks/"/>
    
    
  </entry>
  
  <entry>
    <title>访问速度优化(二)---国内解析到coding，国外解析到github</title>
    <link href="http://hlyin.space/blog/visiting_speed_opt2/"/>
    <id>http://hlyin.space/blog/visiting_speed_opt2/</id>
    <published>2016-04-09T16:00:00.000Z</published>
    <updated>2016-04-11T15:15:52.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 之前通过将google字体和加载耗时较长的图片存到云对象存储(COS)大幅提升了这个网站的访问速度，其中google字体因为google的原因而耗时很长，而图片则是因为这个网站代码托管在github，需要从github那边加载，而github，国外的，访问速度相比对国内主机慢不少。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 因此将网站同时部署到github和coding，比较一下两个地方的ping值：&lt;/p&gt;
&lt;p&gt;(1) ping github， 平均366.384ms&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt_2/ping_github.png&quot; alt=&quot;Drawing&quot; width=&quot;400px&quot;&gt;&lt;/p&gt;
&lt;p&gt;(2)ping coding， 平均34.388ms，ping值低10倍&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt_2/ping_coding.png&quot; alt=&quot;Drawing&quot; width=&quot;400px&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 代码托管到coding和托管到github一样的流程，在coding注册账号后新建项目，不同于github pages的项目名必须和github用户名相同，在coding的项目名可以任意起，域名结构为：&lt;code&gt;username.coding.io/projectname&lt;/code&gt;， 但若想通过&lt;code&gt;username.coding.io&lt;/code&gt;访问，即不带项目名访问，则需要将项目名命名为用户名，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt_2/codingproject.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 然后部署，可以同时部署到coding和github，配置中添加一条部署仓库即可，以SSH连接为例：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;deploy:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  type: git&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  repo:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      github: git@github.com:louiehuang/louiehuang.github.io.git,master&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;      coding: git@git.coding.net:louiehuang/louiehuang.git,master&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 然而我在mac下deploy的速度很慢，不知原因，所以手动push，先在coding的账户-&amp;gt;SSH公钥里添加公钥，直接添加github的公钥即可。&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;在本地cd到放仓库的地方，然后clone下来，我的项目是&lt;code&gt;git clone git@git.coding.net:louiehuang/louiehuang.git&lt;/code&gt;，clone下来的仓库就是louiehuang.git&lt;/li&gt;
&lt;li&gt;将generate生成的public文件夹下所有文件复制到仓库louiehuang.git&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git add *&lt;/code&gt;，添加所有新加项，因为.gitignore的设置不用&lt;code&gt;git add .&lt;/code&gt;，把这个ignore文件删掉后也可以用&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git commit -m &amp;quot;comment&amp;quot;&lt;/code&gt;&lt;/li&gt;
&lt;li&gt;&lt;code&gt;git push origin master&lt;/code&gt;&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 然后在coding中的项目中将Pages服务打开，将自己的域名添加进来，之后设置域名解析，将国内访问解析到coding，国外解析到github，在自己的云解析平台设置，如下图：&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt_2/domain.png&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 至此完成了在coding的托管。因为每次更新都需要同时更新coding和github两个地方，所以写了段命令来bash，每次同时push到coding和github的仓库。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 之前通过将google字体和加载耗时较长的图片存到云对象存储(COS)大幅提升了这个网站的访问速度，其中google字体因为google的原因而耗时很长，而图片则是因为这个网站代码托管在github，需要从github那边加
    
    </summary>
    
      <category term="blog" scheme="http://hlyin.space/categories/blog/"/>
    
    
  </entry>
  
  <entry>
    <title>访问速度优化(一)---图片及谷歌字体转存COS</title>
    <link href="http://hlyin.space/blog/visiting_speed_opt1/"/>
    <id>http://hlyin.space/blog/visiting_speed_opt1/</id>
    <published>2016-04-08T16:00:00.000Z</published>
    <updated>2016-04-10T13:45:11.000Z</updated>
    
    <content type="html">&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这个blog (&lt;a href=&quot;http://hlyin.space&quot;&gt;http://hlyin.space&lt;/a&gt;) 一直是用chrome做测试和访问，刚搭建起来的时候打开速度比较正常，大概在2、3秒的样子，但这几天突然变得非常慢，需要等1、2分钟才能加载出来，想起来之前都是挂着ss，而现在没有开ss，觉得可能问题出在访问了被墙的资源，因而做些测试来查找并解决访问速度问题。&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 比较奇怪的是，用firefox和safari访问速度都比较快，只有chrome打开极慢，打开chrome的开发者工具（快捷键F12），选择network项，然后在历史记录中清除缓存以避免影响测试结果，然后访问网站 (&lt;a href=&quot;http://hlyin.space&quot;&gt;http://hlyin.space&lt;/a&gt;) ，如下图，加载时间为1.5分钟，在Time项中可以观察各项请求的耗时，找到了最耗时的项目，502网关错误，即红色项:&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blogspeed_chrometest1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;放大一点：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blogspeed_chrometest_detail.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;错误提示：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;Font from origin ‘&lt;a href=&quot;http://fontstatic.useso.com&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://fontstatic.useso.com&lt;/a&gt;‘ has been blocked from loading by Cross-Origin Resource Sharing policy: No ‘Access-Control-Allow-Origin’ header is present on the requested resource. Origin ‘&lt;a href=&quot;http://hlyin.space&quot;&gt;http://hlyin.space&lt;/a&gt;‘ is therefore not allowed access. The response had HTTP status code 502.&lt;/li&gt;
&lt;li&gt;Get &lt;a href=&quot;http://fontstatic.useso.com/s/montserrat/v6/zhcz-_WihjSQC0oHJ9TCYPk_vArhqVIZ0nv9q090hN8.woff2&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;http://fontstatic.useso.com/s/montserrat/v6/zhcz-_WihjSQC0oHJ9TCYPk_vArhqVIZ0nv9q090hN8.woff2&lt;/a&gt;&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 可以看出，问题出在&lt;code&gt;zhcz-_WihjSQC0oHJ9TCYPk_vArhqVIZ0nv9q090hN8.woff2&lt;/code&gt;这个字体文件，502网关错误，这个字体的链接在&lt;code&gt;http://fontstatic.useso.com&lt;/code&gt;中，页面相关代码如下：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blogspeed_link.jpg&quot; alt=&quot;&quot;&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这里需要解释一下，blog使用了包括Open Sans等字体在内的谷歌字库字体，而谷歌由于被禁，字体链接不能访问而换成了360的CND，&lt;code&gt;fonts.useso.com&lt;/code&gt;，像上面代码中&lt;code&gt;http://fonts.useso.com/css?family=Open+Sans:400,600&lt;/code&gt; (谷歌的为&lt;code&gt;http://fonts.googleapis.com/css?family=Open+Sans:400,600&lt;/code&gt;)，然而检测结果表明即使换成360CND，这种web font的加载仍十分耗时。&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在这两个link里使用了访问受阻的字体，查看链接，&lt;code&gt;zhcz-_WihjSQC0oHJ9TCYPk_vArhqVIZ0nv9q090hN8.woff2&lt;/code&gt;(无法获取)在第一个链接中被访问，&lt;code&gt;cJZKeOuBrn4kERxqtaUH3aCWcynf_cDxXwCLxiixG1c.ttf&lt;/code&gt; (也无法获取)在第二个链接中被访问。&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blogspeed_linkcontent.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; &lt;/p&gt;&lt;h3&gt;由此可以有两种解决方法：&lt;/h3&gt;&lt;p&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;&lt;del&gt;如果不需要这个字库，则可以&lt;strong&gt;直接去掉这两个字体链接&lt;/strong&gt;，即把这两条link语句去掉，&lt;/del&gt; 虽然是省事，但字体效果没有了的话还是不太可取；&lt;/li&gt;
&lt;li&gt;将字体&lt;strong&gt;添加到自己的云存储中&lt;/strong&gt;通过外链导入，或者&lt;strong&gt;镜像到本地&lt;/strong&gt;，正确的处理方法，之一，当然应该是这样&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 先直接删掉上面那两个link做一下测试，清除缓存后再用chrome测加载时间，结果如下图：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blogspeed_after_delete_font.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 加载时间为13.98秒，相比于1.5分钟有很大的改善，那么可以确定网页打开速度确实受选择的字体影响很大，&lt;strong&gt;为了继续使用选择的字体，将其下载并存放到云存储中。&lt;/strong&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 云对象存储之前用过七牛，但各个云存储供应商，如果不实名认证，能使用的资源非常有限，因为买服务器的时候在腾讯认证过，所以转用腾讯的云存储，使用比较方便，开通对象存储服务就可以，而且50G以内不收费，放图片、字体等资源的话足够了。&lt;br&gt;&lt;strong&gt;（1）&lt;/strong&gt; 先下载所用字体，以&lt;code&gt;http://fonts.useso.com/css?family=Open+Sans:400,600&lt;/code&gt;为例，打开后如下图，打开其中所有的url下载字体，&lt;code&gt;http://fontstatic.useso.com/s/opensans/v13/cJZKeOuBrn4kERxqtaUH3T8E0i7KZn-EPnyo3HZu7kw.woff&lt;/code&gt; 和 &lt;code&gt;http://fontstatic.useso.com/s/opensans/v13/MTP_ySUJH_bn48VBG8sNSnhCUOGz7vYGh680lGh-uXM.woff&lt;/code&gt;&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blog_speed_linkdetail2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）&lt;/strong&gt; 在腾讯云对象存储的控制台新建一个bucket，我这里是gitimage，新建文件夹存放，上传刚刚下载的两个字体文件&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blog_speed_clodestorage1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（3）&lt;/strong&gt; 本地新建一个css文件，我直接取名叫&lt;code&gt;family=Open+Sans:400,600.css&lt;/code&gt;将&lt;code&gt;http://fonts.useso.com/css?family=Open+Sans:400,600&lt;/code&gt;的内容复制进来，将url改成云存储中字体的链接，将这个css也存到云存储中，这时就可以用它的地址也替换link中原来的地址： &lt;code&gt;&amp;lt;link href=&amp;#39;//gitimage-10031767.file.myqcloud.com/blog_image/Theme_Image/family%3DOpen%2BSans400%2C600.css&amp;#39; rel=&amp;#39;stylesheet&amp;#39; type=&amp;#39;text/css&amp;#39;&amp;gt;&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这样就可以使用谷歌字库的字体了，但13.98秒的打开速度对于一个blog来说打开时间仍很长，继续…&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 现在测试结果里最耗时的两项分别是我的图标和背景的加载，198KB的主页背景(bg.jpg)耗时10.13s，264KB的图标(firedoge.ico)耗时11.86s，讲道理的话这种大小是不会用这么多时间的，然而这两个图都是挂在github，国内访问确实会慢不少，因而也将其转存到国内的云存储中，把图片存进去后如下图：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blog_speed_clodestorage2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 再次清除缓存后用chrome测试，结果如下，加载时间降至1.81s，虽然现实.ico图标耗时6s多，但整个blog加载出来不到2s，图标并不影响其他部分的显示。&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blog_speed_afterchangeroute.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 在firefox的开发者工具中测试，加载时间为1.01秒，也有改善。&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/blog_speed_opt/blog_speed_final_firefox.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 至此完成对blog本身的访问速度提升，当然，这是针对国内访问的，国外访问的话实际上用时会增加一些。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 这个blog (&lt;a href=&quot;http://hlyin.space&quot;&gt;http://hlyin.space&lt;/a&gt;) 一直是用chrome做测试和访问，刚搭建起来的时候打开速度比较正常，大概在2、3秒的样子，但这几天突然
    
    </summary>
    
      <category term="blog" scheme="http://hlyin.space/categories/blog/"/>
    
    
  </entry>
  
  <entry>
    <title>添加google统计或百度统计</title>
    <link href="http://hlyin.space/blog/baidu_analytics/"/>
    <id>http://hlyin.space/blog/baidu_analytics/</id>
    <published>2016-04-07T16:00:00.000Z</published>
    <updated>2016-04-10T12:14:40.000Z</updated>
    
    <content type="html">&lt;h2 id=&quot;一、google统计&quot;&gt;&lt;a href=&quot;#一、google统计&quot; class=&quot;headerlink&quot; title=&quot;一、google统计&quot;&gt;&lt;/a&gt;一、google统计&lt;/h2&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 先在 &lt;a href=&quot;https://www.google.com/analytics/&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;google统计&lt;/a&gt; 注册账号，在管理-&amp;gt;跟踪信息-&amp;gt;跟踪代码中获取跟踪ID和跟踪代码，形式如下：&lt;br&gt;ID：&lt;code&gt;UA-76175499-1&lt;/code&gt;&lt;/p&gt;
&lt;p&gt;代码：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    	(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;i,s,o,g,r,a,m&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	i[&lt;span class=&quot;string&quot;&gt;&#39;GoogleAnalyticsObject&#39;&lt;/span&gt;]=r;i[r]=i[r]||&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;)&lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt; 		 (i[r].q=i[r].q||[]).push(&lt;span class=&quot;built_in&quot;&gt;arguments&lt;/span&gt;)&amp;#125;,i[r].l=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;*&lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; &lt;span class=&quot;built_in&quot;&gt;Date&lt;/span&gt;();a=s.createElement(o),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		m=s.getElementsByTagName(o)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  		a.async=&lt;span class=&quot;number&quot;&gt;1&lt;/span&gt;;a.src=g;m.parentNode.insertBefore(a,m)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&amp;#125;)(&lt;span class=&quot;built_in&quot;&gt;window&lt;/span&gt;,&lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;script&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;https://www.google-analytics.com/analytics.js&#39;&lt;/span&gt;,&lt;span class=&quot;string&quot;&gt;&#39;ga&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	ga(&lt;span class=&quot;string&quot;&gt;&#39;create&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;UA-76175499-1&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;auto&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  	ga(&lt;span class=&quot;string&quot;&gt;&#39;send&#39;&lt;/span&gt;, &lt;span class=&quot;string&quot;&gt;&#39;pageview&#39;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;因为网站中每个页面都需要加入上面的跟踪代码，所以添加在模板页中，这里是head.ejs。在配置文件config中设置：&lt;/p&gt;
&lt;figure class=&quot;highlight plain&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;#google统计&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;google_analytics:&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  enable: true&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  id: UA-76175499-1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  site: hlyin.space&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;在head.ejs中，之前添加：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- google统计 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% if (theme.google_analytics) &amp;#123; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	(function(i,s,o,g,r,a,m)&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	i[&#39;GoogleAnalyticsObject&#39;]=r;i[r]=i[r]||function()&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	 (i[r].q=i[r].q||[]).push(arguments)&amp;#125;,i[r].l=1*new Date();a=s.createElement(o),&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		m=s.getElementsByTagName(o)[0];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		a.async=1;a.src=g;m.parentNode.insertBefore(a,m)&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;#125;)(window,document,&#39;script&#39;,&#39;https://www.google-analytics.com/analytics.js&#39;,&#39;ga&#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ga(&#39;create&#39;, &#39;UA-76175499-1&#39;, &#39;auto&#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	ga(&#39;send&#39;, &#39;pageview&#39;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% &amp;#125; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;若不设置config文件，则直接将跟踪代码加入模板也可以，即去掉&lt;code&gt;if (theme.google_analytics)&lt;/code&gt;的判断&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h2 id=&quot;一、百度统计&quot;&gt;&lt;a href=&quot;#一、百度统计&quot; class=&quot;headerlink&quot; title=&quot;一、百度统计&quot;&gt;&lt;/a&gt;一、百度统计&lt;/h2&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 一样的，先注册， &lt;a href=&quot;http://tongji.baidu.com/web/welcome/login&quot; target=&quot;_blank&quot; rel=&quot;external&quot;&gt;百度统计&lt;/a&gt; 注册账号，这里没有跟踪ID，只有跟踪代码，如下形式：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; _hmt = _hmt || [];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;(&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;function&lt;/span&gt;(&lt;span class=&quot;params&quot;&gt;&lt;/span&gt;) &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; hm = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.createElement(&lt;span class=&quot;string&quot;&gt;&quot;script&quot;&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  hm.src = &lt;span class=&quot;string&quot;&gt;&quot;//hm.baidu.com/hm.js?36f2872301a44655ccaff81408d46228&quot;&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  &lt;span class=&quot;keyword&quot;&gt;var&lt;/span&gt; s = &lt;span class=&quot;built_in&quot;&gt;document&lt;/span&gt;.getElementsByTagName(&lt;span class=&quot;string&quot;&gt;&quot;script&quot;&lt;/span&gt;)[&lt;span class=&quot;number&quot;&gt;0&lt;/span&gt;]; &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;  s.parentNode.insertBefore(hm, s);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;同样添加的模板页即可，config中 &lt;code&gt;baidu_analytics: true&lt;/code&gt;， head.ejs中：&lt;/p&gt;
&lt;figure class=&quot;highlight javascript&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;!-- 百度统计 --&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% if (theme.baidu_analytics) &amp;#123; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;script type=&quot;text/javascript&quot;&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var _hmt = _hmt || [];(function() &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var hm = document.createElement(&quot;script&quot;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		hm.src = &quot;//hm.baidu.com/hm.js?36f2872301a44655ccaff81408d46228&quot;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		var s = document.getElementsByTagName(&quot;script&quot;)[0];&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;		s.parentNode.insertBefore(hm, s);&amp;#125;)();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;	&amp;lt;/script&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;lt;% &amp;#125; %&amp;gt;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h2 id=&quot;一、google统计&quot;&gt;&lt;a href=&quot;#一、google统计&quot; class=&quot;headerlink&quot; title=&quot;一、google统计&quot;&gt;&lt;/a&gt;一、google统计&lt;/h2&gt;&lt;p&gt;&amp;nbsp;&amp;nbsp;&amp;nbsp;&amp;nbsp; 先在 &lt;a href=&quot;h
    
    </summary>
    
      <category term="blog" scheme="http://hlyin.space/categories/blog/"/>
    
    
  </entry>
  
  <entry>
    <title>《四月是你的谎言》实景</title>
    <link href="http://hlyin.space/Animation/april/"/>
    <id>http://hlyin.space/Animation/april/</id>
    <published>2016-04-01T16:00:00.000Z</published>
    <updated>2016-04-09T13:45:04.000Z</updated>
    
    <content type="html">&lt;h4 id=&quot;《四月是你的谎言》实景图&quot;&gt;&lt;a href=&quot;#《四月是你的谎言》实景图&quot; class=&quot;headerlink&quot; title=&quot;《四月是你的谎言》实景图&quot;&gt;&lt;/a&gt;《四月是你的谎言》实景图&lt;/h4&gt;&lt;p&gt;“灰心丧气时就用手托着下巴，你会为双手能派上用处而感到高兴的。 — 查理•布朗”&lt;/p&gt;
&lt;audio autoplay loop&gt;&lt;source src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/%E6%A8%AA%E5%B1%B1%E5%85%8B%20-%20%E3%82%A2%E3%82%B1%E3%82%99%E3%82%A4%E3%83%B3.mp3&quot;&gt;&lt;/audio&gt;

&lt;!--&lt;embed height=&quot;100&quot; width=&quot;100&quot; src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/%E6%A8%AA%E5%B1%B1%E5%85%8B%20-%20%E3%82%A2%E3%82%B1%E3%82%99%E3%82%A4%E3%83%B3.mp3&quot; autostart=&quot;true&quot; loop=&quot;true&quot; hidden=&quot;true&quot;&gt;&lt;/embed&gt;--&gt;
&lt;!--&lt;section align=center&gt;&lt;table style=&quot;BORDER-RIGHT: #ff69b4 3px 
dashed; BORDER-TOP: #ff69b4 3px dashed; BORDER-LEFT: #ff69b4 3px dashed; 
BORDER-BOTTOM: #ff69b4 3px dashed&quot; cellSpacing=&quot;0&quot; cellPadding=&quot;0&quot; 
bgColor=&quot;white&quot; id=&quot;table6&quot;&gt; &lt;tr&gt; &lt;td&gt; &lt;table 
borderColor=&quot;#ff69b4&quot; align=&quot;center&quot; bgColor=&quot;#ffccf5&quot; border=&quot;2&quot; 
id=&quot;table7&quot;&gt; &lt;tr&gt; &lt;td style=&quot;FILTER: alpha(opacity=100,style=3)&quot;&gt; 
&lt;section align=&quot;center&quot;&gt; &lt;embed src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/%E6%A8%AA%E5%B1%B1%E5%85%8B%20-%20%E3%82%A2%E3%82%B1%E3%82%99%E3%82%A4%E3%83%B3.mp3&quot; width=&quot;300&quot; height=&quot;45&quot; type=&quot;audio/mpeg&quot; loop=&quot;-1&quot; autostart=&quot;true&quot; volume=&quot;0&quot;&gt;&lt;/td&gt; &lt;/tr&gt; &lt;/table&gt; &lt;/td&gt; &lt;/tr&gt; &lt;/table&gt;--&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/siyue_image_1.jpg&quot; alt=&quot;image_1&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/siyue_image_2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/siyue_image_3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/siyue_image_4.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/siyue_image_5.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/siyue_image_6.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/siyue_image_7.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/siyue_image_8.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/siyue_image_9.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/siyue_image_10.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://7xsmi9.com1.z0.glb.clouddn.com/siyue_image_11.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h4 id=&quot;《四月是你的谎言》实景图&quot;&gt;&lt;a href=&quot;#《四月是你的谎言》实景图&quot; class=&quot;headerlink&quot; title=&quot;《四月是你的谎言》实景图&quot;&gt;&lt;/a&gt;《四月是你的谎言》实景图&lt;/h4&gt;&lt;p&gt;“灰心丧气时就用手托着下巴，你会为双手能派上用处而感到高兴的
    
    </summary>
    
      <category term="Animation" scheme="http://hlyin.space/categories/Animation/"/>
    
    
  </entry>
  
  <entry>
    <title>Android ListView优化</title>
    <link href="http://hlyin.space/Android/Android_ListView_opt/"/>
    <id>http://hlyin.space/Android/Android_ListView_opt/</id>
    <published>2016-03-18T16:00:00.000Z</published>
    <updated>2016-04-12T07:12:06.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;ListView的优化&quot;&gt;&lt;a href=&quot;#ListView的优化&quot; class=&quot;headerlink&quot; title=&quot;ListView的优化&quot;&gt;&lt;/a&gt;ListView的优化&lt;/h3&gt;&lt;p&gt;1.存在问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; 在每次调用getView方法中都要执行&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;两个很耗时的操作&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;inflate方法 (获取布局对象)&lt;/li&gt;
&lt;li&gt;findViewById&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; View &lt;span class=&quot;title&quot;&gt;getView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position, View convertView, ViewGroup parent)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    View view = inflater.inflate(R.layout.item, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;comment&quot;&gt;//view才有findViewById, 而this(这里是Adapter)没有, (MainActivity有)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ImageView header = (ImageView) view.findViewById(R.id.header);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TextView title = (TextView) view.findViewById(R.id.title);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TextView version = (TextView) view.findViewById(R.id.version);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TextView size = (TextView) view.findViewById(R.id.size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Map map = list.get(position); &lt;span class=&quot;comment&quot;&gt;//Map&amp;lt;String, Object&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    header.setImageResource((Integer) map.get(&lt;span class=&quot;string&quot;&gt;&quot;header&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    title.setText((String) map.get(&lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    version.setText((String) map.get(&lt;span class=&quot;string&quot;&gt;&quot;version&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size.setText((String) map.get(&lt;span class=&quot;string&quot;&gt;&quot;size&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; view;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;2.解决方案&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; 在getView方法中使用&lt;font color=&quot;red&quot;&gt;&lt;strong&gt;convertView和ViewHolder&lt;/strong&gt;&lt;/font&gt;&lt;/p&gt;
&lt;ol&gt;
&lt;li&gt;inflate方法耗时：convertView解决 （1级优化）&lt;/li&gt;
&lt;li&gt;findViewById方法耗时：ViewHolder解决 （2级优化）&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;img src=&quot;http://www.kgc.cn/upload/snapscreen/20160319/145837389990900.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;滑出去的item1的布局对象不销毁，而可以直接提供给下一次出现的item6，省去了填充时间 (省去反射操作)， 之后滑出去的item2则给item7 … item5给item10，到了item6以后，因为item6本来就是用的Recycler里的而不是反射的，后面的所有item都可以循环用item1~item5的反射操作生成的5个对象，也即整个操作，最多只有5次反射(item1~item5)。缓冲池，5 (4+1)个视图缓存，多的1是为了处理上半截或下半截。&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.kgc.cn/upload/snapscreen/20160319/145837474528357.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;使用ConvertView后代码如下：&lt;/strong&gt;&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; View &lt;span class=&quot;title&quot;&gt;getView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position, View convertView, ViewGroup parent)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt;(convertView == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        convertView = inflater.inflate(R.layout.item, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ImageView header = (ImageView) convertView.findViewById(R.id.header);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TextView title = (TextView) convertView.findViewById(R.id.title);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TextView version = (TextView) convertView.findViewById(R.id.version);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TextView size = (TextView) convertView.findViewById(R.id.size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Map map = list.get(position); &lt;span class=&quot;comment&quot;&gt;//Map&amp;lt;String, Object&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    header.setImageResource((Integer) map.get(&lt;span class=&quot;string&quot;&gt;&quot;header&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    title.setText((String) map.get(&lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    version.setText((String) map.get(&lt;span class=&quot;string&quot;&gt;&quot;version&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    size.setText((String) map.get(&lt;span class=&quot;string&quot;&gt;&quot;size&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; convertView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
&lt;p&gt;&lt;img src=&quot;http://www.kgc.cn/upload/snapscreen/20160319/145837585787884.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;滑出去的item1，除了布局对象不销毁，控件对象也不销毁，因此item6则不用再调用4次findViewById&lt;/p&gt;
&lt;p&gt;&lt;img src=&quot;http://www.kgc.cn/upload/snapscreen/20160319/145837621143618.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;使用convertView和ViewHolder后代码如下：&lt;/p&gt;
&lt;figure class=&quot;highlight java&quot;&gt;&lt;table&gt;&lt;tr&gt;&lt;td class=&quot;gutter&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;1&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;2&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;3&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;4&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;5&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;6&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;7&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;8&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;9&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;10&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;11&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;12&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;13&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;14&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;15&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;16&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;17&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;18&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;19&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;20&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;21&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;22&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;23&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;24&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;25&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;26&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;27&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;28&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;29&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;30&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;31&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;32&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;33&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;34&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;35&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;td class=&quot;code&quot;&gt;&lt;pre&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; &lt;span class=&quot;class&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;class&lt;/span&gt; &lt;span class=&quot;title&quot;&gt;ViewHolder&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ImageView header;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TextView title;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TextView version;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    TextView size;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;meta&quot;&gt;@Override&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;span class=&quot;function&quot;&gt;&lt;span class=&quot;keyword&quot;&gt;public&lt;/span&gt; View &lt;span class=&quot;title&quot;&gt;getView&lt;/span&gt;&lt;span class=&quot;params&quot;&gt;(&lt;span class=&quot;keyword&quot;&gt;int&lt;/span&gt; position, View convertView, ViewGroup parent)&lt;/span&gt; &lt;/span&gt;&amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    ViewHolder viewHolder = &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;if&lt;/span&gt; (convertView == &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;) &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        convertView = inflater.inflate(R.layout.item, &lt;span class=&quot;keyword&quot;&gt;null&lt;/span&gt;);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        viewHolder = &lt;span class=&quot;keyword&quot;&gt;new&lt;/span&gt; ViewHolder();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        &lt;span class=&quot;comment&quot;&gt;//view才有findViewById, 而this(这里是Adapter)没有, (MainActivity有)&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        viewHolder.header = (ImageView) convertView.findViewById(R.id.header);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        viewHolder.title = (TextView) convertView.findViewById(R.id.title);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        viewHolder.version = (TextView) convertView.findViewById(R.id.version);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        viewHolder.size = (TextView) convertView.findViewById(R.id.size);&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        convertView.setTag(viewHolder); &lt;span class=&quot;comment&quot;&gt;//&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125; &lt;span class=&quot;keyword&quot;&gt;else&lt;/span&gt; &amp;#123;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;        viewHolder = (ViewHolder) convertView.getTag();&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &amp;#125;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    Map map = list.get(position); &lt;span class=&quot;comment&quot;&gt;//Map&amp;lt;String, Object&amp;gt;&lt;/span&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    viewHolder.header.setImageResource((Integer) map.get(&lt;span class=&quot;string&quot;&gt;&quot;header&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    viewHolder.title.setText((String) map.get(&lt;span class=&quot;string&quot;&gt;&quot;title&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    viewHolder.version.setText((String) map.get(&lt;span class=&quot;string&quot;&gt;&quot;version&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    viewHolder.size.setText((String) map.get(&lt;span class=&quot;string&quot;&gt;&quot;size&quot;&lt;/span&gt;));&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;    &lt;span class=&quot;keyword&quot;&gt;return&lt;/span&gt; convertView;&lt;/span&gt;&lt;br&gt;&lt;span class=&quot;line&quot;&gt;&amp;#125;&lt;/span&gt;&lt;br&gt;&lt;/pre&gt;&lt;/td&gt;&lt;/tr&gt;&lt;/table&gt;&lt;/figure&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;ListView的优化&quot;&gt;&lt;a href=&quot;#ListView的优化&quot; class=&quot;headerlink&quot; title=&quot;ListView的优化&quot;&gt;&lt;/a&gt;ListView的优化&lt;/h3&gt;&lt;p&gt;1.存在问题&lt;/p&gt;
&lt;blockquote&gt;
&lt;p&gt; 在每次调用g
    
    </summary>
    
      <category term="Android" scheme="http://hlyin.space/categories/Android/"/>
    
    
  </entry>
  
  <entry>
    <title>操作系统重点</title>
    <link href="http://hlyin.space/OS/OS_review/"/>
    <id>http://hlyin.space/OS/OS_review/</id>
    <published>2016-01-04T16:00:00.000Z</published>
    <updated>2016-04-10T07:28:00.000Z</updated>
    
    <content type="html">&lt;h3 id=&quot;第一章、操作系统概述&quot;&gt;&lt;a href=&quot;#第一章、操作系统概述&quot; class=&quot;headerlink&quot; title=&quot;第一章、操作系统概述&quot;&gt;&lt;/a&gt;&lt;strong&gt;第一章、操作系统概述&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1、    OS的概念、特性&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;操作系统：&lt;/strong&gt;是计算机系统中的一个系统软件，是一些程序模块的集合——它们能以尽量&lt;strong&gt;有效地（系统运行效率和资源利用率）&lt;/strong&gt;组织和管理计算机的软硬件资源，&lt;strong&gt;合理（公平，不发生死锁和饥饿）&lt;/strong&gt;地组织计算机的工作流程，控制程序的执行，并向用户提供各种服务功能，使得用户能够灵活、&lt;strong&gt;方便（人机界面—包括用户使用界面和程序设计接口的易用性、易维护性）&lt;/strong&gt;、有效的使用计算机，并使整个计算机系统能高效地运行；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;OS特性：&lt;/strong&gt;&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;并发性：&lt;/strong&gt;计算机系统中同时运行着多个程序；处理多个同时性活动的能力，并发多个事件在同一时间间隔发生（CPU数量少于任务数），并行是多个事件在同一时刻发生（CPU数量多于任务数）；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;共享性：&lt;/strong&gt;操作系统与多个用户的程序共同使用计算机系统中的资源；包括：并发程序对处理器资源的共享、对主存和对外存的共享、对外设的共享；&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;随机性：&lt;/strong&gt;一般操作系统正处于什么样的状态中是无法确切知道的；操作系统必须随时对以不可预测次序发生的事件进行响应；由共享和并发引起&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;虚拟性：&lt;/strong&gt;一个物理实体映射为若干个对应的逻辑实体－－分时或分空间；虚拟是操作系统管理系统资源的重要手段，可提高资源利用率；&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;2、OS的功能&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;（1）进程管理：&lt;/strong&gt;完成处理机资源的分配调度等功能；包括：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ul&gt;
&lt;li&gt;&lt;strong&gt;进程控制：&lt;/strong&gt;创建、撤销、挂起、改变运行优先级等——主动改变进程的状态&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;进程同步：&lt;/strong&gt;协调并发进程之间的推进步骤，以协调资源共享；——交换信息能力（弱）&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;进程通信：&lt;/strong&gt;进程之间传送数据，以协调进程间的协作；——交换信息能力（强），也可以用来协调进程之间的推进&lt;/li&gt;
&lt;li&gt;&lt;strong&gt;进程调度：&lt;/strong&gt;作业和进程的运行切换，以充分利用处理机资源和提高系统性能；——未必是进程控制操作所引起（可能是时间片轮转、I/O操作）&lt;/li&gt;
&lt;/ul&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;（2）存储管理：&lt;/strong&gt;管理内存资源；功能：1、存储分配与回收；2、存储保护（保证进程间互不干扰、相互保密）；3、地址映射（变换）：进程逻辑地址到内存物理地址的映射；4、内存扩充（覆盖、交换和虚拟存储）：提高内存利用率、扩大进程的内存空间；&lt;br&gt;&lt;strong&gt;（3）文件管理：&lt;/strong&gt;目的是方便设备的使用，提高CPU与I/O设备利用率；文件存储空间管理、目录管理、文件的读写管理和存取控制；&lt;br&gt;&lt;strong&gt;（4）设备管理：&lt;/strong&gt;除了CPU和内存以外的所有输入输出设备的管理；&lt;br&gt;&lt;strong&gt;（5）作业管理和用户接口：&lt;/strong&gt; OS向用户提供使用它的手段；&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;3、OS的分类&lt;/strong&gt; &lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[x] （1）批处理系统：成批处理、作业流程自动化较高，资源利用率较高，作业吞吐量大，但用户交互性差、调试困难；&lt;/li&gt;
&lt;li&gt;[x] （2）分时系统：操作系统以时间片为单位，轮流为每个终端用户服务；&lt;/li&gt;
&lt;li&gt;[x] （3）实时系统：是指使计算机能及时响应外部事件的请求，在规定的严格时间内完成对该事件的处理，并控制所有实时设备和实时任务协调一致地工作的操作系统；&lt;/li&gt;
&lt;li&gt;[x] （4）嵌入式操作系统：运行在嵌入式系统环境中，对整个嵌入式系统以及它所操作、控制的各种部件装置等等资源进行统一协调、调度、指挥和控制的系统软件；&lt;/li&gt;
&lt;li&gt;[ ] （5）个人计算机操作系统；&lt;/li&gt;
&lt;li&gt;[ ] （6）网络操作系统：基于计算机网络，在各种计算机操作系统上按网络体系结构协议标准开发的软件；分布性、自治性、互连性、可见性；&lt;/li&gt;
&lt;li&gt;[ ] （7）分布式操作系统；透明性、灵活性、可靠性、高性能、可扩充性；&lt;/li&gt;
&lt;li&gt;[ ] （8）智能卡操作系统&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;第二章、操作系统的硬件环境&quot;&gt;&lt;a href=&quot;#第二章、操作系统的硬件环境&quot; class=&quot;headerlink&quot; title=&quot;第二章、操作系统的硬件环境&quot;&gt;&lt;/a&gt;&lt;strong&gt;第二章、操作系统的硬件环境&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1、特权指令、管态目态、程序状态字&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;特权指令：&lt;/strong&gt;指令系统中只能由操作系统使用的指令，不允许一般用户使用；特权指令一般引起处理器状态的切换，处理器通过特殊的机制将处理器状态切换到操作系统运行的特权状态&lt;strong&gt;（管态）&lt;/strong&gt;，然后将处理权移交给操作系统中的一段特殊代码，这一个过程称为&lt;strong&gt;陷入&lt;/strong&gt;；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;管态：&lt;/strong&gt;操作系统管理程序运行的状态，较高的特权级别，又称为特权态（特态）、核心态、系统态；&lt;strong&gt;目态→管态：&lt;/strong&gt;唯一途径是中断（广义）&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;目态：&lt;/strong&gt;用户程序运行时的状态，较低的特权级别，又称普通态（普态）、用户态；&lt;strong&gt;管态→目态：&lt;/strong&gt;设置PSW(修改程序状态字) 可实现&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PSW：&lt;/strong&gt;用一个专门的寄存器来指示处理器的状态；通常包括：&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;[x] CPU的工作状态码：指明管态还是目态，用来说明当前在CPU上执行的是操作系统还是一般用户，从而决定其是否可以使用特权指令或拥有其他的特殊权力；&lt;/li&gt;
&lt;li&gt;[x] 条件码：反映指令执行后的结果特征；&lt;/li&gt;
&lt;li&gt;[x] 中断屏蔽码：指出是否允许中断；&lt;/li&gt;
&lt;/ul&gt;
&lt;p&gt;&lt;img src=&quot;http://gitimage-10031767.file.myqcloud.com/blog_image/OS_review/os_psw.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;br&gt;&lt;strong&gt;2、多级存储体系&lt;/strong&gt;&lt;br&gt;存储系统设计三个问题：&lt;strong&gt;容量、速度和成本&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;多级存储体系，&lt;/strong&gt;解决存储系统设计的二律背反情况，从上往下为：&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;寄存器；&lt;/li&gt;
&lt;li&gt;高度缓存；&lt;/li&gt;
&lt;li&gt;内存；&lt;/li&gt;
&lt;li&gt;磁盘存储器；&lt;/li&gt;
&lt;li&gt;磁带和光盘存储器；&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;&lt;strong&gt;设计原理：&lt;/strong&gt;程序和数据存储访问的&lt;strong&gt;局部性原理&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;存储保护：&lt;/strong&gt;界地址寄存器和存储键&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;中断：&lt;/strong&gt;CPU在正常运行程序时，由于内、外部事件引起CPU暂时中止正在运行的程序，转而去执行请求CPU暂时中止的内、外部事件的服务程序，待该服务程序处理完毕后又返回到被中止的程序的过程；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;中断系统：&lt;/strong&gt;包括&lt;strong&gt;硬件中断装置&lt;/strong&gt;和&lt;strong&gt;软件中断处理程序&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;中断分类：&lt;/strong&gt;根据中断源划分为硬中断（外中断和内中断）和软中断（也叫陷阱或异常）&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;第三章、用户接口与作业管理&quot;&gt;&lt;a href=&quot;#第三章、用户接口与作业管理&quot; class=&quot;headerlink&quot; title=&quot;第三章、用户接口与作业管理&quot;&gt;&lt;/a&gt;&lt;strong&gt;第三章、用户接口与作业管理&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1、    作业的概念，作业级接口与程序级接口&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;（1）作业：&lt;/strong&gt;一次应用业务的处理过程中，从输入开始到输出结束，用户要求计算机所做的有关该次业务处理的全部工作；&lt;br&gt;从系统角度看，作业由&lt;strong&gt;程序，数据和作业说明书&lt;/strong&gt;组成，系统通过作业说明书控制文件形式的程序和数据，使之执行并对其进行操作。&lt;br&gt;作业的建立包括两个子过程：作业的输入、JCB的建立；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）作业级接口：&lt;/strong&gt;用于作业控制；对于不同作业，又分为两类：&lt;br&gt;&lt;strong&gt;a、    联机作业控制方式的接口&lt;/strong&gt;&lt;br&gt;用户敲入一条命令，控制就转入系统命令解释程序，对其进行解释，执行，完成要求的功能，之后控制又转回控制台或终端，用户又继续输入命令,如此反复直到完成；&lt;br&gt;&lt;strong&gt;b、    脱机作业控制方式的接口&lt;/strong&gt;&lt;br&gt;由一组作业控制语言组成，系统为脱机用户提供了作业控制语言；用户用此语言将事先考虑到的对作业的各种可能要求写成作业操作说明书，连同作业一起交给系统；系统运行该程序时，一边解释作业控制命令，一边执行该命令，如此反复直到完成；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（3）程序级接口：&lt;/strong&gt;系统为用户在程序一级提供有关服务设置的；由一组系统调用命令组成，负责管理和控制运行的程序，并在这些程序与系统控制的资源和提供的服务之间实现交互作用（可以是专门为程序员通过汇编程序与操作系统打交道提供的）；用汇编语言编程序的用户，可在程序中直接用这组系统调用命令；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、JCB：&lt;/strong&gt;作业控制块是批处理作业存在的标志，其中保存有系统对作业进行管理所需要的全部信息，它们被保存于磁盘区域中；&lt;br&gt;（1）JCB的内容：作业标识、作业状态、开始处理时间、作业完成时间等；&lt;br&gt;（2）JCB的建立：当一个作业开始由输入设备向磁盘的输入井传输时，系统输入程序为其建立一个作业控制块，并对其初始化；&lt;br&gt;（3）    JCB的撤销：由系统输出程序撤销。&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、作业状态及转换&lt;/strong&gt;&lt;br&gt;（1）进入状态；&lt;br&gt;（2）后备状态；作业全部信息存在外存的某些区域中等待调度，系统为后备作业建立作业控制块，并加入后备作业队列中，标志作业建立完成；&lt;br&gt;（3）运行状态；被作业调度选中，且分配了必要资源，建立了一组相应进程后，进入运行状态；运行状态的作业根据进程活动情况又分为3种状态，就绪态，运行态，等待态；&lt;br&gt;（4）完成状态；当作业正常运行结束或因发生错误终止；将其JCB从现行作业队列中除去，并回收资源；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、作业调度算法：FCFS/SJF/HRN&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;作业周转时间&lt;/strong&gt; = 结束时间 – 开始时间（即周转=等待+运行）；&lt;br&gt;&lt;strong&gt;响应比R&lt;/strong&gt; = 作业周转时间 / 作业运行时间 = 1 + 作业等待时间/作业运行时间；&lt;br&gt;此外还有基于优先数调度算法HPF、均衡调度算法等；&lt;br&gt;&lt;strong&gt;P81，多道环境下的作业调度&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;5、系统调用：&lt;/strong&gt;系统调用就是用户在程序中调用操作系统所提供的一些子功能；是特殊的过程滴啊用，由特殊的机器指令实现；除调用子程序外，还使系统转入特权方式，即进入管态；系统调用通常只能由汇编语言直接访问。系统调用是操作系统提供给编程人员的唯一接口，编程人员通过系统调用，动态请求和释放资源；&lt;br&gt;进程控制类、文件操作类、进程通信类、设备管理类、信息维护类；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;ex.课本P99页第6题&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;FCFS&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th&gt;作业&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;输入时间&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;进入内存时间&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;开始时间&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;结束时间&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;周转时间&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td&gt;JOB1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:00&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:00&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:00&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:25&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JOB2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:20&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:20&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:25&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:55&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;35&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JOB3&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:30&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11:30&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11:30&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11:40&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;70&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JOB4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:35&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:35&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:55&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11:15&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;40&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td&gt;JOB5&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:40&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:55&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11:15&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11:30&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;50&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;平均周转时间：（25＋35＋70＋40＋50）/5=44&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;SJF&lt;/strong&gt;&lt;/p&gt;
&lt;table&gt;
&lt;thead&gt;
&lt;tr&gt;
&lt;th style=&quot;text-align:center&quot;&gt;作业&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;输入时间&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;进入内存时间&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;开始时间&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;结束时间&lt;/th&gt;
&lt;th style=&quot;text-align:center&quot;&gt;周转时间&lt;/th&gt;
&lt;/tr&gt;
&lt;/thead&gt;
&lt;tbody&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;JOB1&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10：00&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:00&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:00&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:25&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;25&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;JOB2&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10：20&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:20&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:25&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:55&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;35&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;JOB3&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10：30&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11:30&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11:30&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11:40&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;70&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;JOB4&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10：35&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:35&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11:10&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11:30&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;55&lt;/td&gt;
&lt;/tr&gt;
&lt;tr&gt;
&lt;td style=&quot;text-align:center&quot;&gt;JOB5&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10：40&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:55&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;10:55&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;11:10&lt;/td&gt;
&lt;td style=&quot;text-align:center&quot;&gt;30&lt;/td&gt;
&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;
&lt;p&gt;平均周转时间：(25+35+70+55+30)/5=43&lt;/p&gt;
&lt;p&gt;&lt;br&gt;&lt;/p&gt;
&lt;h3 id=&quot;第四章、进程管理&quot;&gt;&lt;a href=&quot;#第四章、进程管理&quot; class=&quot;headerlink&quot; title=&quot;第四章、进程管理&quot;&gt;&lt;/a&gt;&lt;strong&gt;第四章、进程管理&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1、    程序的顺序执行的特点；多道程序并发执行的特点&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;（1）程序的顺序执行的特点：&lt;/strong&gt;顺序性、封闭性（程序执行结果由初始条件决定，不受外界因素影响）、程序执行结果的确定性、程序执行结果的可再现性；&lt;br&gt;&lt;strong&gt;（2）多道程序并发执行的特点：&lt;/strong&gt;并发程序在执行期间具有相互制约关系、程序与计算不再一一对应、并发程序执行结果不可再现&lt;br&gt;&lt;strong&gt;（3）多道程序环境特点：&lt;/strong&gt;独立性、随机性、资源共享性&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、    进程的概念；进程的状态及变迁；原语&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;（1） 进程：&lt;/strong&gt;进程是具有一定独立功能的程序关于某个数据集上的一次运行活动，是资源分配和调度的一个基本单位；&lt;br&gt;&lt;strong&gt;进程与程序的联系：&lt;/strong&gt;程序是进程的组成部分之一，从静态角度看，进程由程序、数据和PCB组成；一个进程可以执行多个程序，一个程序可以构成多个进程；&lt;br&gt;&lt;strong&gt;进程与程序的区别：&lt;/strong&gt;程序是静态的，进程是动态的；&lt;br&gt;&lt;strong&gt;进程的特性：&lt;/strong&gt;并发、动态、独立、交往、异步；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PCB：&lt;/strong&gt;为了便于系统控制和描述进程活动过程而在操作系统核心中为进程所定义的一个专门的数据结构，系统利用PCB来描述进程的基本情况以及进程的运行变化过程；&lt;strong&gt;PCB是进程存在的唯一标志；P&lt;/strong&gt;CB的内容可分为&lt;strong&gt;调度信息和现场信息&lt;/strong&gt;两大部分；&lt;br&gt;&lt;strong&gt;PCB组织方式：&lt;/strong&gt;线性方式、索引方式、链接方式；&lt;br&gt;&lt;strong&gt;进程队列：&lt;/strong&gt;就绪队列、等待队列、运行队列；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）进程的状态及变迁&lt;/strong&gt;&lt;br&gt;运行态、就绪态、等待态；P107&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（3）原语：&lt;/strong&gt;原语通常由若干条指令组成，用来实现某个特定的操作，通过一段不可分割或不可中断的程序实现其功能；原语的执行必须是连续的；原语是操作系统核心的一个组成部分，它必须在管态下执行，并且常驻内存；&lt;br&gt;创建原语、撤销原语、阻塞原语、唤醒原语&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、    进程互斥、临界资源、临界区；进程同步、信号量、PV操作&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;相关进程：&lt;/strong&gt;逻辑上具有某种联系的进程；&lt;br&gt;&lt;strong&gt;无关进程：&lt;/strong&gt;逻辑上没有任何联系的进程；&lt;br&gt;&lt;strong&gt;进程间相互作用：&lt;/strong&gt;直接相互作用（只发生在相关进程间）、间接相互作用；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;进程互斥：&lt;/strong&gt;进程间的间接相互作用构成进程互斥，如多个进程竞争打印机；&lt;br&gt;&lt;strong&gt;临界资源：&lt;/strong&gt;系统中一些资源一次只允许一个进程使用，这类资源称为临界资源或共享变量；&lt;br&gt;&lt;strong&gt;临界区：&lt;/strong&gt;在进程中访问临界资源的那一段程序称为临界区；临界区使用原则：有空让进、无空等待、多中择一、有限等待、让权等待（等待态放弃占用CPU）；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;进程同步：&lt;/strong&gt;进程同步是指进程之间一种直接的协同工作关系，是一些进程相互合作、共同完成一项任务；进程间的&lt;strong&gt;直接相互作用&lt;/strong&gt;构成进程的同步；直接制约问题；&lt;strong&gt;与次序相关（与时间有关，执行时序上的相互制约）；&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;同步机制：&lt;/strong&gt;解决进程同步；硬件同步机制、信号量及P、V操作、管程、条件临界域、路径表达式（集中式系统）、远程过程调用（分布式系统）；&lt;br&gt;&lt;strong&gt;信号量：&lt;/strong&gt;信号量是一种特殊的变量，它的表面形式是&lt;strong&gt;一个整型变量附加一个队列，&lt;/strong&gt;而且它只能被特殊的操作（即P操作和V操作）使用；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;P、V操作：&lt;/strong&gt;一种简单、易于实现的同步机制，包括P操作和V操作两个原语，P、V操作是对信号量实施操作，用P、V操作可实现进程的同步和互斥；&lt;br&gt;&lt;strong&gt;互斥操作时，P、V处于同一进程；同步操作时，不在同一进程中出现；同步P操作和互斥P操作一起出现时，同步P应在互斥P之前；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、    进程同步：生产者-消费者问题&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;（1）一个生产者，一个消费者，公用一个缓冲区&lt;br&gt;属于同步问题&lt;/strong&gt;&lt;br&gt;**&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;1、    程序的顺序执行的特点；多道程序并发执行的特点&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;（1）程序的顺序执行的特点：&lt;/strong&gt;顺序性、封闭性（程序执行结果由初始条件决定，不受外界因素影响）、程序执行结果的确定性、程序执行结果的可再现性；&lt;br&gt;&lt;strong&gt;（2）多道程序并发执行的特点：&lt;/strong&gt;并发程序在执行期间具有相互制约关系、程序与计算不再一一对应、并发程序执行结果不可再现&lt;br&gt;&lt;strong&gt;（3）多道程序环境特点：&lt;/strong&gt;独立性、随机性、资源共享性&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;2、    进程的概念；进程的状态及变迁；原语&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;（1） 进程：&lt;/strong&gt;进程是具有一定独立功能的程序关于某个数据集上的一次运行活动，是资源分配和调度的一个基本单位；&lt;br&gt;&lt;strong&gt;进程与程序的联系：&lt;/strong&gt;程序是进程的组成部分之一，从静态角度看，进程由程序、数据和PCB组成；一个进程可以执行多个程序，一个程序可以构成多个进程；&lt;br&gt;&lt;strong&gt;进程与程序的区别：&lt;/strong&gt;程序是静态的，进程是动态的；&lt;br&gt;&lt;strong&gt;进程的特性：&lt;/strong&gt;并发、动态、独立、交往、异步；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;PCB：&lt;/strong&gt;为了便于系统控制和描述进程活动过程而在操作系统核心中为进程所定义的一个专门的数据结构，系统利用PCB来描述进程的基本情况以及进程的运行变化过程；&lt;strong&gt;PCB是进程存在的唯一标志；P&lt;/strong&gt;CB的内容可分为&lt;strong&gt;调度信息和现场信息&lt;/strong&gt;两大部分；&lt;br&gt;&lt;strong&gt;PCB组织方式：&lt;/strong&gt;线性方式、索引方式、链接方式；&lt;br&gt;&lt;strong&gt;进程队列：&lt;/strong&gt;就绪队列、等待队列、运行队列；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（2）进程的状态及变迁&lt;/strong&gt;&lt;br&gt;运行态、就绪态、等待态；P107&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;（3）原语：&lt;/strong&gt;原语通常由若干条指令组成，用来实现某个特定的操作，通过一段不可分割或不可中断的程序实现其功能；原语的执行必须是连续的；原语是操作系统核心的一个组成部分，它必须在管态下执行，并且常驻内存；&lt;br&gt;创建原语、撤销原语、阻塞原语、唤醒原语&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;3、    进程互斥、临界资源、临界区；进程同步、信号量、PV操作&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;相关进程：&lt;/strong&gt;逻辑上具有某种联系的进程；&lt;br&gt;&lt;strong&gt;无关进程：&lt;/strong&gt;逻辑上没有任何联系的进程；&lt;br&gt;&lt;strong&gt;进程间相互作用：&lt;/strong&gt;直接相互作用（只发生在相关进程间）、间接相互作用；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;进程互斥：&lt;/strong&gt;进程间的间接相互作用构成进程互斥，如多个进程竞争打印机；&lt;br&gt;&lt;strong&gt;临界资源：&lt;/strong&gt;系统中一些资源一次只允许一个进程使用，这类资源称为临界资源或共享变量；&lt;br&gt;&lt;strong&gt;临界区：&lt;/strong&gt;在进程中访问临界资源的那一段程序称为临界区；临界区使用原则：有空让进、无空等待、多中择一、有限等待、让权等待（等待态放弃占用CPU）；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;进程同步：&lt;/strong&gt;进程同步是指进程之间一种直接的协同工作关系，是一些进程相互合作、共同完成一项任务；进程间的&lt;strong&gt;直接相互作用&lt;/strong&gt;构成进程的同步；直接制约问题；&lt;strong&gt;与次序相关（与时间有关，执行时序上的相互制约）；&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;同步机制：&lt;/strong&gt;解决进程同步；硬件同步机制、信号量及P、V操作、管程、条件临界域、路径表达式（集中式系统）、远程过程调用（分布式系统）；&lt;br&gt;&lt;strong&gt;信号量：&lt;/strong&gt;信号量是一种特殊的变量，它的表面形式是&lt;strong&gt;一个整型变量附加一个队列，&lt;/strong&gt;而且它只能被特殊的操作（即P操作和V操作）使用；&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;P、V操作：&lt;/strong&gt;一种简单、易于实现的同步机制，包括P操作和V操作两个原语，P、V操作是对信号量实施操作，用P、V操作可实现进程的同步和互斥；&lt;br&gt;&lt;strong&gt;互斥操作时，P、V处于同一进程；同步操作时，不在同一进程中出现；同步P操作和互斥P操作一起出现时，同步P应在互斥P之前；&lt;/strong&gt;&lt;/p&gt;
&lt;p&gt;&lt;strong&gt;4、    进程同步：生产者-消费者问题&lt;/strong&gt;&lt;br&gt;&lt;strong&gt;（1）一个生产者，一个消费者，公用一个缓冲区&lt;br&gt;属于同步问题&lt;/strong&gt;&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;h3 id=&quot;第一章、操作系统概述&quot;&gt;&lt;a href=&quot;#第一章、操作系统概述&quot; class=&quot;headerlink&quot; title=&quot;第一章、操作系统概述&quot;&gt;&lt;/a&gt;&lt;strong&gt;第一章、操作系统概述&lt;/strong&gt;&lt;/h3&gt;&lt;p&gt;&lt;strong&gt;1、    OS的概念、特
    
    </summary>
    
      <category term="OS" scheme="http://hlyin.space/categories/OS/"/>
    
    
  </entry>
  
  <entry>
    <title>扫雷GDI+实现</title>
    <link href="http://hlyin.space/ProjectImages/MineSweeping/"/>
    <id>http://hlyin.space/ProjectImages/MineSweeping/</id>
    <published>2015-12-18T16:00:00.000Z</published>
    <updated>2016-07-28T17:24:36.000Z</updated>
    
    <content type="html">&lt;p&gt;GDI+&lt;/p&gt;
&lt;p&gt;一、程序功能&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;难度选择功能；用户可以选择游戏等级：初级，中级，高级；&lt;/li&gt;
&lt;li&gt;基本游戏功能：用户左键点击雷区，若踩中地雷则游戏结束，否则显示所点雷块周围的地雷数目，若周围某一雷块没有地雷则自动翻开，即呈现出安全区；用户右键点击可以进行标记，标记有旗子和问号；&lt;/li&gt;
&lt;li&gt;计时与地雷数显示：计时器显示当前游戏进行实现、地雷数显示剩余的地雷（标记后减少、取消标记后恢复）；&lt;/li&gt;
&lt;li&gt;数据存储功能：用户在某一难度打破时间记录后更新排行榜并存储记录&lt;/li&gt;
&lt;/ol&gt;
&lt;/blockquote&gt;
&lt;p&gt;二、效果图&lt;/p&gt;
&lt;p&gt;初级开局时：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/minesweeping/minesweeping_easy.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;点击到地雷后，切换笑脸表情，计时器停止，切换点中的地雷图像&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/minesweeping/minesweeping_easy_lose.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;游戏胜利，停止计时器，提示用户胜利&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/minesweeping/minesweeping_easy_win.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;中级难度&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/minesweeping/minesweeping_normal_lose.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;高级难度&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/minesweeping/minesweeping_hard.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;三、关键部分实现&lt;br&gt;主要写一下雷区的实现原理和部分关键代码，雷区效果如下图所示：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/minesweeping/minesweeping_block.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;雷块（上图中的方格）的实现没有使用winform的button控件，而是使用C#的GDI+绘制出来。GDI+是GDI的后续版本，将应用程序与图形硬件相分离，通过GDI+提供的方法适当调用相应的驱动程序。&lt;/p&gt;
&lt;p&gt;雷区的数据结构是二维数组，二维数组的一维大小代表雷区行数，二维大小代表雷区列数，每个元素相当于一个雷块。考虑雷块的类型，由于雷块有较多的操作，因而可以将雷块封装成一个类MineBlock，包括的字段有：X、Y，表示雷块的坐标（在二维数组中的下标）；Status，表示雷块的状态（翻开、未翻开、插旗、问号、插旗差错、爆炸）；IsHover，表示鼠标是否悬浮在当前的雷块上（若是，则其颜色改变以示区分）；MineNum，表示当前雷块中的地雷情况，-1表示有地雷，1~8表示当前块没有地雷但是周围8个雷块中的地雷情况，0表示当前块和周围8个块都没有地雷；Visited表示当前块是否被访问过，在广度优先搜索中使用，类视图如下图：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/minesweeping/minesweeping_classview.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;因而二维数组的类型是上面设计的雷块类，MineBlock[,] mineBlock，因为扫雷游戏最多有32行64列，因而此数组初始化为这个大小。设置三个变量分别记录当前游戏难度的行数、列数、地雷数，在选择了不同游戏难度后根据这三个参数对mineBlock数组中元素实例化，设置相应的状态。&lt;/p&gt;
&lt;p&gt;雷区的第一步实现是将普通雷块绘制出来，为显示美观，将雷区居中，则对于程序实现即设置一个向右偏移量也即横向偏移量X_offset和向下偏移量也即竖向偏移量Y_offset，这两个偏移量通过制定的规则计算得到，对于每个雷块的绘制，则是根据偏移量和二维数组下标确定当前雷块在窗体中的位置，同样出于美观，各雷块间设置1px的间距，则得到雷块横坐标为X_offset + MineBlockLength &lt;em&gt; (i - 1) + 1，纵坐标为Y_offset + MineBlockLength &lt;/em&gt; (j - 1) + 1（这里列优先），则绘制雷块的代码为：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/minesweeping/minesweeping_code1.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;在列优先遍历二维数组mineBlock中，判断当前遍历元素的状态，若状态为未翻开，判断是否鼠标悬浮在此块（通过一个Point类对象获取鼠标焦点坐标，计算出其在二维数组中下标，以此判断），若不是（即为普通雷块），设置画刷Brush brush = new SolidBrush(Color.FromArgb(192, 192, 192)); 调用方法g.FillRectangle(brush, rect);绘制出灰色的雷块，为了让雷块有立体感，在雷块的下方和右方各划一条线，画线时设置画笔Pen pen = new Pen(new SolidBrush(Color.FromArgb(128,128,128))); 调用方法DrawLine，通过当前雷块的下标计算出线的起止坐标；若是（即鼠标悬浮的雷块），则设置画刷透明度以显示不同颜色的雷块，如：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/minesweeping/minesweeping_code2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;对于雷块其他状态，如插旗、插错旗（游戏结束时显示打叉的地雷图像）、点到地雷（显示红色地雷）以及初始化布雷时地雷图像，则通过g.DrawImage方法更换图像，图像添加在资源Resources.resx中，切换时计算图像应显示的坐标并设置其大小，如：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/minesweeping/minesweeping_code3.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;对于雷块标记的问号状态和点开雷块显示的数字，通过g.DrawString方法实现，先设置字符的显示大小，再依次和其数组下标来计算出字符应显示的坐标位置，如：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/minesweeping/minesweeping_code4.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;雷区绘制的基本原理如上所述，其具体实现时还有一些逻辑判断。&lt;/p&gt;
&lt;p&gt;上述绘制只是实现了一个静态的，并没有处理鼠标点击事件，因而雷区绘制的第二步是通过窗体的FormMain_MouseMove、FormMain_MouseDown、FormMain_MouseUp事件来将上一步绘制的静态雷区模拟成类似于Button控件的实现效果，即对用户的不同类型点击有不同的响应。&lt;/p&gt;
&lt;p&gt;首先对鼠标悬浮到的雷块进行区别显示，如下图，第一行第二列：&lt;br&gt;&lt;img src=&quot;http://gitimage-10031767.cos.myqcloud.com/project_image/minesweeping/minesweeping_block2.jpg&quot; alt=&quot;&quot;&gt;&lt;/p&gt;
&lt;p&gt;此功能的实现在MouseMove事件中，先判断鼠标是否在雷区内，若不是，将悬浮焦点mouseHoverBlock(Point类型)的X、Y属性置为0，表示雷区中不显示悬浮块，若在，则根据焦点坐标计算出当前悬浮的雷块在数组中的下标，并将mouseHoverBlock的X、Y属性置为对应下标，用于在重绘时进行判定，最后调用Refresh方法强制重绘窗体。&lt;/p&gt;
&lt;p&gt;其次处理鼠标的点击事件，点击分为左击和右击，在MouseDown时切换笑脸图标，在MouseUp也即点击完成时判断点击的类型并进行相应的处理。如果是左击，也即捕获到MouseButtons.Left，若点击的不是地雷且状态为未翻开，则广度优先搜索安全区，若点到地雷则游戏结束，停止计时、切换点击雷块的图像、切换笑脸图像并调用游戏结束函数；若点击的是右键，则根据当前点击雷块的状态进行点击后的图像切换和状态修改。在函数最后调用胜利判断函数，看点击以后用户是否胜利，此外在最后调用Refresh，重绘雷区被点击后的状态。&lt;/p&gt;
</content>
    
    <summary type="html">
    
      &lt;p&gt;GDI+&lt;/p&gt;
&lt;p&gt;一、程序功能&lt;/p&gt;
&lt;blockquote&gt;
&lt;ol&gt;
&lt;li&gt;难度选择功能；用户可以选择游戏等级：初级，中级，高级；&lt;/li&gt;
&lt;li&gt;基本游戏功能：用户左键点击雷区，若踩中地雷则游戏结束，否则显示所点雷块周围的地雷数目，若周围某一雷块没有地雷则
    
    </summary>
    
      <category term="ProjectImages" scheme="http://hlyin.space/categories/ProjectImages/"/>
    
    
  </entry>
  
</feed>
